var N=null,E="",T="t",U="u",searchIndex={};
var R=["Structure describing a hunk of a diff.","Options which can be specified to various fetch operations.","A rebase operation","The given commit is to be cherry-picked, but the client…","The given commit is to be squashed into the previous…","Invalid","Reference","Repository","Config","Object","Submodule","Describe","CherryPick","When a region of a file is changed in both branches, the…","Modified","Untracked","Unspecified","Progress","repobuilder","checkoutbuilder","Indicate whether the checkout should proceed on conflicts…","option","A forward iterator over the strings of an array, casted to…","Returns an iterator over the strings contained within this…","result","transport","is_empty","blamehunk","Returns signature of the commit.","signature","Returns line number where this hunk begins.","blameoptions","Track lines that have been copied from another file that…","reference","Return the name of the given local or remote branch.","Get the full raw message of a commit.","Get the full raw text of the commit header.","Get the short \"summary\" of the git commit message.","Creates a new iterator over the parents of this commit.","as_object","into_object","pathbuf","Get the value of an integer config variable.","get_bytes","configlevel","config","Set the value of an integer config variable in the config…","name_bytes","username","credentialhelper","describeformatoptions","Creates a new blank set of formatting options for a…","Sets the reference lookup strategy","difffile","diffoptions","update_index","Include unreadable files in the diff","old_file","new_file","diffbinaryfile","difffindoptions","ignore_whitespace","indexentry","get_path","indexmatchedpath","repository","mergeoptions","rename_threshold","Similarity to consider a file renamed (default 50)","Ignore all whitespace","ignore_whitespace_change","ignore_whitespace_eol","patience","Use the \"patience diff\" algorithm","Acquire a pointer to the underlying raw options.","committer","message_bytes","message","objecttype","object","commit","describeoptions","describe","from_str","foreach","pathspec","pathspecflags","pathspecmatchlist","diffdelta","rebaseoptions","from_raw","rebaseoperationtype","Get access to the underlying raw pointer.","Get the full name of a reference.","Get the full shorthand of a reference.","Get full name to the reference pointed to by a symbolic…","peel_to_blob","peel_to_commit","peel_to_tree","peel_to_tag","direction","is_valid_name","proxyoptions","remotecallbacks","stringarray","fetchoptions","autotagoption","remote_callbacks","Set the callbacks to use for the fetch operation.","proxy_options","Set the proxy options to use for the fetch operation.","connected","Get the remote repository's reference advertisement list.","update_tips","progress","Clone a remote repository.","references","branchtype","Lookup a reference to one of the objects in a repository.","Create a new symbolic reference.","annotatedcommit","submodule","treebuilder","Describes a commit","packbuilder","stashapplyoptions","repositoryinitoptions","revparsemode","statusoptions","include_untracked","include_ignored","include_unmodified","recurse_untracked_dirs","disable_pathspec_match","recurse_ignored_dirs","Override the native case sensitivity for the file system…","renames_from_rewrites","include_unreadable","include_unreadable_as_untracked","path_bytes","Access detailed information about the differences between…","Creates a default set of merge options.","checkout_options","Get the message of a tag","Get the name of a tag","Get the OID of the tagged object of a tag","Creates a new time structure from its components.","Get the id (SHA1) of a repository object","treeentry","Consumes Commit to be returned as an `Object`","Get the filename of a tree entry","to_owned","Returns an empty set of flags.","Returns the set containing all flags.","credentialtype","Returns the raw value of the flags currently stored.","from_bits","Convert from underlying bit representation, unless that…","from_bits_truncate","Convert from underlying bit representation, dropping any…","Returns `true` if no flags are currently stored.","Returns `true` if all flags are currently set.","intersects","Returns `true` if there are flags common to both `self`…","Returns `true` all of the flags in `other` are contained…","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the…","indexentryflag","contains","indexentryextendedflag","indexaddoption","is_default","repositoryopenflags","mergeanalysis","is_up_to_date","mergepreference","git_otype","Convert an object type to its string representation.","referencetype","CONFLICTED","is_conflicted","repositoryinitmode","INDEX_DELETED","INDEX_MODIFIED","submodulestatus","is_index_deleted","is_index_modified","checkoutnotificationtype","is_ignored","diffstatsformat","git_diff_stats_format_t","stashapplyflags","stashflags","borrow_mut","try_from","try_into","type_id","into_iter","clone_into","to_string","git2::build","git2::cert","git2::string_array","git2::oid_array","git2::transport","partial_cmp","ordering","indextime","default","errorcode","errorclass","repositorystate","filefavor","next_back","reflogentry","statusentry","resettype","clonelocal","diffbinarykind","statusshow","diffformat","size_hint","formatter","Returns the set difference of the two sets of flags.","sub_assign","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags…","bitand_assign","Disables all flags disabled in the set.","bitor_assign","Adds the set of flags.","bitxor_assign","Toggles the set of flags.","from_iter","Parse a hex-formatted object id into an Oid structure.","description","CredentialHelper","IndexConflict","IndexEntry","DiffBinaryKind","PackBuilderStage","RebaseOperationType","StatusShow","TreeWalkMode","TreeWalkResult","ErrorCode","ErrorClass","RepositoryState","Direction","ResetType","ObjectType","ReferenceType","BranchType","ConfigLevel","FileFavor","SubmoduleIgnore","DiffFormat","AutotagOption","FetchPrune","StashApplyProgress","CloneLocal","RepoBuilder","CheckoutBuilder","CertHostkey","StringArray","SmartSubtransport","Transport","BlameHunk","BlameOptions","BlobWriter","ConfigEntry","DescribeFormatOptions","DescribeOptions","DiffDelta","DiffOptions","DiffStats","DiffBinary","DiffBinaryFile","DiffFindOptions","AnnotatedCommit","MergeOptions","OdbObject","OdbWriter","PackBuilder","PathspecMatchList","ProxyOptions","RebaseOptions","RebaseOperation","References","ReflogEntry","RemoteHead","FetchOptions","PushOptions","RemoteConnection","RemoteCallbacks","RepositoryInitOptions","Signature","StatusOptions","StatusEntry","SubmoduleUpdateOptions","StashApplyOptions","IndexTime","TreeEntry","TreeBuilder","IntoCString","CredentialType","IndexEntryFlag","IndexEntryExtendedFlag","IndexAddOption","RepositoryOpenFlags","RevparseMode","MergeAnalysis","MergePreference","RepositoryInitMode","SubmoduleStatus","PathspecFlags","CheckoutNotificationType","DiffStatsFormat","StashApplyFlags","StashFlags","BlameIter","ConfigEntries","IndexConflicts","IndexEntries","PathspecFailedEntries","PathspecDiffEntries","PathspecEntries","ReferenceNames","ReflogIter","StatusIter","OdbReader","IterBytes","git2_curl","libgit2_sys","git_checkout_options","disable_filters","progress_cb","ancestor_label","our_label","their_label","sideband_progress","credentials","certificate_check","transfer_progress","push_update_reference","update_fetchhead","download_tags","hash_sha1","total_objects","indexed_objects","received_objects","local_objects","total_deltas","indexed_deltas","received_bytes","head_to_index","index_to_workdir","version","newest_commit","oldest_commit","lines_in_hunk","final_commit_id","final_signature","orig_commit_id","orig_signature","file_size","flags_extended","nanoseconds","include_depth","checkout_opts","fetch_opts","allow_fetch","callbacks","proxy_opts","custom_headers","git_repository_init_options","workdir_path","template_path","initial_head","origin_url","symref_target","old_start","old_lines","new_start","new_lines","old_lineno","new_lineno","num_lines","content_offset","ignore_submodules","notify_cb","context_lines","interhunk_lines","id_abbrev","old_prefix","new_prefix","rename_from_rewrite_threshold","copy_threshold","break_rewrite_threshold","rename_limit","similarity","contains_data","target_limit","recursion_limit","file_favor","read_header","exists_prefix","reflog_rename","reflog_delete","max_candidates_tags","only_follow_first_parent","show_commit_oid_as_fallback","abbreviated_size","always_use_long_format","dirty_suffix","git_stash_apply_options","progress_payload","rewrite_notes_ref","merge_options","git_error_code","git_error_t","git_ref_t","git_treewalk_mode","git_config_level_t","git_credtype_t","git_rebase_operation_t","git_time","git_index_time","git_strarray","git_oidarray","git_transfer_progress","git_blame_options","git_blame_hunk","git_index_entry","git_revspec","git_error","git_signature","git_clone_options","git_checkout_perfdata","git_remote_callbacks","git_fetch_options","git_push_update","git_cert_hostkey","git_cert_x509","git_diff_file","git_status_options","git_diff_delta","git_status_entry","git_config_entry","git_submodule_update_options","git_writestream","git_push_options","git_remote_head","git_diff_hunk","git_diff_line","git_diff_options","git_diff_find_options","git_diff_similarity_metric","git_diff_binary","git_diff_binary_file","git_merge_options","git_transport","git_odb_backend","git_refdb_backend","git_proxy_options","git_smart_subtransport_stream","git_smart_subtransport","git_smart_subtransport_definition","git_describe_options","git_describe_format_options","git_rebase_options","git_rebase_operation","git_branch_iterator","git_blame","git_commit","git_config","git_config_iterator","git_index","git_index_conflict_iterator","git_object","git_reference","git_reference_iterator","git_annotated_commit","git_refdb","git_refspec","git_remote","git_repository","git_revwalk","git_submodule","git_tree_entry","git_treebuilder","git_note_iterator","git_status_list","git_pathspec","git_pathspec_match_list","git_diff_stats","git_patch","git_rebase","git_reflog","git_reflog_entry","git_describe_result","git_packbuilder","git_odb_stream","git_odb_object","git_odb_writepack","git_worktree","LIBSSH2_SESSION","LIBSSH2_USERAUTH_KBDINT_PROMPT","LIBSSH2_USERAUTH_KBDINT_RESPONSE"];
searchIndex["git2"]={"doc":"libgit2 bindings for Rust","i":[[3,"Blame","git2","Opaque structure to hold blame results.",N,N],[3,R[272],E,"Structure that represents a blame hunk.",N,N],[3,R[325],E,"An iterator over the hunks in a blame.",N,N],[3,R[273],E,"Blame options",N,N],[3,"Blob",E,"A structure to represent a git [blob][1]",N,N],[3,R[274],E,"A structure to represent a git writestream for blobs",N,N],[3,"Branch",E,"A structure to represent a git [branch][1]",N,N],[3,"Branches",E,"An iterator over the branches inside of a repository.",N,N],[3,"Buf",E,"A structure to wrap an intermediate buffer used by libgit2.",N,N],[3,"Commit",E,"A structure to represent a git [commit][1]",N,N],[3,"Parents",E,"An iterator over the parent commits of a commit.",N,N],[3,R[8],E,"A structure representing a git configuration key/value store",N,N],[3,R[275],E,"A struct representing a certain entry owned by a `Config`…",N,N],[3,R[326],E,"An iterator over the `ConfigEntry` values of a `Config`…",N,N],[3,"Cred",E,"A structure to represent git credentials in libgit2.",N,N],[3,R[241],E,"Management of the gitcredentials(7) interface.",N,N],[12,R[48],E,"A public field representing the currently discovered…",0,N],[3,R[11],E,"The result of a `describe` operation on either an…",N,N],[3,R[276],E,"Options which can be used to customize how a description…",N,N],[3,R[277],E,"Options which indicate how a `Describe` is created.",N,N],[3,"Diff",E,"The diff object that contains all individual file deltas.",N,N],[3,R[278],E,"Description of changes to one entry.",N,N],[3,"DiffFile",E,"Description of one side of a delta.",N,N],[3,R[279],E,"Structure describing options about how the diff should be…",N,N],[3,"Deltas",E,"An iterator over the diffs in a delta",N,N],[3,R[281],E,"Structure describing the binary contents of a diff.",N,N],[3,R[282],E,"The contents of one of the files in a binary diff.",N,N],[3,"DiffLine",E,"Structure describing a line (or data span) of a diff.",N,N],[3,"DiffHunk",E,R[0],N,N],[3,R[280],E,R[0],N,N],[3,R[283],E,"Control behavior of rename and copy detection",N,N],[3,"Error",E,"A structure to represent errors coming out of libgit2.",N,N],[3,"Index",E,"A structure to represent a git [index][1]",N,N],[3,R[242],E,"A structure to represent the information returned when a…",N,N],[12,"ancestor",E,"The ancestor index entry of the two conflicting index…",1,N],[12,"our",E,"The index entry originating from the user's copy of the…",1,N],[12,"their",E,"The index entry originating from the external repository.…",1,N],[3,R[327],E,"An iterator over the conflicting entries in an index",N,N],[3,R[243],E,"A structure to represent an entry or a file inside of an…",N,N],[12,"ctime",E,E,2,N],[12,"mtime",E,E,2,N],[12,"dev",E,E,2,N],[12,"ino",E,E,2,N],[12,"mode",E,E,2,N],[12,"uid",E,E,2,N],[12,"gid",E,E,2,N],[12,R[370],E,E,2,N],[12,"id",E,E,2,N],[12,"flags",E,E,2,N],[12,R[371],E,E,2,N],[12,"path",E,E,2,N],[3,R[328],E,"An iterator over the entries in an index",N,N],[3,R[284],E,"A structure to represent an annotated commit, the input to…",N,N],[3,R[285],E,"Options to specify when merging.",N,N],[3,"Note",E,"A structure representing a [note][note] in git.",N,N],[3,"Notes",E,"An iterator over all of the notes within a repository.",N,N],[3,R[9],E,"A structure to represent a git [object][1]",N,N],[3,"Oid",E,"Unique identity of any object (commit, tree, blob, tag).",N,N],[3,R[288],E,"A builder for creating a packfile",N,N],[3,"Pathspec",E,"Structure representing a compiled pathspec used for…",N,N],[3,R[289],E,"List of filenames matching a pathspec.",N,N],[3,R[329],E,"Iterator over the failed list of pathspec items that did…",N,N],[3,R[330],E,"Iterator over the matching diff deltas.",N,N],[3,R[331],E,"Iterator over the matched paths in a pathspec.",N,N],[3,"Patch",E,"A structure representing the text changes in a single diff…",N,N],[3,R[290],E,R[1],N,N],[3,"Rebase",E,"Representation of a rebase",N,N],[3,R[291],E,"Rebase options",N,N],[3,R[292],E,R[2],N,N],[3,R[6],E,"A structure to represent a git [reference][1].",N,N],[3,R[293],E,"An iterator over the references in a repository.",N,N],[3,R[332],E,"An iterator over the names of references in a repository.",N,N],[3,"Reflog",E,"A reference log of a git repository.",N,N],[3,R[294],E,"An entry inside the reflog of a repository",N,N],[3,R[333],E,"An iterator over the entries inside of a reflog.",N,N],[3,"Refspec",E,"A structure to represent a git [refspec][1].",N,N],[3,"Remote",E,"A structure representing a [remote][1] of a git repository.",N,N],[3,R[298],E,"Holds callbacks for a connection to a `Remote`.…",N,N],[3,"Refspecs",E,"An iterator over the refspecs that a remote contains.",N,N],[3,R[295],E,"Description of a reference advertised bya remote server,…",N,N],[3,R[296],E,R[1],N,N],[3,R[297],E,"Options to control the behavior of a git push.",N,N],[3,R[299],E,"A structure to contain the callbacks which are invoked…",N,N],[3,R[17],E,"Struct representing the progress by an in-flight transfer.",N,N],[3,R[7],E,"An owned git repository, representing all state associated…",N,N],[3,R[300],E,"Options which can be used to configure how a repository is…",N,N],[3,"Revspec",E,"A revspec represents a range of revisions within a…",N,N],[3,"Revwalk",E,"A revwalk allows traversal of the commit graph defined by…",N,N],[3,R[301],E,"A Signature is used to indicate authorship of various…",N,N],[3,R[302],E,"Options that can be provided to `repo.statuses()` to…",N,N],[3,"Statuses",E,"A container for a list of status information about a…",N,N],[3,R[334],E,"An iterator over the statuses in a `Statuses` instance.",N,N],[3,R[303],E,"A structure representing an entry in the `Statuses`…",N,N],[3,R[305],E,"Stash application options structure",N,N],[3,R[10],E,"A structure to represent a git [submodule][1]",N,N],[3,R[304],E,"Options to update a submodule.",N,N],[3,"Tag",E,"A structure to represent a git [tag][1]",N,N],[3,"Time",E,"Time in a signature",N,N],[3,R[306],E,"Time structure used in a git index entry.",N,N],[3,"Tree",E,"A structure to represent a git [tree][1]",N,N],[3,R[307],E,"A structure representing an entry inside of a tree. An…",N,N],[3,"TreeIter",E,"An iterator over the entries in a tree.",N,N],[3,R[308],E,"Constructor for in-memory trees",N,N],[3,"Odb",E,"A structure to represent a git object database",N,N],[3,R[286],E,"An object from the Object Database.",N,N],[3,R[335],E,"A structure to represent a git ODB rstream",N,N],[3,R[287],E,"A structure to represent a git ODB wstream",N,N],[3,"Sort",E,"Orderings that may be specified for Revwalk iteration.",N,N],[3,R[310],E,"Types of credentials that can be requested by a credential…",N,N],[3,R[311],E,"Flags for the `flags` field of an IndexEntry.",N,N],[3,R[312],E,"Flags for the `extended_flags` field of an IndexEntry.",N,N],[3,R[313],E,"Flags for APIs that add files matching pathspec",N,N],[3,R[314],E,"Flags for `Repository::open_ext`",N,N],[3,R[315],E,"Flags for the return value of `Repository::revparse`",N,N],[3,R[316],E,"The results of `merge_analysis` indicating the merge…",N,N],[3,R[317],E,"The user's stated preference for merges.",N,N],[3,"Status",E,"Status flags for a single file",N,N],[3,R[318],E,"Mode options for RepositoryInitOptions",N,N],[3,R[319],E,"Return codes for submodule status.",N,N],[3,R[320],E,"...",N,N],[3,R[321],E,"Types of notifications emitted from checkouts.",N,N],[3,R[322],E,"Formatting options for diff stats",N,N],[3,R[323],E,E,N,N],[3,R[324],E,E,N,N],[4,R[244],E,"When producing a binary diff, the binary data returned…",N,N],[13,"None",E,"There is no binary delta",3,N],[13,"Literal",E,"The binary data is the literal contents of the file",3,N],[13,"Delta",E,"The binary data is the delta from one side to the other",3,N],[4,R[245],E,"Stages that are reported by the `PackBuilder` progress…",N,N],[13,"AddingObjects",E,"Adding objects to the pack",4,N],[13,"Deltafication",E,"Deltafication of the pack",4,N],[4,R[246],E,R[2],N,N],[13,"Pick",E,"The given commit is to be cherry-picked. The client should…",5,N],[13,"Reword",E,R[3],5,N],[13,"Edit",E,R[3],5,N],[13,"Squash",E,R[4],5,N],[13,"Fixup",E,R[4],5,N],[13,"Exec",E,"No commit will be cherry-picked. The client should run the…",5,N],[4,R[247],E,"Enumeration of possible methods of what can be shown…",N,N],[13,"Index",E,"Only gives status based on HEAD to index comparison, not…",6,N],[13,"Workdir",E,"Only gives status based on index to working directory…",6,N],[13,"IndexAndWorkdir",E,"The default, this roughly matches `git status --porcelain`…",6,N],[4,R[248],E,"A binary indicator of whether a tree walk should be…",N,N],[13,"PreOrder",E,"Runs the traversal in pre order.",7,N],[13,"PostOrder",E,"Runs the traversal in post order.",7,N],[4,R[249],E,"Possible return codes for tree walking callback functions.",N,N],[13,"Ok",E,"Continue with the traversal as normal.",8,N],[13,"Skip",E,"Skip the current node (in pre-order mode).",8,N],[13,"Abort",E,"Completely stop the traversal.",8,N],[4,R[250],E,"An enumeration of possible errors that can happen when…",N,N],[13,"GenericError",E,"Generic error",9,N],[13,"NotFound",E,"Requested object could not be found",9,N],[13,"Exists",E,"Object exists preventing operation",9,N],[13,"Ambiguous",E,"More than one object matches",9,N],[13,"BufSize",E,"Output buffer too short to hold data",9,N],[13,"User",E,"User-generated error",9,N],[13,"BareRepo",E,"Operation not allowed on bare repository",9,N],[13,"UnbornBranch",E,"HEAD refers to branch with no commits",9,N],[13,"Unmerged",E,"Merge in progress prevented operation",9,N],[13,"NotFastForward",E,"Reference was not fast-forwardable",9,N],[13,"InvalidSpec",E,"Name/ref spec was not in a valid format",9,N],[13,"Conflict",E,"Checkout conflicts prevented operation",9,N],[13,"Locked",E,"Lock file prevented operation",9,N],[13,R[14],E,"Reference value does not match expected",9,N],[13,"Auth",E,"Authentication error",9,N],[13,"Certificate",E,"Server certificate is invalid",9,N],[13,"Applied",E,"Patch/merge has already been applied",9,N],[13,"Peel",E,"The requested peel operation is not possible",9,N],[13,"Eof",E,"Unexpected EOF",9,N],[13,R[5],E,"Invalid operation or input",9,N],[13,"Uncommitted",E,"Uncommitted changes in index prevented operation",9,N],[13,"Directory",E,"Operation was not valid for a directory,",9,N],[4,R[251],E,"An enumeration of possible categories of things that can…",N,N],[13,"None",E,"Uncategorized",10,N],[13,"NoMemory",E,"Out of memory or insufficient allocated space",10,N],[13,"Os",E,"Syscall or standard system library error",10,N],[13,R[5],E,"Invalid input",10,N],[13,R[6],E,"Error resolving or manipulating a reference",10,N],[13,"Zlib",E,"ZLib failure",10,N],[13,R[7],E,"Bad repository state",10,N],[13,R[8],E,"Bad configuration",10,N],[13,"Regex",E,"Regex failure",10,N],[13,"Odb",E,"Bad object",10,N],[13,"Index",E,"Invalid index data",10,N],[13,R[9],E,"Error creating or obtaining an object",10,N],[13,"Net",E,"Network error",10,N],[13,"Tag",E,"Error manpulating a tag",10,N],[13,"Tree",E,"Invalid value in tree",10,N],[13,"Indexer",E,"Hashing or packing error",10,N],[13,"Ssl",E,"Error from SSL",10,N],[13,R[10],E,"Error involing submodules",10,N],[13,"Thread",E,"Threading error",10,N],[13,"Stash",E,"Error manipulating a stash",10,N],[13,"Checkout",E,"Checkout failure",10,N],[13,"FetchHead",E,"Invalid FETCH_HEAD",10,N],[13,"Merge",E,"Merge failure",10,N],[13,"Ssh",E,"SSH failure",10,N],[13,"Filter",E,"Error manipulating filters",10,N],[13,"Revert",E,"Error reverting commit",10,N],[13,"Callback",E,"Error from a user callback",10,N],[13,R[12],E,"Error cherry-picking commit",10,N],[13,R[11],E,"Can't describe object",10,N],[13,"Rebase",E,"Error during rebase",10,N],[13,"Filesystem",E,"Filesystem-related error",10,N],[4,R[252],E,"A listing of the possible states that a repository can be…",N,N],[13,"Clean",E,E,11,N],[13,"Merge",E,E,11,N],[13,"Revert",E,E,11,N],[13,"RevertSequence",E,E,11,N],[13,R[12],E,E,11,N],[13,"CherryPickSequence",E,E,11,N],[13,"Bisect",E,E,11,N],[13,"Rebase",E,E,11,N],[13,"RebaseInteractive",E,E,11,N],[13,"RebaseMerge",E,E,11,N],[13,"ApplyMailbox",E,E,11,N],[13,"ApplyMailboxOrRebase",E,E,11,N],[4,R[253],E,"An enumeration of the possible directions for a remote.",N,N],[13,"Fetch",E,"Data will be fetched (read) from this remote.",12,N],[13,"Push",E,"Data will be pushed (written) to this remote.",12,N],[4,R[254],E,"An enumeration of the operations that can be performed for…",N,N],[13,"Soft",E,"Move the head to the given commit.",13,N],[13,"Mixed",E,"Soft plus reset the index to the commit.",13,N],[13,"Hard",E,"Mixed plus changes in the working tree are discarded.",13,N],[4,R[255],E,"An enumeration all possible kinds objects may have.",N,N],[13,"Any",E,"Any kind of git object",14,N],[13,"Commit",E,"An object which corresponds to a git commit",14,N],[13,"Tree",E,"An object which corresponds to a git tree",14,N],[13,"Blob",E,"An object which corresponds to a git blob",14,N],[13,"Tag",E,"An object which corresponds to a git tag",14,N],[4,R[256],E,"An enumeration of all possile kinds of references.",N,N],[13,"Oid",E,"A reference which points at an object id.",15,N],[13,"Symbolic",E,"A reference which points at another reference.",15,N],[4,R[257],E,"An enumeration for the possible types of branches",N,N],[13,"Local",E,"A local branch not on a remote.",16,N],[13,"Remote",E,"A branch for a remote.",16,N],[4,R[258],E,"An enumeration of the possible priority levels of a config…",N,N],[13,"ProgramData",E,"System-wide on Windows, for compatibility with portable git",17,N],[13,"System",E,"System-wide configuration file, e.g. /etc/gitconfig",17,N],[13,"XDG",E,"XDG-compatible configuration file, e.g. ~/.config/git/config",17,N],[13,"Global",E,"User-specific configuration, e.g. ~/.gitconfig",17,N],[13,"Local",E,"Repository specific config, e.g. $PWD/.git/config",17,N],[13,"App",E,"Application specific configuration file",17,N],[13,"Highest",E,"Highest level available",17,N],[4,R[259],E,"Merge file favor options for `MergeOptions` instruct the…",N,N],[13,"Normal",E,"When a region of a file is changed in both branches, a…",18,N],[13,"Ours",E,R[13],18,N],[13,"Theirs",E,R[13],18,N],[13,"Union",E,R[13],18,N],[4,"Delta",E,"What type of change is described by a `DiffDelta`?",N,N],[13,"Unmodified",E,"No changes",19,N],[13,"Added",E,"Entry does not exist in old version",19,N],[13,"Deleted",E,"Entry does not exist in new version",19,N],[13,R[14],E,"Entry content changed between old and new",19,N],[13,"Renamed",E,"Entry was renamed between old and new",19,N],[13,"Copied",E,"Entry was copied from another old entry",19,N],[13,"Ignored",E,"Entry is ignored item in workdir",19,N],[13,R[15],E,"Entry is untracked item in workdir",19,N],[13,"Typechange",E,"Type of entry changed between old and new",19,N],[13,"Unreadable",E,"Entry is unreadable",19,N],[13,"Conflicted",E,"Entry in the index is conflicted",19,N],[4,R[260],E,"Submodule ignore values",N,N],[13,R[16],E,"Use the submodule's configuration",20,N],[13,"None",E,"Any change or untracked file is considered dirty",20,N],[13,R[15],E,"Only dirty if tracked files have changed",20,N],[13,"Dirty",E,"Only dirty if HEAD has moved",20,N],[13,"All",E,"Never dirty",20,N],[4,R[261],E,"Possible output formats for diff data",N,N],[13,"Patch",E,"full git diff",21,N],[13,"PatchHeader",E,"just the headers of the patch",21,N],[13,"Raw",E,"like git diff --raw",21,N],[13,"NameOnly",E,"like git diff --name-only",21,N],[13,"NameStatus",E,"like git diff --name-status",21,N],[4,R[262],E,"Automatic tag following options.",N,N],[13,R[16],E,"Use the setting from the remote's configuration",22,N],[13,"Auto",E,"Ask the server for tags pointing to objects we're already…",22,N],[13,"None",E,"Don't ask for any tags beyond the refspecs",22,N],[13,"All",E,"Ask for all the tags",22,N],[4,R[263],E,"Configuration for how pruning is done on a fetch",N,N],[13,R[16],E,"Use the setting from the configuration",23,N],[13,"On",E,"Force pruning on",23,N],[13,"Off",E,"Force pruning off",23,N],[4,R[264],E,E,N,N],[13,"None",E,"None",24,N],[13,"LoadingStash",E,"Loading the stashed data from the object database",24,N],[13,"AnalyzeIndex",E,"The stored index is being analyzed",24,N],[13,"AnalyzeModified",E,"The modified files are being analyzed",24,N],[13,"AnalyzeUntracked",E,"The untracked and ignored files are being analyzed",24,N],[13,"CheckoutUntracked",E,"The untracked files are being written to disk",24,N],[13,"CheckoutModified",E,"The modified files are being written to disk",24,N],[13,"Done",E,"The stash was applied successfully",24,N],[5,"message_prettify",E,"Clean up a message, removing extraneous whitespace, and…",N,[[[T],[R[21],["u8"]]],[R[24],["string","error"]]]],[0,"build",E,"Builder-pattern objects for configuration various git…",N,N],[3,R[266],R[202],"A builder struct which is used to build configuration for…",N,N],[3,R[267],E,"A builder struct for configuring checkouts of a repository.",N,N],[4,R[265],E,"Options that can be passed to `RepoBuilder::clone_local`.",N,N],[13,"Auto",E,"Auto-detect (default)",25,N],[13,"Local",E,"Bypass the git-aware transport even for `file://` urls.",25,N],[13,"None",E,"Never bypass the git-aware transport",25,N],[13,"NoLinks",E,"Bypass the git-aware transport, but don't try to use…",25,N],[6,"RemoteCreate",E,"Type of callback passed to `RepoBuilder::remote_create`.",N,N],[6,R[17],E,"Checkout progress notification callback.",N,N],[6,"Notify",E,"Checkout notifications callback.",N,N],[11,"new",E,"Creates a new repository builder with all of the default…",26,[[],[R[18]]]],[11,"bare",E,"Indicate whether the repository will be cloned as a bare…",26,[[["self"],["bool"]],[R[18]]]],[11,"branch",E,"Specify the name of the branch to check out after the clone.",26,[[["self"],["str"]],[R[18]]]],[11,"clone_local",E,"Configures options for bypassing the git-aware transport…",26,[[["self"],[R[219]]],[R[18]]]],[11,"with_checkout",E,"Configure the checkout which will be performed by…",26,[[["self"],[R[19]]],[R[18]]]],[11,"fetch_options",E,"Options which control the fetch, including callbacks.",26,[[["self"],[R[105]]],[R[18]]]],[11,"remote_create",E,"Configures a callback used to create the git remote, prior…",26,[[["self"],["f"]],[R[18]]]],[11,"clone",E,R[115],26,[[["self"],["str"],["path"]],[R[24],[R[65],"error"]]]],[11,"new",E,"Creates a new builder for checkouts with all of its…",27,[[],[R[19]]]],[11,"dry_run",E,"Indicate that this checkout should perform a dry run by…",27,[[["self"]],[R[19]]]],[11,"force",E,"Take any action necessary to get the working directory to…",27,[[["self"]],[R[19]]]],[11,"safe",E,"Indicate that the checkout should be performed safely,…",27,[[["self"]],[R[19]]]],[11,"recreate_missing",E,"In safe mode, create files that don't exist.",27,[[["self"],["bool"]],[R[19]]]],[11,"allow_conflicts",E,"In safe mode, apply safe file updates even when there are…",27,[[["self"],["bool"]],[R[19]]]],[11,"remove_untracked",E,"Remove untracked files from the working dir.",27,[[["self"],["bool"]],[R[19]]]],[11,"remove_ignored",E,"Remove ignored files from the working dir.",27,[[["self"],["bool"]],[R[19]]]],[11,"update_only",E,"Only update the contents of files that already exist.",27,[[["self"],["bool"]],[R[19]]]],[11,R[55],E,"Prevents checkout from writing the updated files'…",27,[[["self"],["bool"]],[R[19]]]],[11,"refresh",E,"Indicate whether the index and git attributes should be…",27,[[["self"],["bool"]],[R[19]]]],[11,"skip_unmerged",E,"Skip files with unmerged index entries.",27,[[["self"],["bool"]],[R[19]]]],[11,"use_ours",E,R[20],27,[[["self"],["bool"]],[R[19]]]],[11,"use_theirs",E,R[20],27,[[["self"],["bool"]],[R[19]]]],[11,"overwrite_ignored",E,"Indicate whether ignored files should be overwritten…",27,[[["self"],["bool"]],[R[19]]]],[11,"conflict_style_merge",E,"Indicate whether a normal merge file should be written for…",27,[[["self"],["bool"]],[R[19]]]],[11,"notify_on",E,"Specify for which notification types to invoke the…",27,[[["self"],[R[189]]],[R[19]]]],[11,"conflict_style_diff3",E,"Indicates whether to include common ancestor data in diff3…",27,[[["self"],["bool"]],[R[19]]]],[11,R[340],E,"Indicate whether to apply filters like CRLF conversion.",27,[[["self"],["bool"]],[R[19]]]],[11,"dir_perm",E,"Set the mode with which new directories are created.",27,[[["self"],["i32"]],[R[19]]]],[11,"file_perm",E,"Set the mode with which new files are created.",27,[[["self"],["i32"]],[R[19]]]],[11,"path",E,"Add a path to be checked out.",27,[[["self"],[T]],[R[19]]]],[11,"target_dir",E,"Set the directory to check out to",27,[[["self"],["path"]],[R[19]]]],[11,R[342],E,"The name of the common ancestor side of conflicts",27,[[["self"],["str"]],[R[19]]]],[11,R[343],E,"The name of the common our side of conflicts",27,[[["self"],["str"]],[R[19]]]],[11,R[344],E,"The name of the common their side of conflicts",27,[[["self"],["str"]],[R[19]]]],[11,R[114],E,"Set a callback to receive notifications of checkout…",27,[[["self"],["f"]],[R[19]]]],[11,"notify",E,"Set a callback to receive checkout notifications.",27,[[["self"],["f"]],[R[19]]]],[11,"configure",E,"Configure a raw checkout options based on this…",27,[[["self"],[R[339]]]]],[0,"cert","git2","Certificate types which are passed to `CertificateCheck`…",N,N],[3,"Cert",R[203],"A certificate for a remote connection, viewable as one of…",N,N],[3,R[268],E,"Hostkey information taken from libssh2",N,N],[3,"CertX509",E,"X.509 certificate information",N,N],[11,"as_hostkey",E,"Attempt to view this certificate as an SSH hostkey.",28,[[["self"]],[R[21],["certhostkey"]]]],[11,"as_x509",E,"Attempt to view this certificate as an X.509 certificate.",28,[[["self"]],[R[21],["certx509"]]]],[11,"hash_md5",E,"Returns the md5 hash of the hostkey, if available.",29,[[["self"]],[R[21]]]],[11,R[352],E,"Returns the SHA-1 hash of the hostkey, if available.",29,[[["self"]],[R[21]]]],[11,"data",E,"Return the X.509 certificate data as a byte slice",30,N],[0,"string_array","git2","Bindings to libgit2's raw `git_strarray` type",N,N],[3,R[269],R[204],"A string array structure used by libgit2",N,N],[3,"Iter",E,R[22],N,N],[3,R[336],E,R[22],N,N],[11,"get",E,"Returns None if the i'th string is not utf8 or if i is out…",31,[[["self"],["usize"]],[R[21],["str"]]]],[11,R[43],E,"Returns None if `i` is out of bounds.",31,[[["self"],["usize"]],[R[21]]]],[11,"iter",E,R[23],31,[[["self"]],["iter"]]],[11,"iter_bytes",E,R[23],31,[[["self"]],["iterbytes"]]],[11,"len",E,"Returns the number of strings in this array.",31,[[["self"]],["usize"]]],[11,R[26],E,"Return `true` if this array is empty.",31,[[["self"]],["bool"]]],[0,"oid_array","git2","Bindings to libgit2's raw `git_oidarray` type",N,N],[3,"OidArray",R[205],"An oid array structure used by libgit2",N,N],[0,R[25],"git2","Interfaces for adding custom transports to libgit2",N,N],[3,R[271],R[206],"A transport is a structure which knows how to transfer…",N,N],[4,"Service",E,"Actions that a smart transport can ask a subtransport to…",N,N],[13,"UploadPackLs",E,E,32,N],[13,"UploadPack",E,E,32,N],[13,"ReceivePackLs",E,E,32,N],[13,"ReceivePack",E,E,32,N],[5,"register",E,"Add a custom transport definition, to be used in addition…",N,[[["str"],["f"]],[R[24],["error"]]]],[8,R[270],E,"Interface used by smart transports.",N,N],[10,"action",E,"Indicates that this subtransport will be performing the…",33,[[["self"],["str"],["service"]],[R[24],["box","error"]]]],[10,"close",E,"Terminates a connection with the remote.",33,[[["self"]],[R[24],["error"]]]],[8,"SmartSubtransportStream",E,"An instance of a stream over which a smart transport will…",N,N],[11,"smart",E,"Creates a new transport which will use the \"smart\"…",34,[[["remote"],["bool"],["s"]],[R[24],[R[25],"error"]]]],[11,"len","git2","Gets the number of hunks that exist in the blame structure.",35,[[["self"]],["usize"]]],[11,R[26],E,"Return `true` is there is no hunk in the blame structure.",35,[[["self"]],["bool"]]],[11,"get_index",E,"Gets the blame hunk at the given index.",35,[[["self"],["usize"]],[R[21],[R[27]]]]],[11,"get_line",E,"Gets the hunk that relates to the given line number in the…",35,[[["self"],["usize"]],[R[21],[R[27]]]]],[11,"iter",E,"Returns an iterator over the hunks in this blame.",35,[[["self"]],["blameiter"]]],[11,R[366],E,"Returns OID of the commit where this line was last changed",36,[[["self"]],["oid"]]],[11,R[367],E,R[28],36,[[["self"]],[R[29]]]],[11,"final_start_line",E,R[30],36,[[["self"]],["usize"]]],[11,R[368],E,"Returns the OID of the commit where this hunk was found.",36,[[["self"]],["oid"]]],[11,R[369],E,R[28],36,[[["self"]],[R[29]]]],[11,"orig_start_line",E,R[30],36,[[["self"]],["usize"]]],[11,"path",E,"Returns path to the file where this hunk originated.",36,[[["self"]],[R[21],["path"]]]],[11,"is_boundary",E,"Tests whether this hunk has been tracked to a boundary…",36,[[["self"]],["bool"]]],[11,R[365],E,"Returns number of lines in this hunk.",36,[[["self"]],["usize"]]],[11,"new",E,"Initialize options",37,[[],[R[31]]]],[11,"track_copies_same_file",E,"Track lines that have moved within a file.",37,[[["self"],["bool"]],[R[31]]]],[11,"track_copies_same_commit_moves",E,"Track lines that have moved across files in the same commit.",37,[[["self"],["bool"]],[R[31]]]],[11,"track_copies_same_commit_copies",E,R[32],37,[[["self"],["bool"]],[R[31]]]],[11,"track_copies_any_commit_copies",E,R[32],37,[[["self"],["bool"]],[R[31]]]],[11,"first_parent",E,"Restrict the search of commits to those reachable…",37,[[["self"],["bool"]],[R[31]]]],[11,R[363],E,"Setter for the id of the newest commit to consider.",37,[[["self"],["oid"]],[R[31]]]],[11,R[364],E,"Setter for the id of the oldest commit to consider.",37,[[["self"],["oid"]],[R[31]]]],[11,"id",E,"Get the id (SHA1) of a repository blob",38,[[["self"]],["oid"]]],[11,"is_binary",E,"Determine if the blob content is most certainly binary or…",38,[[["self"]],["bool"]]],[11,"content",E,"Get the content of this blob.",38,N],[11,R[39],E,"Casts this Blob to be usable as an `Object`",38,[[["self"]],[R[79]]]],[11,R[40],E,"Consumes Blob to be returned as an `Object`",38,[[["self"]],[R[79]]]],[11,R[80],E,"Finalize blob writing stream and write the blob to the…",39,[[["self"]],[R[24],["oid","error"]]]],[11,"wrap",E,"Creates Branch type from a Reference",40,[[[R[33]]],["branch"]]],[11,"get",E,"Gain access to the reference that is this branch",40,[[["self"]],[R[33]]]],[11,"into_reference",E,"Take ownership of the underlying reference.",40,[[["self"]],[R[33]]]],[11,"delete",E,"Delete an existing branch reference.",40,[[["self"]],[R[24],["error"]]]],[11,"is_head",E,"Determine if the current local branch is pointed at by HEAD.",40,[[["self"]],["bool"]]],[11,"rename",E,"Move/rename an existing local branch reference.",40,[[["self"],["str"],["bool"]],[R[24],["branch","error"]]]],[11,"name",E,R[34],40,[[["self"]],[R[24],[R[21],"error"]]]],[11,R[47],E,R[34],40,[[["self"]],[R[24],["error"]]]],[11,"upstream",E,"Return the reference supporting the remote tracking…",40,[[["self"]],[R[24],["branch","error"]]]],[11,"set_upstream",E,"Set the upstream configuration for a given local branch.",40,[[["self"],[R[21],["str"]]],[R[24],["error"]]]],[11,R[90],E,"Creates a new iterator from the raw pointer given.",41,N],[11,"new",E,"Creates a new empty buffer.",42,[[],["buf"]]],[11,"as_str",E,"Attempt to view this buffer as a string slice.",42,[[["self"]],[R[21],["str"]]]],[11,"id",E,"Get the id (SHA1) of a repository commit",43,[[["self"]],["oid"]]],[11,"tree_id",E,"Get the id of the tree pointed to by this commit.",43,[[["self"]],["oid"]]],[11,"tree",E,"Get the tree pointed to by a commit.",43,[[["self"]],[R[24],["tree","error"]]]],[11,"raw",E,R[92],43,N],[11,R[77],E,"Get the full message of a commit.",43,[[["self"]],[R[21],["str"]]]],[11,R[76],E,"Get the full message of a commit as a byte slice.",43,N],[11,"message_encoding",E,"Get the encoding for the message of a commit, as a string…",43,[[["self"]],[R[21],["str"]]]],[11,"message_raw",E,R[35],43,[[["self"]],[R[21],["str"]]]],[11,"message_raw_bytes",E,R[35],43,N],[11,"raw_header",E,R[36],43,[[["self"]],[R[21],["str"]]]],[11,"raw_header_bytes",E,R[36],43,N],[11,"summary",E,R[37],43,[[["self"]],[R[21],["str"]]]],[11,"summary_bytes",E,R[37],43,[[["self"]],[R[21]]]],[11,"time",E,"Get the commit time (i.e. committer time) of a commit.",43,[[["self"]],["time"]]],[11,"parents",E,R[38],43,[[["self"]],["parents"]]],[11,"parent_ids",E,R[38],43,[[["self"]],["parentids"]]],[11,"author",E,"Get the author of this commit.",43,[[["self"]],[R[29]]]],[11,R[75],E,"Get the committer of this commit.",43,[[["self"]],[R[29]]]],[11,"amend",E,"Amend this existing commit with all non-`None` values",43,[[["self"],[R[21],["str"]],[R[21],[R[29]]],[R[21],[R[29]]],[R[21],["str"]],[R[21],["str"]],[R[21],["tree"]]],[R[24],["oid","error"]]]],[11,"parent_count",E,"Get the number of parents of this commit.",43,[[["self"]],["usize"]]],[11,"parent",E,"Get the specified parent of the commit.",43,[[["self"],["usize"]],[R[24],[R[80],"error"]]]],[11,"parent_id",E,"Get the specified parent id of the commit.",43,[[["self"],["usize"]],[R[24],["oid","error"]]]],[11,R[39],E,"Casts this Commit to be usable as an `Object`",43,[[["self"]],[R[79]]]],[11,R[40],E,R[149],43,[[["self"]],[R[79]]]],[11,"new",E,"Allocate a new configuration object",44,[[],[R[24],[R[45],"error"]]]],[11,"open",E,"Create a new config instance containing a single on-disk…",44,[[["path"]],[R[24],[R[45],"error"]]]],[11,"open_default",E,"Open the global, XDG and system configuration files",44,[[],[R[24],[R[45],"error"]]]],[11,"find_global",E,"Locate the path to the global configuration file",44,[[],[R[24],[R[41],"error"]]]],[11,"find_system",E,"Locate the path to the system configuration file",44,[[],[R[24],[R[41],"error"]]]],[11,"find_xdg",E,"Locate the path to the global xdg compatible configuration…",44,[[],[R[24],[R[41],"error"]]]],[11,"add_file",E,"Add an on-disk config file instance to an existing config",44,[[["self"],["path"],[R[44]],["bool"]],[R[24],["error"]]]],[11,"remove",E,"Delete a config variable from the config file with the…",44,[[["self"],["str"]],[R[24],["error"]]]],[11,"remove_multivar",E,"Remove multivar config variables in the config file with…",44,[[["self"],["str"],["str"]],[R[24],["error"]]]],[11,"get_bool",E,"Get the value of a boolean config variable.",44,[[["self"],["str"]],[R[24],["bool","error"]]]],[11,"get_i32",E,R[42],44,[[["self"],["str"]],[R[24],["i32","error"]]]],[11,"get_i64",E,R[42],44,[[["self"],["str"]],[R[24],["i64","error"]]]],[11,"get_str",E,"Get the value of a string config variable.",44,[[["self"],["str"]],[R[24],["str","error"]]]],[11,R[43],E,"Get the value of a string config variable as a byte slice.",44,[[["self"],["str"]],[R[24],["error"]]]],[11,"get_string",E,"Get the value of a string config variable as an owned…",44,[[["self"],["str"]],[R[24],["string","error"]]]],[11,R[63],E,"Get the value of a path config variable as an owned .",44,[[["self"],["str"]],[R[24],[R[41],"error"]]]],[11,"get_entry",E,"Get the ConfigEntry for a config variable.",44,[[["self"],["str"]],[R[24],["configentry","error"]]]],[11,"entries",E,"Iterate over all the config variables",44,[[["self"],[R[21],["str"]]],[R[24],["configentries","error"]]]],[11,"open_global",E,"Open the global/XDG configuration file according to git's…",44,[[["self"]],[R[24],[R[45],"error"]]]],[11,"open_level",E,"Build a single-level focused config object from a…",44,[[["self"],[R[44]]],[R[24],[R[45],"error"]]]],[11,"set_bool",E,"Set the value of a boolean config variable in the config…",44,[[["self"],["str"],["bool"]],[R[24],["error"]]]],[11,"set_i32",E,R[46],44,[[["self"],["str"],["i32"]],[R[24],["error"]]]],[11,"set_i64",E,R[46],44,[[["self"],["str"],["i64"]],[R[24],["error"]]]],[11,"set_multivar",E,"Set the value of an multivar config variable in the config…",44,[[["self"],["str"],["str"],["str"]],[R[24],["error"]]]],[11,"set_str",E,"Set the value of a string config variable in the config…",44,[[["self"],["str"],["str"]],[R[24],["error"]]]],[11,"snapshot",E,"Create a snapshot of the configuration",44,[[["self"]],[R[24],[R[45],"error"]]]],[11,"parse_bool",E,"Parse a string as a bool. Interprets \"true\", \"yes\", \"on\",…",44,[[["s"]],[R[24],["bool","error"]]]],[11,"parse_i32",E,"Parse a string as an i32; handles suffixes like k, M, or…",44,[[["s"]],[R[24],["i32","error"]]]],[11,"parse_i64",E,"Parse a string as an i64; handles suffixes like k, M, or…",44,[[["s"]],[R[24],["i64","error"]]]],[11,"name",E,"Gets the name of this entry.",45,[[["self"]],[R[21],["str"]]]],[11,R[47],E,"Gets the name of this entry as a byte slice.",45,N],[11,"value",E,"Gets the value of this entry.",45,[[["self"]],[R[21],["str"]]]],[11,"value_bytes",E,"Gets the value of this entry as a byte slice.",45,N],[11,"level",E,"Gets the configuration level of this entry.",45,[[["self"]],[R[44]]]],[11,R[373],E,"Depth of includes where this variable was found",45,[[["self"]],["u32"]]],[11,R[210],E,"Create a \"default\" credential usable for Negotiate…",46,[[],[R[24],["cred","error"]]]],[11,"ssh_key_from_agent",E,"Create a new ssh key credential object used for querying…",46,[[["str"]],[R[24],["cred","error"]]]],[11,"ssh_key",E,"Create a new passphrase-protected ssh key credential object.",46,[[["str"],[R[21],["path"]],["path"],[R[21],["str"]]],[R[24],["cred","error"]]]],[11,"ssh_key_from_memory",E,"Create a new ssh key credential object reading the keys…",46,[[["str"],[R[21],["str"]],["str"],[R[21],["str"]]],[R[24],["cred","error"]]]],[11,"userpass_plaintext",E,"Create a new plain-text username and password credential…",46,[[["str"],["str"]],[R[24],["cred","error"]]]],[11,"credential_helper",E,"Attempt to read `credential.helper` according to…",46,[[[R[45]],["str"],[R[21],["str"]]],[R[24],["cred","error"]]]],[11,R[48],E,"Create a credential to specify a username.",46,[[["str"]],[R[24],["cred","error"]]]],[11,"has_username",E,"Check whether a credential object contains username…",46,[[["self"]],["bool"]]],[11,"credtype",E,"Return the type of credentials that this object represents.",46,[[["self"]],[R[429]]]],[11,"unwrap",E,"Unwrap access to the underlying raw pointer, canceling the…",46,N],[11,"new",E,"Create a new credential helper object which will be used…",0,[[["str"]],[R[49]]]],[11,R[48],E,"Set the username that this credential helper will query…",0,[[["self"],[R[21],["str"]]],[R[49]]]],[11,R[45],E,"Query the specified configuration object to discover…",0,[[["self"],[R[45]]],[R[49]]]],[11,"execute",E,"Execute this helper, attempting to discover a…",0,[[["self"]],[R[21]]]],[11,"format",E,"Prints this describe result, returning the result as a…",47,[[["self"],[R[21],[R[50]]]],[R[24],["string","error"]]]],[11,"new",E,R[51],48,[[],[R[50]]]],[11,R[417],E,"Sets the size of the abbreviated commit id to use.",48,[[["self"],["u32"]],["self"]]],[11,R[418],E,"Sets whether or not the long format is used even when a…",48,[[["self"],["bool"]],["self"]]],[11,R[419],E,"If the workdir is dirty and this is set, this string will…",48,[[["self"],["str"]],["self"]]],[11,"new",E,R[51],49,[[],[R[81]]]],[11,R[414],E,E,49,[[["self"],["u32"]],["self"]]],[11,"describe_tags",E,R[52],49,[[["self"]],["self"]]],[11,"describe_all",E,R[52],49,[[["self"]],["self"]]],[11,R[415],E,"Indicates when calculating the distance from the matching…",49,[[["self"],["bool"]],["self"]]],[11,R[416],E,"If no matching tag or reference is found whether a…",49,[[["self"],["bool"]],["self"]]],[11,"pattern",E,E,49,[[["self"],["str"]],["self"]]],[11,"merge",E,"Merge one diff into another.",50,[[["self"],["diff"]],[R[24],["error"]]]],[11,"deltas",E,"Returns an iterator over the deltas in this diff.",50,[[["self"]],["deltas"]]],[11,"get_delta",E,"Return the diff delta for an entry in the diff list.",50,[[["self"],["usize"]],[R[21],[R[88]]]]],[11,"is_sorted_icase",E,"Check if deltas are sorted case sensitively or…",50,[[["self"]],["bool"]]],[11,"print",E,"Iterate over a diff generating formatted text output.",50,[[["self"],[R[222]],["f"]],[R[24],["error"]]]],[11,R[84],E,"Loop over all deltas in a diff issuing callbacks.",50,[[["self"],["fnmut"],[R[21],["fnmut"]],[R[21],["fnmut"]],[R[21],["fnmut"]]],[R[24],["error"]]]],[11,"stats",E,"Accumulate diff statistics for all patches.",50,[[["self"]],[R[24],["diffstats","error"]]]],[11,"find_similar",E,"Transform a diff marking file renames, copies, etc.",50,[[["self"],[R[21],[R[60]]]],[R[24],["error"]]]],[11,"nfiles",E,"Returns the number of files in this delta.",51,[[["self"]],["u16"]]],[11,"status",E,"Returns the status of this entry",51,[[["self"]],["delta"]]],[11,R[57],E,"Return the file which represents the \"from\" side of the…",51,[[["self"]],[R[53]]]],[11,R[58],E,"Return the file which represents the \"to\" side of the diff.",51,[[["self"]],[R[53]]]],[11,"id",E,"Returns the Oid of this item.",52,[[["self"]],["oid"]]],[11,R[139],E,"Returns the path, in bytes, of the entry relative to the…",52,[[["self"]],[R[21]]]],[11,"path",E,"Returns the path of the entry relative to the working…",52,[[["self"]],[R[21],["path"]]]],[11,"size",E,"Returns the size of this entry, in bytes",52,[[["self"]],["u64"]]],[11,"new",E,"Creates a new set of empty diff options.",53,[[],[R[54]]]],[11,"reverse",E,"Flag indicating whether the sides of the diff will be…",53,[[["self"],["bool"]],[R[54]]]],[11,R[130],E,"Flag indicating whether ignored files are included.",53,[[["self"],["bool"]],[R[54]]]],[11,R[134],E,"Flag indicating whether ignored directories are traversed…",53,[[["self"],["bool"]],[R[54]]]],[11,R[129],E,"Flag indicating whether untracked files are in the diff",53,[[["self"],["bool"]],[R[54]]]],[11,R[132],E,"Flag indicating whether untracked directories are deeply…",53,[[["self"],["bool"]],[R[54]]]],[11,R[131],E,"Flag indicating whether unmodified files are in the diff.",53,[[["self"],["bool"]],[R[54]]]],[11,"include_typechange",E,"If entrabled, then Typechange delta records are generated.",53,[[["self"],["bool"]],[R[54]]]],[11,"include_typechange_trees",E,"Event with `include_typechange`, the tree treturned…",53,[[["self"],["bool"]],[R[54]]]],[11,"ignore_filemode",E,"Flag indicating whether file mode changes are ignored.",53,[[["self"],["bool"]],[R[54]]]],[11,R[394],E,"Flag indicating whether all submodules should be treated…",53,[[["self"],["bool"]],[R[54]]]],[11,"ignore_case",E,"Flag indicating whether case insensitive filenames should…",53,[[["self"],["bool"]],[R[54]]]],[11,R[133],E,"If pathspecs are specified, this flag means that they…",53,[[["self"],["bool"]],[R[54]]]],[11,"skip_binary_check",E,"Disable updating the `binary` flag in delta records. This…",53,[[["self"],["bool"]],[R[54]]]],[11,"enable_fast_untracked_dirs",E,"When diff finds an untracked directory, to match the…",53,[[["self"],["bool"]],[R[54]]]],[11,R[55],E,"When diff finds a file in the working directory with stat…",53,[[["self"],["bool"]],[R[54]]]],[11,R[137],E,R[56],53,[[["self"],["bool"]],[R[54]]]],[11,R[138],E,R[56],53,[[["self"],["bool"]],[R[54]]]],[11,"force_text",E,"Treat all files as text, disabling binary attributes and…",53,[[["self"],["bool"]],[R[54]]]],[11,"force_binary",E,"Treat all files as binary, disabling text diffs",53,[[["self"],["bool"]],[R[54]]]],[11,R[61],E,R[69],53,[[["self"],["bool"]],[R[54]]]],[11,R[70],E,"Ignore changes in the amount of whitespace",53,[[["self"],["bool"]],[R[54]]]],[11,R[71],E,"Ignore whitespace at tend of line",53,[[["self"],["bool"]],[R[54]]]],[11,"show_untracked_content",E,"When generating patch text, include the content of…",53,[[["self"],["bool"]],[R[54]]]],[11,"show_unmodified",E,"When generating output, include the names of unmodified…",53,[[["self"],["bool"]],[R[54]]]],[11,R[72],E,R[73],53,[[["self"],["bool"]],[R[54]]]],[11,"minimal",E,"Take extra time to find the minimal diff",53,[[["self"],["bool"]],[R[54]]]],[11,"show_binary",E,"Include the necessary deflate/delta information so that…",53,[[["self"],["bool"]],[R[54]]]],[11,"indent_heuristic",E,"Use a heuristic that takes indentation and whitespace into…",53,[[["self"],["bool"]],[R[54]]]],[11,R[396],E,"Set the number of unchanged lines that define the boundary…",53,[[["self"],["u32"]],[R[54]]]],[11,R[397],E,"Set the maximum number of unchanged lines between hunk…",53,[[["self"],["u32"]],[R[54]]]],[11,R[398],E,"The default value for this is `core.abbrev` or 7 if unset.",53,[[["self"],["u16"]],[R[54]]]],[11,"max_size",E,"Maximum size (in bytes) above which a blob will be marked…",53,[[["self"],["i64"]],[R[54]]]],[11,R[399],E,"The virtual \"directory\" to prefix old file names with in…",53,[[["self"],[T]],[R[54]]]],[11,R[400],E,"The virtual \"directory\" to prefix new file names with in…",53,[[["self"],[T]],[R[54]]]],[11,R[85],E,"Add to the array of paths/fnmatch patterns to constrain…",53,[[["self"],[T]],[R[54]]]],[11,"raw",E,R[74],53,N],[11,R[390],E,"Line number in old file or `None` for added line",54,[[["self"]],[R[21],["u32"]]]],[11,R[391],E,"Line number in new file or `None` for deleted line",54,[[["self"]],[R[21],["u32"]]]],[11,R[392],E,"Number of newline characters in content",54,[[["self"]],["u32"]]],[11,R[393],E,"Offset in the original file to the content",54,[[["self"]],["i64"]]],[11,"content",E,"Content of this line as bytes.",54,N],[11,"origin",E,"Sigil showing the origin of this `DiffLine`.",54,[[["self"]],["char"]]],[11,R[386],E,"Starting line number in old_file",55,[[["self"]],["u32"]]],[11,R[387],E,"Number of lines in old_file",55,[[["self"]],["u32"]]],[11,R[388],E,"Starting line number in new_file",55,[[["self"]],["u32"]]],[11,R[389],E,"Number of lines in new_file",55,[[["self"]],["u32"]]],[11,"header",E,"Header text",55,N],[11,"files_changed",E,"Get the total number of files chaned in a diff.",56,[[["self"]],["usize"]]],[11,"insertions",E,"Get the total number of insertions in a diff",56,[[["self"]],["usize"]]],[11,"deletions",E,"Get the total number of deletions in a diff",56,[[["self"]],["usize"]]],[11,"to_buf",E,"Print diff statistics to a Buf",56,[[["self"],[R[191]],["usize"]],[R[24],["buf","error"]]]],[11,R[406],E,"Returns whether there is data in this binary structure or…",57,[[["self"]],["bool"]]],[11,R[57],E,"The contents of the old file.",57,[[["self"]],[R[59]]]],[11,R[58],E,"The contents of the new file.",57,[[["self"]],[R[59]]]],[11,"kind",E,"The type of binary data for this file",58,[[["self"]],[R[220]]]],[11,"data",E,"The binary data, deflated",58,N],[11,"inflated_len",E,"The length of the binary data after inflation",58,[[["self"]],["usize"]]],[11,"new",E,"Creates a new set of empty diff find options.",59,[[],[R[60]]]],[11,"by_config",E,"Reset all flags back to their unset state, indicating that…",59,[[["self"]],[R[60]]]],[11,"renames",E,"Look for renames?",59,[[["self"],["bool"]],[R[60]]]],[11,R[136],E,"Consider old side of modified for renames?",59,[[["self"],["bool"]],[R[60]]]],[11,"copies",E,"Look for copies?",59,[[["self"],["bool"]],[R[60]]]],[11,"copies_from_unmodified",E,"Consider unmodified as copy sources?",59,[[["self"],["bool"]],[R[60]]]],[11,"rewrites",E,"Mark significant rewrites for split.",59,[[["self"],["bool"]],[R[60]]]],[11,"break_rewrites",E,"Actually split large rewrites into delete/add pairs",59,[[["self"],["bool"]],[R[60]]]],[11,"for_untracked",E,"Find renames/copies for untracked items in working…",59,[[["self"],["bool"]],[R[60]]]],[11,"all",E,"Turn on all finding features.",59,[[["self"],["bool"]],[R[60]]]],[11,"ignore_leading_whitespace",E,"Measure similarity ignoring leading whitespace (default)",59,[[["self"],["bool"]],[R[60]]]],[11,R[61],E,"Measure similarity ignoring all whitespace",59,[[["self"],["bool"]],[R[60]]]],[11,"dont_ignore_whitespace",E,"Measure similarity including all data",59,[[["self"],["bool"]],[R[60]]]],[11,"exact_match_only",E,"Measure similarity only by comparing SHAs (fast and cheap)",59,[[["self"],["bool"]],[R[60]]]],[11,"break_rewrites_for_renames_only",E,"Do not break rewrites unless they contribute to a rename.",59,[[["self"],["bool"]],[R[60]]]],[11,"remove_unmodified",E,"Remove any unmodified deltas after find_similar is done.",59,[[["self"],["bool"]],[R[60]]]],[11,R[67],E,R[68],59,[[["self"],["u16"]],[R[60]]]],[11,R[401],E,"Similarity of modified to be glegible rename source…",59,[[["self"],["u16"]],[R[60]]]],[11,R[402],E,"Similarity to consider a file copy (default 50)",59,[[["self"],["u16"]],[R[60]]]],[11,R[403],E,"Similarity to split modify into delete/add pair (default 60)",59,[[["self"],["u16"]],[R[60]]]],[11,R[404],E,"Maximum similarity sources to examine for a file (somewhat…",59,[[["self"],["usize"]],[R[60]]]],[11,"last_error",E,"Returns the last error that happened with the code…",60,[[["c_int"]],[R[21],["error"]]]],[11,R[83],E,"Creates a new error from the given string as the error.",60,[[["str"]],["error"]]],[11,"code",E,"Return the error code associated with this error.",60,[[["self"]],[R[211]]]],[11,"class",E,"Return the error class associated with this error.",60,[[["self"]],[R[212]]]],[11,"raw_code",E,"Return the raw error code associated with this error.",60,[[["self"]],[R[424]]]],[11,"raw_class",E,"Return the raw error class associated with this error.",60,[[["self"]],[R[425]]]],[11,R[77],E,"Return the message associated with this error",60,[[["self"]],["str"]]],[11,"new",E,"Creates a new in-memory index.",61,[[],[R[24],["index","error"]]]],[11,"open",E,"Create a new bare Git index object as a memory…",61,[[["path"]],[R[24],["index","error"]]]],[11,"add",E,"Add or update an index entry from an in-memory struct",61,[[["self"],[R[62]]],[R[24],["error"]]]],[11,"add_frombuffer",E,"Add or update an index entry from a buffer in memory",61,N],[11,"add_path",E,"Add or update an index entry from a file on disk",61,[[["self"],["path"]],[R[24],["error"]]]],[11,"add_all",E,"Add or update index entries matching files in the working…",61,[[["self"],["i"],[R[172]],[R[21],[R[64]]]],[R[24],["error"]]]],[11,"clear",E,"Clear the contents (all the entries) of an index object.",61,[[["self"]],[R[24],["error"]]]],[11,"len",E,"Get the count of entries currently in the index",61,[[["self"]],["usize"]]],[11,R[26],E,"Return `true` is there is no entry in the index",61,[[["self"]],["bool"]]],[11,"get",E,"Get one of the entries in the index by its position.",61,[[["self"],["usize"]],[R[21],[R[62]]]]],[11,"iter",E,"Get an iterator over the entries in this index.",61,[[["self"]],["indexentries"]]],[11,"conflicts",E,"Get an iterator over the index entries that have conflicts",61,[[["self"]],[R[24],["indexconflicts","error"]]]],[11,R[63],E,"Get one of the entries in the index by its path.",61,[[["self"],["path"],["i32"]],[R[21],[R[62]]]]],[11,"has_conflicts",E,"Does this index have conflicts?",61,[[["self"]],["bool"]]],[11,"path",E,"Get the full path to the index file on disk.",61,[[["self"]],[R[21],["path"]]]],[11,"read",E,"Update the contents of an existing index object in memory…",61,[[["self"],["bool"]],[R[24],["error"]]]],[11,"read_tree",E,"Read a tree into the index file with stats",61,[[["self"],["tree"]],[R[24],["error"]]]],[11,"remove",E,"Remove an entry from the index",61,[[["self"],["path"],["i32"]],[R[24],["error"]]]],[11,"remove_path",E,"Remove an index entry corresponding to a file on disk.",61,[[["self"],["path"]],[R[24],["error"]]]],[11,"remove_dir",E,"Remove all entries from the index under a given directory.",61,[[["self"],["path"],["i32"]],[R[24],["error"]]]],[11,"remove_all",E,"Remove all matching index entries.",61,[[["self"],["i"],[R[21],[R[64]]]],[R[24],["error"]]]],[11,"update_all",E,"Update all index entries to match the working directory",61,[[["self"],["i"],[R[21],[R[64]]]],[R[24],["error"]]]],[11,"write",E,"Write an existing index object from memory back to disk…",61,[[["self"]],[R[24],["error"]]]],[11,"write_tree",E,"Write the index as a tree.",61,[[["self"]],[R[24],["oid","error"]]]],[11,"write_tree_to",E,"Write the index as a tree to the given repository",61,[[["self"],[R[65]]],[R[24],["oid","error"]]]],[11,"id",E,"Gets the commit ID that the given git_annotated_commit…",62,[[["self"]],["oid"]]],[11,"new",E,R[141],63,[[],[R[66]]]],[11,"find_renames",E,"Detect file renames",63,[[["self"],["bool"]],[R[66]]]],[11,"fail_on_conflict",E,"If a conflict occurs, exit immediately instead of…",63,[[["self"],["bool"]],[R[66]]]],[11,"skip_reuc",E,"Do not write the REUC extension on the generated index",63,[[["self"],["bool"]],[R[66]]]],[11,"no_recursive",E,"If the commits being merged have multiple merge bases, do…",63,[[["self"],["bool"]],[R[66]]]],[11,R[67],E,R[68],63,[[["self"],["u32"]],[R[66]]]],[11,R[407],E,"Maximum similarity sources to examine for renames (default…",63,[[["self"],["u32"]],[R[66]]]],[11,R[408],E,"Maximum number of times to merge common ancestors to build…",63,[[["self"],["u32"]],[R[66]]]],[11,R[409],E,"Specify a side to favor for resolving conflicts",63,[[["self"],[R[214]]],[R[66]]]],[11,"standard_style",E,"Create standard conflicted merge files",63,[[["self"],["bool"]],[R[66]]]],[11,"diff3_style",E,"Create diff3-style file",63,[[["self"],["bool"]],[R[66]]]],[11,"simplify_alnum",E,"Condense non-alphanumeric regions for simplified diff file",63,[[["self"],["bool"]],[R[66]]]],[11,R[61],E,R[69],63,[[["self"],["bool"]],[R[66]]]],[11,R[70],E,"Ignore changes in amount of whitespace",63,[[["self"],["bool"]],[R[66]]]],[11,R[71],E,"Ignore whitespace at end of line",63,[[["self"],["bool"]],[R[66]]]],[11,R[72],E,R[73],63,[[["self"],["bool"]],[R[66]]]],[11,"minimal",E,"Take extra time to find minimal diff",63,[[["self"],["bool"]],[R[66]]]],[11,"raw",E,R[74],63,N],[11,"author",E,"Get the note author",64,[[["self"]],[R[29]]]],[11,R[75],E,"Get the note committer",64,[[["self"]],[R[29]]]],[11,R[76],E,"Get the note message, in bytes.",64,N],[11,R[77],E,"Get the note message as a string, returning `None` if it…",64,[[["self"]],[R[21],["str"]]]],[11,"id",E,"Get the note object's id",64,[[["self"]],["oid"]]],[11,"id",E,R[147],65,[[["self"]],["oid"]]],[11,"kind",E,"Get the object type of an object.",65,[[["self"]],[R[21],[R[78]]]]],[11,"peel",E,"Recursively peel an object until an object of the…",65,[[["self"],[R[78]]],[R[24],[R[79],"error"]]]],[11,R[96],E,"Recursively peel an object until a blob is found",65,[[["self"]],[R[24],["blob","error"]]]],[11,R[97],E,"Recursively peel an object until a commit is found",65,[[["self"]],[R[24],[R[80],"error"]]]],[11,R[99],E,"Recursively peel an object until a tag is found",65,[[["self"]],[R[24],["tag","error"]]]],[11,R[98],E,"Recursively peel an object until a tree is found",65,[[["self"]],[R[24],["tree","error"]]]],[11,"short_id",E,"Get a short abbreviated OID string for the object",65,[[["self"]],[R[24],["buf","error"]]]],[11,"as_commit",E,"Attempt to view this object as a commit.",65,[[["self"]],[R[21],[R[80]]]]],[11,"into_commit",E,"Attempt to consume this object and return a commit.",65,[[["self"]],[R[24],[R[80],R[79]]]]],[11,"as_tag",E,"Attempt to view this object as a tag.",65,[[["self"]],[R[21],["tag"]]]],[11,"into_tag",E,"Attempt to consume this object and return a tag.",65,[[["self"]],[R[24],["tag",R[79]]]]],[11,"as_tree",E,"Attempt to view this object as a tree.",65,[[["self"]],[R[21],["tree"]]]],[11,"into_tree",E,"Attempt to consume this object and return a tree.",65,[[["self"]],[R[24],["tree",R[79]]]]],[11,"as_blob",E,"Attempt to view this object as a blob.",65,[[["self"]],[R[21],["blob"]]]],[11,"into_blob",E,"Attempt to consume this object and return a blob.",65,[[["self"]],[R[24],["blob",R[79]]]]],[11,R[82],E,R[123],65,[[["self"],[R[81]]],[R[24],[R[82],"error"]]]],[11,"new",E,"Creates an object database without any backends.",66,[[],[R[24],["odb","error"]]]],[11,"reader",E,"Create object database reading stream.",66,[[["self"],["oid"]],[R[24],["error"]]]],[11,"writer",E,"Create object database writing stream.",66,[[["self"],["usize"],[R[78]]],[R[24],["odbwriter","error"]]]],[11,R[84],E,"Iterate over all objects in the object database.s",66,[[["self"],["c"]],[R[24],["error"]]]],[11,"read",E,"Read an object from the database.",66,[[["self"],["oid"]],[R[24],["odbobject","error"]]]],[11,R[410],E,"Reads the header of an object from the database without…",66,[[["self"],["oid"]],[R[24],["error"]]]],[11,"write",E,"Write an object to the database.",66,N],[11,"exists",E,"Checks if the object database has an object.",66,[[["self"],["oid"]],["bool"]]],[11,R[411],E,"Potentially finds an object that starts with the given…",66,[[["self"],["oid"],["usize"]],[R[24],["oid","error"]]]],[11,"refresh",E,"Refresh the object database. This should never be needed,…",66,[[["self"]],[R[24],["error"]]]],[11,"add_disk_alternate",E,"Adds an alternate disk backend to the object database.",66,[[["self"],["str"]],[R[24],["error"]]]],[11,"kind",E,"Get the object type.",67,[[["self"]],[R[78]]]],[11,"len",E,"Get the object size.",67,[[["self"]],["usize"]]],[11,"data",E,"Get the object data.",67,N],[11,"id",E,"Get the object id.",67,[[["self"]],["oid"]]],[11,"finalize",E,"Finish writing to an ODB stream",68,[[["self"]],[R[24],["oid","error"]]]],[11,R[83],E,R[239],69,[[["str"]],[R[24],["oid","error"]]]],[11,"from_bytes",E,"Parse a raw object id into an Oid structure.",69,N],[11,"zero",E,"Creates an all zero Oid structure.",69,[[],["oid"]]],[11,"hash_object",E,"Hashes the provided data as an object of the provided…",69,N],[11,"hash_file",E,"Hashes the content of the provided file as an object of…",69,[[[R[78]],["p"]],[R[24],["oid","error"]]]],[11,"as_bytes",E,"View this OID as a byte-slice 20 bytes in length.",69,N],[11,"is_zero",E,"Test if this OID is all zeros.",69,[[["self"]],["bool"]]],[11,"insert_object",E,"Insert a single object. For an optimal pack it's mandatory…",70,[[["self"],["oid"],[R[21],["str"]]],[R[24],["error"]]]],[11,"insert_tree",E,"Insert a root tree object. This will add the tree as well…",70,[[["self"],["oid"]],[R[24],["error"]]]],[11,"insert_commit",E,"Insert a commit object. This will add a commit as well as…",70,[[["self"],["oid"]],[R[24],["error"]]]],[11,"insert_walk",E,"Insert objects as given by the walk. Those commits and all…",70,[[["self"],["revwalk"]],[R[24],["error"]]]],[11,"insert_recursive",E,"Recursively insert an object and its referenced objects.…",70,[[["self"],["oid"],[R[21],["str"]]],[R[24],["error"]]]],[11,"write_buf",E,"Write the contents of the packfile to an in-memory buffer.…",70,[[["self"],["buf"]],[R[24],["error"]]]],[11,R[84],E,"Create the new pack and pass each object to the callback.",70,[[["self"],["f"]],[R[24],["error"]]]],[11,"set_progress_callback",E,"`progress` will be called with progress information during…",70,[[["self"],["f"]],[R[24],["error"]]]],[11,"unset_progress_callback",E,"Remove the current progress callback. See…",70,[[["self"]],[R[24],["error"]]]],[11,"object_count",E,"Get the total number of objects the packbuilder will write…",70,[[["self"]],["usize"]]],[11,"written",E,"Get the number of objects the packbuilder has already…",70,[[["self"]],["usize"]]],[11,"hash",E,"Get the packfile's hash. A packfile's name is derived from…",70,[[["self"]],[R[21],["oid"]]]],[11,"new",E,"Creates a new pathspec from a list of specs to match…",71,[[["i"]],[R[24],[R[85],"error"]]]],[11,"match_diff",E,"Match a pathspec against files in a diff.",71,[[["self"],["diff"],[R[86]]],[R[24],[R[87],"error"]]]],[11,"match_tree",E,"Match a pathspec against files in a tree.",71,[[["self"],["tree"],[R[86]]],[R[24],[R[87],"error"]]]],[11,"match_index",E,"This matches the pathspec against the files in the…",71,[[["self"],["index"],[R[86]]],[R[24],[R[87],"error"]]]],[11,"match_workdir",E,"Match a pathspec against the working directory of a…",71,[[["self"],[R[65]],[R[86]]],[R[24],[R[87],"error"]]]],[11,"matches_path",E,"Try to match a path against a pathspec",71,[[["self"],["path"],[R[86]]],["bool"]]],[11,"entries",E,"Returns an iterator over the matching filenames in this…",72,[[["self"]],["pathspecentries"]]],[11,"entry",E,"Get a matching filename by position.",72,[[["self"],["usize"]],[R[21]]]],[11,"diff_entries",E,"Returns an iterator over the matching diff entries in this…",72,[[["self"]],["pathspecdiffentries"]]],[11,"diff_entry",E,"Get a matching diff delta by position.",72,[[["self"],["usize"]],[R[21],[R[88]]]]],[11,"failed_entries",E,"Returns an iterator over the non-matching entries in this…",72,[[["self"]],["pathspecfailedentries"]]],[11,"failed_entry",E,"Get an original pathspec string that had no matches.",72,[[["self"],["usize"]],[R[21]]]],[11,"from_diff",E,"Return a Patch for one file in a Diff.",73,[[["diff"],["usize"]],[R[24],[R[21],"error"]]]],[11,"from_blobs",E,"Generate a Patch by diffing two blobs.",73,[[["blob"],[R[21],["path"]],["blob"],[R[21],["path"]],[R[21],[R[54]]]],[R[24],["patch","error"]]]],[11,"from_blob_and_buffer",E,"Generate a Patch by diffing a blob and a buffer.",73,N],[11,"from_buffers",E,"Generate a Patch by diffing two buffers.",73,N],[11,"delta",E,"Get the DiffDelta associated with the Patch.",73,[[["self"]],[R[88]]]],[11,"num_hunks",E,"Get the number of hunks in the Patch.",73,[[["self"]],["usize"]]],[11,"line_stats",E,"Get the number of lines of context, additions, and…",73,[[["self"]],[R[24],["error"]]]],[11,"hunk",E,"Get a DiffHunk and its total line count from the Patch.",73,[[["self"],["usize"]],[R[24],["error"]]]],[11,"num_lines_in_hunk",E,"Get the number of lines in a hunk.",73,[[["self"],["usize"]],[R[24],["usize","error"]]]],[11,"line_in_hunk",E,"Get a DiffLine from a hunk of the Patch.",73,[[["self"],["usize"],["usize"]],[R[24],["diffline","error"]]]],[11,"size",E,"Get the size of a Patch's diff data in bytes.",73,[[["self"],["bool"],["bool"],["bool"]],["usize"]]],[11,"print",E,"Print the Patch to text via a callback.",73,[[["self"],["fnmut"]],[R[24],["error"]]]],[11,"to_buf",E,"Get the Patch text as a Buf.",73,[[["self"]],[R[24],["buf","error"]]]],[11,"new",E,"Creates a new set of proxy options ready to be configured.",74,[[],[R[102]]]],[11,"auto",E,"Try to auto-detect the proxy from the git configuration.",74,[[["self"]],["self"]]],[11,"url",E,"Specify the exact URL of the proxy to use.",74,[[["self"],["str"]],["self"]]],[11,"new",E,"Creates a new default set of rebase options.",75,[[],[R[89]]]],[11,"quiet",E,"Used by `Repository::rebase`, this will instruct other…",75,[[["self"],["bool"]],[R[89]]]],[11,"inmemory",E,"Used by `Repository::rebase`, this will begin an in-memory…",75,[[["self"],["bool"]],[R[89]]]],[11,R[422],E,"Used by `finish()`, this is the name of the notes…",75,[[["self"],["str"]],[R[89]]]],[11,R[423],E,"Options to control how trees are merged during `next()`.",75,[[["self"],[R[66]]],[R[89]]]],[11,R[142],E,"Options to control how files are written during…",75,[[["self"],[R[19]]],[R[89]]]],[11,"raw",E,R[74],75,N],[11,"len",E,"Gets the count of rebase operations that are to be applied.",76,[[["self"]],["usize"]]],[11,"nth",E,"Gets the rebase operation specified by the given index.",76,[[["self"],["usize"]],[R[21],["rebaseoperation"]]]],[11,"operation_current",E,"Gets the index of the rebase operation that is currently…",76,[[["self"]],[R[21],["usize"]]]],[11,"inmemory_index",E,"Gets the index produced by the last operation, which is…",76,[[["self"]],[R[24],["index","error"]]]],[11,R[80],E,"Commits the current patch. You must have resolved any…",76,[[["self"],[R[29]],[R[29]],["str"]],[R[24],["oid","error"]]]],[11,"abort",E,"Aborts a rebase that is currently in progress, resetting…",76,[[["self"]],[R[24],["error"]]]],[11,"finish",E,"Finishes a rebase that is currently in progress once all…",76,[[["self"],[R[29]]],[R[24],["error"]]]],[11,R[90],E,"Convert from the int into an enum. Returns None if invalid.",5,[[[R[430]]],[R[21],[R[91]]]]],[11,"kind",E,"The type of rebase operation",77,[[["self"]],[R[21],[R[91]]]]],[11,"id",E,"The commit ID being cherry-picked. This will be populated…",77,[[["self"]],["oid"]]],[11,"exec",E,"The executable the user has requested be run. This will…",77,[[["self"]],[R[21],["str"]]]],[11,R[101],E,"Ensure the reference name is well-formed.",78,[[["str"]],["bool"]]],[11,"raw",E,R[92],78,N],[11,"delete",E,"Delete an existing reference.",78,[[["self"]],[R[24],["error"]]]],[11,"is_branch",E,"Check if a reference is a local branch.",78,[[["self"]],["bool"]]],[11,"is_note",E,"Check if a reference is a note.",78,[[["self"]],["bool"]]],[11,"is_remote",E,"Check if a reference is a remote tracking branch",78,[[["self"]],["bool"]]],[11,"is_tag",E,"Check if a reference is a tag",78,[[["self"]],["bool"]]],[11,"kind",E,"Get the reference type of a reference.",78,[[["self"]],[R[21],[R[180]]]]],[11,"name",E,R[93],78,[[["self"]],[R[21],["str"]]]],[11,R[47],E,R[93],78,N],[11,"shorthand",E,R[94],78,[[["self"]],[R[21],["str"]]]],[11,"shorthand_bytes",E,R[94],78,N],[11,"target",E,"Get the OID pointed to by a direct reference.",78,[[["self"]],[R[21],["oid"]]]],[11,"target_peel",E,"Return the peeled OID target of this reference.",78,[[["self"]],[R[21],["oid"]]]],[11,"symbolic_target",E,R[95],78,[[["self"]],[R[21],["str"]]]],[11,"symbolic_target_bytes",E,R[95],78,[[["self"]],[R[21]]]],[11,"resolve",E,"Resolve a symbolic reference to a direct reference.",78,[[["self"]],[R[24],[R[33],"error"]]]],[11,"peel",E,"Peel a reference to an object",78,[[["self"],[R[78]]],[R[24],[R[79],"error"]]]],[11,R[96],E,"Peel a reference to a blob",78,[[["self"]],[R[24],["blob","error"]]]],[11,R[97],E,"Peel a reference to a commit",78,[[["self"]],[R[24],[R[80],"error"]]]],[11,R[98],E,"Peel a reference to a tree",78,[[["self"]],[R[24],["tree","error"]]]],[11,R[99],E,"Peel a reference to a tag",78,[[["self"]],[R[24],["tag","error"]]]],[11,"rename",E,"Rename an existing reference.",78,[[["self"],["str"],["bool"],["str"]],[R[24],[R[33],"error"]]]],[11,"set_target",E,"Conditionally create a new reference with the same name as…",78,[[["self"],["oid"],["str"]],[R[24],[R[33],"error"]]]],[11,"names",E,"Consumes a `References` iterator to create an iterator…",79,[[["self"]],["referencenames"]]],[11,"append",E,"Add a new entry to the in-memory reflog.",80,[[["self"],["oid"],[R[29]],[R[21],["str"]]],[R[24],["error"]]]],[11,"remove",E,"Remove an entry from the reflog by its index",80,[[["self"],["usize"],["bool"]],[R[24],["error"]]]],[11,"get",E,"Lookup an entry by its index",80,[[["self"],["usize"]],[R[21],[R[216]]]]],[11,"len",E,"Get the number of log entries in a reflog",80,[[["self"]],["usize"]]],[11,R[26],E,"Return `true` is there is no log entry in a reflog",80,[[["self"]],["bool"]]],[11,"iter",E,"Get an iterator to all entries inside of this reflog",80,[[["self"]],["reflogiter"]]],[11,"write",E,"Write an existing in-memory reflog object back to disk…",80,[[["self"]],[R[24],["error"]]]],[11,R[75],E,"Get the committer of this entry",81,[[["self"]],[R[29]]]],[11,"id_new",E,"Get the new oid",81,[[["self"]],["oid"]]],[11,"id_old",E,"Get the old oid",81,[[["self"]],["oid"]]],[11,R[77],E,"Get the log message, returning `None` on invalid UTF-8.",81,[[["self"]],[R[21],["str"]]]],[11,R[76],E,"Get the log message as a byte array.",81,[[["self"]],[R[21]]]],[11,R[100],E,"Get the refspec's direction.",82,[[["self"]],[R[100]]]],[11,"dst",E,"Get the destination specifier.",82,[[["self"]],[R[21],["str"]]]],[11,"dst_bytes",E,"Get the destination specifier, in bytes.",82,N],[11,"dst_matches",E,"Check if a refspec's destination descriptor matches a…",82,[[["self"],["str"]],["bool"]]],[11,"src",E,"Get the source specifier.",82,[[["self"]],[R[21],["str"]]]],[11,"src_bytes",E,"Get the source specifier, in bytes.",82,N],[11,"src_matches",E,"Check if a refspec's source descriptor matches a reference",82,[[["self"],["str"]],["bool"]]],[11,"is_force",E,"Get the force update setting.",82,[[["self"]],["bool"]]],[11,"str",E,"Get the refspec's string.",82,[[["self"]],[R[21],["str"]]]],[11,"bytes",E,"Get the refspec's string as a byte array",82,N],[11,R[101],E,"Ensure the remote name is well-formed.",83,[[["str"]],["bool"]]],[11,"name",E,"Get the remote's name.",83,[[["self"]],[R[21],["str"]]]],[11,R[47],E,"Get the remote's name, in bytes.",83,[[["self"]],[R[21]]]],[11,"url",E,"Get the remote's url.",83,[[["self"]],[R[21],["str"]]]],[11,"url_bytes",E,"Get the remote's url as a byte array.",83,N],[11,"pushurl",E,"Get the remote's pushurl.",83,[[["self"]],[R[21],["str"]]]],[11,"pushurl_bytes",E,"Get the remote's pushurl as a byte array.",83,[[["self"]],[R[21]]]],[11,"connect",E,"Open a connection to a remote.",83,[[["self"],[R[100]]],[R[24],["error"]]]],[11,"connect_auth",E,"Open a connection to a remote with callbacks and proxy…",83,[[["self"],[R[100]],[R[21],[R[103]]],[R[21],[R[102]]]],[R[24],["remoteconnection","error"]]]],[11,R[111],E,"Check whether the remote is connected",83,[[["self"]],["bool"]]],[11,"disconnect",E,"Disconnect from the remote",83,[[["self"]]]],[11,"download",E,"Download and index the packfile",83,N],[11,"refspecs",E,"Get the number of refspecs for a remote",83,[[["self"]],["refspecs"]]],[11,"get_refspec",E,"Get the `nth` refspec from this remote.",83,[[["self"],["usize"]],[R[21],["refspec"]]]],[11,"fetch",E,"Download new data and update tips",83,N],[11,R[113],E,"Update the tips to the new state",83,[[["self"],[R[21],[R[103]]],["bool"],[R[106]],[R[21],["str"]]],[R[24],["error"]]]],[11,"push",E,"Perform a push",83,N],[11,"stats",E,"Get the statistics structure that is filled in by the…",83,[[["self"]],[R[114]]]],[11,"list",E,R[112],83,[[["self"]],[R[24],["error"]]]],[11,"fetch_refspecs",E,"Get the remote's list of fetch refspecs",83,[[["self"]],[R[24],[R[104],"error"]]]],[11,"push_refspecs",E,"Get the remote's list of push refspecs",83,[[["self"]],[R[24],[R[104],"error"]]]],[11,"is_local",E,"Flag if this is available locally.",84,[[["self"]],["bool"]]],[11,"oid",E,E,84,[[["self"]],["oid"]]],[11,"loid",E,E,84,[[["self"]],["oid"]]],[11,"name",E,E,84,[[["self"]],["str"]]],[11,R[385],E,E,84,[[["self"]],[R[21],["str"]]]],[11,"new",E,"Creates a new blank set of fetch options",85,[[],[R[105]]]],[11,R[107],E,R[108],85,[[["self"],[R[103]]],["self"]]],[11,R[109],E,R[110],85,[[["self"],[R[102]]],["self"]]],[11,"prune",E,"Set whether to perform a prune after the fetch.",85,[[["self"],["fetchprune"]],["self"]]],[11,R[350],E,"Set whether to write the results to FETCH_HEAD.",85,[[["self"],["bool"]],["self"]]],[11,R[351],E,"Set how to behave regarding tags on the remote, such as…",85,[[["self"],[R[106]]],["self"]]],[11,"new",E,"Creates a new blank set of push options",86,[[],["pushoptions"]]],[11,R[107],E,R[108],86,[[["self"],[R[103]]],["self"]]],[11,R[109],E,R[110],86,[[["self"],[R[102]]],["self"]]],[11,"packbuilder_parallelism",E,"If the transport being used to push to the remote requires…",86,[[["self"],["u32"]],["self"]]],[11,R[111],E,"Check whether the remote is (still) connected",87,[[["self"]],["bool"]]],[11,"list",E,R[112],87,[[["self"]],[R[24],["error"]]]],[11,"new",E,"Creates a new set of empty callbacks",88,[[],[R[103]]]],[11,R[346],E,"The callback through which to fetch credentials if required.",88,[[["self"],["f"]],[R[103]]]],[11,R[348],E,"The callback through which progress is monitored.",88,[[["self"],["f"]],[R[103]]]],[11,R[345],E,"Textual progress from the remote.",88,[[["self"],["f"]],[R[103]]]],[11,R[113],E,"Each time a reference is updated locally, the callback…",88,[[["self"],["f"]],[R[103]]]],[11,R[347],E,"If certificate verification fails, then this callback will…",88,[[["self"],["f"]],[R[103]]]],[11,R[349],E,"Set a callback to get invoked for each updated reference…",88,[[["self"],["f"]],[R[103]]]],[11,R[353],E,"Number of objects in the packfile being downloaded",89,[[["self"]],["usize"]]],[11,R[354],E,"Received objects that have been hashed",89,[[["self"]],["usize"]]],[11,R[355],E,"Objects which have been downloaded",89,[[["self"]],["usize"]]],[11,R[356],E,"Locally-available objects that have been injected in order…",89,[[["self"]],["usize"]]],[11,R[357],E,"Number of deltas in the packfile being downloaded",89,[[["self"]],["usize"]]],[11,R[358],E,"Received deltas that have been hashed.",89,[[["self"]],["usize"]]],[11,R[359],E,"Size of the packfile received up to now",89,[[["self"]],["usize"]]],[11,R[151],E,"Convert this to an owned version of `Progress`.",89,[[["self"]],[R[114]]]],[11,"open",E,"Attempt to open an already-existing repository at `path`.",90,[[["p"]],[R[24],[R[65],"error"]]]],[11,"open_bare",E,"Attempt to open an already-existing bare repository at…",90,[[["p"]],[R[24],[R[65],"error"]]]],[11,"open_from_env",E,"Find and open an existing repository, respecting git…",90,[[],[R[24],[R[65],"error"]]]],[11,"open_ext",E,"Find and open an existing repository, with additional…",90,[[["p"],[R[174]],["i"]],[R[24],[R[65],"error"]]]],[11,"discover",E,"Attempt to open an already-existing repository at or above…",90,[[["p"]],[R[24],[R[65],"error"]]]],[11,"init",E,"Creates a new repository in the specified folder.",90,[[["p"]],[R[24],[R[65],"error"]]]],[11,"init_bare",E,"Creates a new `--bare` repository in the specified folder.",90,[[["p"]],[R[24],[R[65],"error"]]]],[11,"init_opts",E,"Creates a new repository in the specified folder with the…",90,[[["p"],[R[126]]],[R[24],[R[65],"error"]]]],[11,"clone",E,R[115],90,[[["str"],["p"]],[R[24],[R[65],"error"]]]],[11,"clone_recurse",E,"Clone a remote repository, initialize and update its…",90,[[["str"],["p"]],[R[24],[R[65],"error"]]]],[11,"from_odb",E,"Attempt to wrap an object database as a repository.",90,[[["odb"]],[R[24],[R[65],"error"]]]],[11,"revparse",E,"Execute a rev-parse operation against the `spec` listed.",90,[[["self"],["str"]],[R[24],["revspec","error"]]]],[11,"revparse_single",E,"Find a single object, as specified by a revision string.",90,[[["self"],["str"]],[R[24],[R[79],"error"]]]],[11,"revparse_ext",E,"Find a single object and intermediate reference by a…",90,[[["self"],["str"]],[R[24],["error"]]]],[11,"is_bare",E,"Tests whether this repository is a bare repository or not.",90,[[["self"]],["bool"]]],[11,"is_shallow",E,"Tests whether this repository is a shallow clone.",90,[[["self"]],["bool"]]],[11,"is_worktree",E,"Tests whether this repository is a worktree.",90,[[["self"]],["bool"]]],[11,R[26],E,"Tests whether this repository is empty.",90,[[["self"]],[R[24],["bool","error"]]]],[11,"path",E,"Returns the path to the `.git` folder for normal…",90,[[["self"]],["path"]]],[11,"state",E,"Returns the current state of this repository",90,[[["self"]],[R[213]]]],[11,"workdir",E,"Get the path of the working directory for this repository.",90,[[["self"]],[R[21],["path"]]]],[11,"set_workdir",E,"Set the path to the working directory for this repository.",90,[[["self"],["path"],["bool"]],[R[24],["error"]]]],[11,"namespace",E,"Get the currently active namespace for this repository.",90,[[["self"]],[R[21],["str"]]]],[11,"namespace_bytes",E,"Get the currently active namespace for this repository as…",90,[[["self"]],[R[21]]]],[11,"set_namespace",E,"Set the active namespace for this repository.",90,[[["self"],["str"]],[R[24],["error"]]]],[11,"set_namespace_bytes",E,"Set the active namespace for this repository as a byte…",90,N],[11,"remove_namespace",E,"Remove the active namespace for this repository.",90,[[["self"]],[R[24],["error"]]]],[11,R[77],E,"Retrieves the Git merge message. Remember to remove the…",90,[[["self"]],[R[24],["string","error"]]]],[11,"remove_message",E,"Remove the Git merge message.",90,[[["self"]],[R[24],["error"]]]],[11,"remotes",E,"List all remotes for a given repository",90,[[["self"]],[R[24],[R[104],"error"]]]],[11,"find_remote",E,"Get the information for a particular remote",90,[[["self"],["str"]],[R[24],["remote","error"]]]],[11,"remote",E,"Add a remote with the default fetch refspec to the…",90,[[["self"],["str"],["str"]],[R[24],["remote","error"]]]],[11,"remote_anonymous",E,"Create an anonymous remote",90,[[["self"],["str"]],[R[24],["remote","error"]]]],[11,"remote_rename",E,"Give a remote a new name",90,[[["self"],["str"],["str"]],[R[24],[R[104],"error"]]]],[11,"remote_delete",E,"Delete an existing persisted remote.",90,[[["self"],["str"]],[R[24],["error"]]]],[11,"remote_add_fetch",E,"Add a fetch refspec to the remote's configuration",90,[[["self"],["str"],["str"]],[R[24],["error"]]]],[11,"remote_add_push",E,"Add a push refspec to the remote's configuration.",90,[[["self"],["str"],["str"]],[R[24],["error"]]]],[11,"remote_set_url",E,"Set the remote's url in the configuration",90,[[["self"],["str"],["str"]],[R[24],["error"]]]],[11,"remote_set_pushurl",E,"Set the remote's url for pushing in the configuration.",90,[[["self"],["str"],[R[21],["str"]]],[R[24],["error"]]]],[11,"reset",E,"Sets the current head to the specified object and…",90,[[["self"],[R[79]],[R[218]],[R[21],[R[19]]]],[R[24],["error"]]]],[11,"reset_default",E,"Updates some entries in the index from the target commit…",90,[[["self"],[R[21],[R[79]]],["i"]],[R[24],["error"]]]],[11,"head",E,"Retrieve and resolve the reference pointed at by HEAD.",90,[[["self"]],[R[24],[R[33],"error"]]]],[11,"set_head",E,"Make the repository HEAD point to the specified reference.",90,[[["self"],["str"]],[R[24],["error"]]]],[11,"head_detached",E,"Determines whether the repository HEAD is detached.",90,[[["self"]],[R[24],["bool","error"]]]],[11,"set_head_detached",E,"Make the repository HEAD directly point to the commit.",90,[[["self"],["oid"]],[R[24],["error"]]]],[11,R[116],E,"Create an iterator for the repo's references",90,[[["self"]],[R[24],[R[116],"error"]]]],[11,"references_glob",E,"Create an iterator for the repo's references that match…",90,[[["self"],["str"]],[R[24],[R[116],"error"]]]],[11,"submodules",E,"Load all submodules for this repository and return them.",90,[[["self"]],[R[24],["vec","error"]]]],[11,"statuses",E,"Gather file status information and populate the returned…",90,[[["self"],[R[21],[R[128]]]],[R[24],["statuses","error"]]]],[11,"status_should_ignore",E,"Test if the ignore rules apply to a given file.",90,[[["self"],["path"]],[R[24],["bool","error"]]]],[11,"status_file",E,"Get file status for a single file.",90,[[["self"],["path"]],[R[24],["status","error"]]]],[11,"branches",E,"Create an iterator which loops over the requested branches.",90,[[["self"],[R[21],[R[117]]]],[R[24],["branches","error"]]]],[11,"index",E,"Get the Index file for this repository.",90,[[["self"]],[R[24],["index","error"]]]],[11,"set_index",E,"Set the Index file for this repository.",90,[[["self"],["index"]]]],[11,R[45],E,"Get the configuration file for this repository.",90,[[["self"]],[R[24],[R[45],"error"]]]],[11,"blob",E,"Write an in-memory buffer to the ODB as a blob.",90,N],[11,"blob_path",E,"Read a file from the filesystem and write its content to…",90,[[["self"],["path"]],[R[24],["oid","error"]]]],[11,"blob_writer",E,"Create a stream to write blob",90,[[["self"],[R[21],["path"]]],[R[24],["blobwriter","error"]]]],[11,"find_blob",E,R[118],90,[[["self"],["oid"]],[R[24],["blob","error"]]]],[11,"odb",E,"Get the object database for this repository",90,[[["self"]],[R[24],["odb","error"]]]],[11,"branch",E,"Create a new branch pointing at a target commit",90,[[["self"],["str"],[R[80]],["bool"]],[R[24],["branch","error"]]]],[11,"find_branch",E,"Lookup a branch by its name in a repository.",90,[[["self"],["str"],[R[117]]],[R[24],["branch","error"]]]],[11,R[80],E,"Create new commit in the repository",90,N],[11,"commit_signed",E,"Create a commit object from the given buffer and signature",90,[[["self"],["str"],["str"],[R[21],["str"]]],[R[24],["oid","error"]]]],[11,"extract_signature",E,"Extract the signature from a commit",90,[[["self"],["oid"],[R[21],["str"]]],[R[24],["error"]]]],[11,"find_commit",E,"Lookup a reference to one of the commits in a repository.",90,[[["self"],["oid"]],[R[24],[R[80],"error"]]]],[11,"find_annotated_commit",E,"Creates a `AnnotatedCommit` from the given commit id.",90,[[["self"],["oid"]],[R[24],[R[120],"error"]]]],[11,"find_object",E,R[118],90,[[["self"],["oid"],[R[21],[R[78]]]],[R[24],[R[79],"error"]]]],[11,R[33],E,"Create a new direct reference.",90,[[["self"],["str"],["oid"],["bool"],["str"]],[R[24],[R[33],"error"]]]],[11,"reference_matching",E,"Conditionally create new direct reference.",90,[[["self"],["str"],["oid"],["bool"],["oid"],["str"]],[R[24],[R[33],"error"]]]],[11,"reference_symbolic",E,R[119],90,[[["self"],["str"],["str"],["bool"],["str"]],[R[24],[R[33],"error"]]]],[11,"reference_symbolic_matching",E,R[119],90,[[["self"],["str"],["str"],["bool"],["str"],["str"]],[R[24],[R[33],"error"]]]],[11,"find_reference",E,R[118],90,[[["self"],["str"]],[R[24],[R[33],"error"]]]],[11,"refname_to_id",E,"Lookup a reference by name and resolve immediately to OID.",90,[[["self"],["str"]],[R[24],["oid","error"]]]],[11,"reference_to_annotated_commit",E,"Creates a git_annotated_commit from the given reference.",90,[[["self"],[R[33]]],[R[24],[R[120],"error"]]]],[11,R[29],E,"Create a new action signature with default user and now…",90,[[["self"]],[R[24],[R[29],"error"]]]],[11,R[121],E,"Set up a new git submodule for checkout.",90,[[["self"],["str"],["path"],["bool"]],[R[24],[R[121],"error"]]]],[11,"find_submodule",E,"Lookup submodule information by name or path.",90,[[["self"],["str"]],[R[24],[R[121],"error"]]]],[11,"submodule_status",E,"Get the status for a submodule.",90,[[["self"],["str"],["submoduleignore"]],[R[24],[R[186],"error"]]]],[11,"find_tree",E,R[118],90,[[["self"],["oid"]],[R[24],["tree","error"]]]],[11,R[122],E,"Create a new TreeBuilder, optionally initialized with the…",90,[[["self"],[R[21],["tree"]]],[R[24],[R[122],"error"]]]],[11,"tag",E,"Create a new tag in the repository from an object",90,[[["self"],["str"],[R[79]],[R[29]],["str"],["bool"]],[R[24],["oid","error"]]]],[11,"tag_lightweight",E,"Create a new lightweight tag pointing at a target object",90,[[["self"],["str"],[R[79]],["bool"]],[R[24],["oid","error"]]]],[11,"find_tag",E,"Lookup a tag object from the repository.",90,[[["self"],["oid"]],[R[24],["tag","error"]]]],[11,"tag_delete",E,"Delete an existing tag reference.",90,[[["self"],["str"]],[R[24],["error"]]]],[11,"tag_names",E,"Get a list with all the tags in the repository.",90,[[["self"],[R[21],["str"]]],[R[24],[R[104],"error"]]]],[11,"checkout_head",E,"Updates files in the index and the working tree to match…",90,[[["self"],[R[21],[R[19]]]],[R[24],["error"]]]],[11,"checkout_index",E,"Updates files in the working tree to match the content of…",90,[[["self"],[R[21],["index"]],[R[21],[R[19]]]],[R[24],["error"]]]],[11,"checkout_tree",E,"Updates files in the index and working tree to match the…",90,[[["self"],[R[79]],[R[21],[R[19]]]],[R[24],["error"]]]],[11,"merge",E,"Merges the given commit(s) into HEAD, writing the results…",90,N],[11,"merge_commits",E,"Merge two commits, producing an index that reflects the…",90,[[["self"],[R[80]],[R[80]],[R[21],[R[66]]]],[R[24],["index","error"]]]],[11,"merge_trees",E,"Merge two trees, producing an index that reflects the…",90,[[["self"],["tree"],["tree"],["tree"],[R[21],[R[66]]]],[R[24],["index","error"]]]],[11,"cleanup_state",E,"Remove all the metadata associated with an ongoing command…",90,[[["self"]],[R[24],["error"]]]],[11,"merge_analysis",E,"Analyzes the given branch(es) and determines the…",90,N],[11,"rebase",E,"Initializes a rebase operation to rebase the changes in…",90,[[["self"],[R[21],[R[120]]],[R[21],[R[120]]],[R[21],[R[120]]],[R[21],[R[89]]]],[R[24],["rebase","error"]]]],[11,"open_rebase",E,"Opens an existing rebase that was previously started by…",90,[[["self"],[R[21],[R[89]]]],[R[24],["rebase","error"]]]],[11,"note",E,"Add a note for an object",90,[[["self"],[R[29]],[R[29]],[R[21],["str"]],["oid"],["str"],["bool"]],[R[24],["oid","error"]]]],[11,"note_default_ref",E,"Get the default notes reference for this repository",90,[[["self"]],[R[24],["string","error"]]]],[11,"notes",E,"Creates a new iterator for notes in this repository.",90,[[["self"],[R[21],["str"]]],[R[24],["notes","error"]]]],[11,"find_note",E,"Read the note for an object.",90,[[["self"],[R[21],["str"]],["oid"]],[R[24],["note","error"]]]],[11,"note_delete",E,"Remove the note for an object.",90,[[["self"],["oid"],[R[21],["str"]],[R[29]],[R[29]]],[R[24],["error"]]]],[11,"revwalk",E,"Create a revwalk that can be used to traverse the commit…",90,[[["self"]],[R[24],["revwalk","error"]]]],[11,"blame_file",E,"Get the blame for a single file.",90,[[["self"],["path"],[R[21],[R[31]]]],[R[24],["blame","error"]]]],[11,"merge_base",E,"Find a merge base between two commits",90,[[["self"],["oid"],["oid"]],[R[24],["oid","error"]]]],[11,"merge_bases",E,"Find all merge bases between two commits",90,[[["self"],["oid"],["oid"]],[R[24],["oidarray","error"]]]],[11,"graph_ahead_behind",E,"Count the number of unique commits between two commit…",90,[[["self"],["oid"],["oid"]],[R[24],["error"]]]],[11,"graph_descendant_of",E,"Determine if a commit is the descendant of another commit",90,[[["self"],["oid"],["oid"]],[R[24],["bool","error"]]]],[11,"reflog",E,"Read the reflog for the given reference",90,[[["self"],["str"]],[R[24],["reflog","error"]]]],[11,R[413],E,"Delete the reflog for the given reference",90,[[["self"],["str"]],[R[24],["error"]]]],[11,R[412],E,"Rename a reflog",90,[[["self"],["str"],["str"]],[R[24],["error"]]]],[11,"reference_has_log",E,"Check if the given reference has a reflog.",90,[[["self"],["str"]],[R[24],["bool","error"]]]],[11,"reference_ensure_log",E,"Ensure that the given reference has a reflog.",90,[[["self"],["str"]],[R[24],["error"]]]],[11,R[82],E,R[123],90,[[["self"],[R[81]]],[R[24],[R[82],"error"]]]],[11,"diff_tree_to_tree",E,"Create a diff with the difference between two tree objects.",90,[[["self"],[R[21],["tree"]],[R[21],["tree"]],[R[21],[R[54]]]],[R[24],["diff","error"]]]],[11,"diff_tree_to_index",E,"Create a diff between a tree and repository index.",90,[[["self"],[R[21],["tree"]],[R[21],["index"]],[R[21],[R[54]]]],[R[24],["diff","error"]]]],[11,"diff_index_to_index",E,"Create a diff between two index objects.",90,[[["self"],["index"],["index"],[R[21],[R[54]]]],[R[24],["diff","error"]]]],[11,"diff_index_to_workdir",E,"Create a diff between the repository index and the workdir…",90,[[["self"],[R[21],["index"]],[R[21],[R[54]]]],[R[24],["diff","error"]]]],[11,"diff_tree_to_workdir",E,"Create a diff between a tree and the working directory.",90,[[["self"],[R[21],["tree"]],[R[21],[R[54]]]],[R[24],["diff","error"]]]],[11,"diff_tree_to_workdir_with_index",E,"Create a diff between a tree and the working directory…",90,[[["self"],[R[21],["tree"]],[R[21],[R[54]]]],[R[24],["diff","error"]]]],[11,R[124],E,"Create a PackBuilder",90,[[["self"]],[R[24],[R[124],"error"]]]],[11,"stash_save",E,"Save the local modifications to a new stash.",90,[[["self"],[R[29]],["str"],[R[21],[R[194]]]],[R[24],["oid","error"]]]],[11,"stash_apply",E,"Apply a single stashed state from the stash list.",90,[[["self"],["usize"],[R[21],[R[125]]]],[R[24],["error"]]]],[11,"stash_foreach",E,"Loop over all the stashed states and issue a callback for…",90,[[["self"],["c"]],[R[24],["error"]]]],[11,"stash_drop",E,"Remove a single stashed state from the stash list.",90,[[["self"],["usize"]],[R[24],["error"]]]],[11,"stash_pop",E,"Apply a single stashed state from the stash list and…",90,[[["self"],["usize"],[R[21],[R[125]]]],[R[24],["error"]]]],[11,"add_ignore_rule",E,"Add ignore rules for a repository.",90,[[["self"],["str"]],[R[24],["error"]]]],[11,"clear_ignore_rules",E,"Clear ignore rules that were explicitly added.",90,[[["self"]],[R[24],["error"]]]],[11,"is_path_ignored",E,"Test if the ignore rules apply to a given path.",90,[[["self"],["p"]],[R[24],["bool","error"]]]],[11,"new",E,"Creates a default set of initialization options.",91,[[],[R[126]]]],[11,"bare",E,"Create a bare repository with no working directory.",91,[[["self"],["bool"]],[R[126]]]],[11,"no_reinit",E,"Return an error if the repository path appears to already…",91,[[["self"],["bool"]],[R[126]]]],[11,"no_dotgit_dir",E,"Normally a '/.git/' will be appended to the repo path for…",91,[[["self"],["bool"]],[R[126]]]],[11,"mkdir",E,"Make the repo path (and workdir path) as needed. The…",91,[[["self"],["bool"]],[R[126]]]],[11,"mkpath",E,"Recursively make all components of the repo and workdir…",91,[[["self"],["bool"]],[R[126]]]],[11,"mode",E,"Set to one of the `RepositoryInit` constants, or a custom…",91,[[["self"],[R[183]]],[R[126]]]],[11,"external_template",E,"Enable or disable using external templates.",91,[[["self"],["bool"]],[R[126]]]],[11,R[381],E,"The path do the working directory.",91,[[["self"],["path"]],[R[126]]]],[11,R[240],E,"If set, this will be used to initialize the \"description\"…",91,[[["self"],["str"]],[R[126]]]],[11,R[382],E,"When the `external_template` option is set, this is the…",91,[[["self"],["path"]],[R[126]]]],[11,R[383],E,"The name of the head to point HEAD at.",91,[[["self"],["str"]],[R[126]]]],[11,R[384],E,"If set, then after the rest of the repository…",91,[[["self"],["str"]],[R[126]]]],[11,"raw",E,"Creates a set of raw init options to be used with…",91,[[["self"]],[R[380]]]],[11,"from_objects",E,"Assembles a new revspec from the from/to components.",92,[[[R[21],[R[79]]],[R[21],[R[79]]],[R[127]]],["revspec"]]],[11,"from",E,"Access the `from` range of this revspec.",92,[[["self"]],[R[21],[R[79]]]]],[11,"to",E,"Access the `to` range of this revspec.",92,[[["self"]],[R[21],[R[79]]]]],[11,"mode",E,"Returns the intent of the revspec.",92,[[["self"]],[R[127]]]],[11,"reset",E,"Reset a revwalk to allow re-configuring it.",93,[[["self"]]]],[11,"set_sorting",E,"Set the order in which commits are visited.",93,[[["self"],["sort"]]]],[11,"simplify_first_parent",E,"Simplify the history by first-parent",93,[[["self"]]]],[11,"push",E,"Mark a commit to start traversal from.",93,[[["self"],["oid"]],[R[24],["error"]]]],[11,"push_head",E,"Push the repository's HEAD",93,[[["self"]],[R[24],["error"]]]],[11,"push_glob",E,"Push matching references",93,[[["self"],["str"]],[R[24],["error"]]]],[11,"push_range",E,"Push and hide the respective endpoints of the given range.",93,[[["self"],["str"]],[R[24],["error"]]]],[11,"push_ref",E,"Push the OID pointed to by a reference",93,[[["self"],["str"]],[R[24],["error"]]]],[11,"hide",E,"Mark a commit as not of interest to this revwalk.",93,[[["self"],["oid"]],[R[24],["error"]]]],[11,"hide_head",E,"Hide the repository's HEAD",93,[[["self"]],[R[24],["error"]]]],[11,"hide_glob",E,"Hide matching references.",93,[[["self"],["str"]],[R[24],["error"]]]],[11,"hide_ref",E,"Hide the OID pointed to by a reference.",93,[[["self"],["str"]],[R[24],["error"]]]],[11,"now",E,"Create a new action signature with a timestamp of 'now'.",94,[[["str"],["str"]],[R[24],[R[29],"error"]]]],[11,"new",E,"Create a new action signature.",94,[[["str"],["str"],["time"]],[R[24],[R[29],"error"]]]],[11,"name",E,"Gets the name on the signature.",94,[[["self"]],[R[21],["str"]]]],[11,R[47],E,"Gets the name on the signature as a byte slice.",94,N],[11,"email",E,"Gets the email on the signature.",94,[[["self"]],[R[21],["str"]]]],[11,"email_bytes",E,"Gets the email on the signature as a byte slice.",94,N],[11,"when",E,"Get the `when` of this signature.",94,[[["self"]],["time"]]],[11,R[151],E,"Convert a signature of any lifetime into an owned…",94,[[["self"]],[R[29]]]],[11,"new",E,"Creates a new blank set of status options.",95,[[],[R[128]]]],[11,"show",E,"Select the files on which to report status.",95,[[["self"],[R[221]]],[R[128]]]],[11,R[85],E,"Add a path pattern to match (using fnmatch-style matching).",95,[[["self"],[T]],[R[128]]]],[11,R[129],E,"Flag whether untracked files will be included.",95,[[["self"],["bool"]],[R[128]]]],[11,R[130],E,"Flag whether ignored files will be included.",95,[[["self"],["bool"]],[R[128]]]],[11,R[131],E,"Flag to include unmodified files.",95,[[["self"],["bool"]],[R[128]]]],[11,"exclude_submodules",E,"Flag that submodules should be skipped.",95,[[["self"],["bool"]],[R[128]]]],[11,R[132],E,"Flag that all files in untracked directories should be…",95,[[["self"],["bool"]],[R[128]]]],[11,R[133],E,"Indicates that the given paths should be treated as…",95,[[["self"],["bool"]],[R[128]]]],[11,R[134],E,"Indicates that the contents of ignored directories should…",95,[[["self"],["bool"]],[R[128]]]],[11,"renames_head_to_index",E,"Indicates that rename detection should be processed…",95,[[["self"],["bool"]],[R[128]]]],[11,"renames_index_to_workdir",E,"Indicates that rename detection should be run between the…",95,[[["self"],["bool"]],[R[128]]]],[11,"sort_case_sensitively",E,R[135],95,[[["self"],["bool"]],[R[128]]]],[11,"sort_case_insensitively",E,R[135],95,[[["self"],["bool"]],[R[128]]]],[11,R[136],E,"Indicates that rename detection should include rewritten…",95,[[["self"],["bool"]],[R[128]]]],[11,"no_refresh",E,"Bypasses the default status behavior of doing a \"soft\"…",95,[[["self"],["bool"]],[R[128]]]],[11,R[55],E,"Refresh the stat cache in the index for files are…",95,[[["self"],["bool"]],[R[128]]]],[11,R[137],E,E,95,[[["self"],["bool"]],[R[128]]]],[11,R[138],E,E,95,[[["self"],["bool"]],[R[128]]]],[11,"raw",E,"Get a pointer to the inner list of status options.",95,N],[11,"get",E,"Gets a status entry from this list at the specified index.",96,[[["self"],["usize"]],[R[21],[R[217]]]]],[11,"len",E,"Gets the count of status entries in this list.",96,[[["self"]],["usize"]]],[11,R[26],E,"Return `true` if there is no status entry in this list.",96,[[["self"]],["bool"]]],[11,"iter",E,"Returns an iterator over the statuses in this list.",96,[[["self"]],["statusiter"]]],[11,R[139],E,"Access the bytes for this entry's corresponding pathname",97,N],[11,"path",E,"Access this entry's path name as a string.",97,[[["self"]],[R[21],["str"]]]],[11,"status",E,"Access the status flags for this file",97,[[["self"]],["status"]]],[11,R[360],E,R[140],97,[[["self"]],[R[21],[R[88]]]]],[11,R[361],E,R[140],97,[[["self"]],[R[21],[R[88]]]]],[11,"branch",E,"Get the submodule's branch.",98,[[["self"]],[R[21],["str"]]]],[11,"branch_bytes",E,"Get the branch for the submodule.",98,[[["self"]],[R[21]]]],[11,"url",E,"Get the submodule's url.",98,[[["self"]],[R[21],["str"]]]],[11,"opt_url_bytes",E,"Get the url for the submodule.",98,[[["self"]],[R[21]]]],[11,"name",E,"Get the submodule's name.",98,[[["self"]],[R[21],["str"]]]],[11,R[47],E,"Get the name for the submodule.",98,N],[11,"path",E,"Get the path for the submodule.",98,[[["self"]],["path"]]],[11,"head_id",E,"Get the OID for the submodule in the current HEAD tree.",98,[[["self"]],[R[21],["oid"]]]],[11,"index_id",E,"Get the OID for the submodule in the index.",98,[[["self"]],[R[21],["oid"]]]],[11,"workdir_id",E,"Get the OID for the submodule in the current working…",98,[[["self"]],[R[21],["oid"]]]],[11,"init",E,"Copy submodule info into \".git/config\" file.",98,[[["self"],["bool"]],[R[24],["error"]]]],[11,"open",E,"Open the repository for a submodule.",98,[[["self"]],[R[24],[R[65],"error"]]]],[11,"reload",E,"Reread submodule info from config, index, and HEAD.",98,[[["self"],["bool"]],[R[24],["error"]]]],[11,"sync",E,"Copy submodule remote info into submodule repo.",98,[[["self"]],[R[24],["error"]]]],[11,"add_to_index",E,"Add current submodule HEAD commit to index of superproject.",98,[[["self"],["bool"]],[R[24],["error"]]]],[11,"add_finalize",E,"Resolve the setup of a new git submodule.",98,[[["self"]],[R[24],["error"]]]],[11,"update",E,"Update submodule.",98,[[["self"],["bool"],[R[21],["submoduleupdateoptions"]]],[R[24],["error"]]]],[11,"new",E,"Return default options.",99,[[],["self"]]],[11,"checkout",E,"Set checkout options.",99,[[["self"],[R[19]]],["self"]]],[11,"fetch",E,"Set fetch options and allow fetching.",99,[[["self"],[R[105]]],["self"]]],[11,R[376],E,"Allow or disallow fetching.",99,[[["self"],["bool"]],["self"]]],[11,"new",E,R[141],100,[[],[R[125]]]],[11,"reinstantiate_index",E,"Set stash application flag to…",100,[[["self"]],[R[125]]]],[11,R[142],E,"Options to use when writing files to the working directory",100,[[["self"],[R[19]]],[R[125]]]],[11,R[341],E,"Optional callback to notify the consumer of application…",100,[[["self"],["c"]],[R[125]]]],[11,"raw",E,"Pointer to a raw git_stash_apply_options",100,[[["self"]],[R[420]]]],[11,"id",E,"Get the id (SHA1) of a repository tag",101,[[["self"]],["oid"]]],[11,R[77],E,R[143],101,[[["self"]],[R[21],["str"]]]],[11,R[76],E,R[143],101,[[["self"]],[R[21]]]],[11,"name",E,R[144],101,[[["self"]],[R[21],["str"]]]],[11,R[47],E,R[144],101,N],[11,"peel",E,"Recursively peel a tag until a non tag git_object is found",101,[[["self"]],[R[24],[R[79],"error"]]]],[11,"tagger",E,"Get the tagger (author) of a tag",101,[[["self"]],[R[21],[R[29]]]]],[11,"target",E,"Get the tagged object of a tag",101,[[["self"]],[R[24],[R[79],"error"]]]],[11,"target_id",E,R[145],101,[[["self"]],["oid"]]],[11,"target_type",E,R[145],101,[[["self"]],[R[21],[R[78]]]]],[11,R[39],E,"Casts this Tag to be usable as an `Object`",101,[[["self"]],[R[79]]]],[11,R[40],E,"Consumes Tag to be returned as an `Object`",101,[[["self"]],[R[79]]]],[11,"new",E,R[146],102,[[["i64"],["i32"]],["time"]]],[11,"seconds",E,"Return the time, in seconds, from epoch",102,[[["self"]],["i64"]]],[11,"offset_minutes",E,"Return the timezone offset, in minutes",102,[[["self"]],["i32"]]],[11,"sign",E,"Return whether the offset was positive or negative.…",102,[[["self"]],["char"]]],[11,"new",E,R[146],103,[[["i32"],["u32"]],[R[209]]]],[11,"seconds",E,"Returns the number of seconds in the second component of…",103,[[["self"]],["i32"]]],[11,R[372],E,"Returns the nanosecond component of this time.",103,[[["self"]],["u32"]]],[11,"id",E,R[147],104,[[["self"]],["oid"]]],[11,"len",E,"Get the number of entries listed in this tree.",104,[[["self"]],["usize"]]],[11,R[26],E,"Return `true` if there is not entry",104,[[["self"]],["bool"]]],[11,"iter",E,"Returns an iterator over the entries in this tree.",104,[[["self"]],["treeiter"]]],[11,"walk",E,"Traverse the entries in a tree and its subtrees in post or…",104,[[["self"],["treewalkmode"],["c"]],[R[24],["error"]]]],[11,"get_id",E,"Lookup a tree entry by SHA value.",104,[[["self"],["oid"]],[R[21],[R[148]]]]],[11,"get",E,"Lookup a tree entry by its position in the tree",104,[[["self"],["usize"]],[R[21],[R[148]]]]],[11,"get_name",E,"Lookup a tree entry by its filename",104,[[["self"],["str"]],[R[21],[R[148]]]]],[11,R[63],E,"Retrieve a tree entry contained in a tree or in any of its…",104,[[["self"],["path"]],[R[24],[R[148],"error"]]]],[11,R[39],E,"Casts this Tree to be usable as an `Object`",104,[[["self"]],[R[79]]]],[11,R[40],E,R[149],104,[[["self"]],[R[79]]]],[11,"id",E,"Get the id of the object pointed by the entry",105,[[["self"]],["oid"]]],[11,"name",E,R[150],105,[[["self"]],[R[21],["str"]]]],[11,R[47],E,R[150],105,N],[11,"to_object",E,"Convert a tree entry to the object it points to.",105,[[["self"],[R[65]]],[R[24],[R[79],"error"]]]],[11,"kind",E,"Get the type of the object pointed by the entry",105,[[["self"]],[R[21],[R[78]]]]],[11,"filemode",E,"Get the UNIX file attributes of a tree entry",105,[[["self"]],["i32"]]],[11,"filemode_raw",E,"Get the raw UNIX file attributes of a tree entry",105,[[["self"]],["i32"]]],[11,R[151],E,"Convert this entry of any lifetime into an owned signature…",105,[[["self"]],[R[148]]]],[11,"clear",E,"Clear all the entries in the builder",106,[[["self"]]]],[11,"len",E,"Get the number of entries",106,[[["self"]],["usize"]]],[11,R[26],E,"Return `true` if there is no entry",106,[[["self"]],["bool"]]],[11,"get",E,"Get en entry from the builder from its filename",106,[[["self"],["p"]],[R[24],[R[21],"error"]]]],[11,"insert",E,"Add or update an entry in the builder",106,[[["self"],["p"],["oid"],["i32"]],[R[24],[R[148],"error"]]]],[11,"remove",E,"Remove an entry from the builder by its filename",106,[[["self"],["p"]],[R[24],["error"]]]],[11,"filter",E,"Selectively remove entries from the tree",106,[[["self"],["f"]]]],[11,"write",E,"Write the contents of the TreeBuilder as a Tree object and…",106,[[["self"]],[R[24],["oid","error"]]]],[6,"IndexMatchedPath",E,"A callback function to filter index matches.",N,N],[6,"Credentials",E,"Callback used to acquire credentials for when a remote is…",N,N],[6,"TransferProgress",E,"Callback to be invoked while a transfer is in progress.",N,N],[6,"TransportMessage",E,"Callback for receiving messages delivered by the transport.",N,N],[6,"UpdateTips",E,"Callback for whenever a reference is updated locally.",N,N],[6,"StashCb",E,"This is a callback function you can provide to iterate…",N,N],[6,"StashApplyProgressCb",E,"Stash application progress notification function.",N,N],[17,"DEFAULT_COMMENT_CHAR",E,"The default comment character for `message_prettify` ('#')",N,N],[8,R[309],E,"A class of types that can be converted to C strings.",N,N],[10,"into_c_string",E,"Consume this container, converting it into a CString",107,[[["self"]],[R[24],["cstring","error"]]]],[18,"NONE",E,"Sort the repository contents in no particular ordering.",108,N],[18,"TOPOLOGICAL",E,"Sort the repository contents in topological order…",108,N],[18,"TIME",E,"Sort the repository contents by commit time.",108,N],[18,"REVERSE",E,"Iterate through the repository contents in reverse order.",108,N],[11,"empty",E,R[152],108,[[],["sort"]]],[11,"all",E,R[153],108,[[],["sort"]]],[11,"bits",E,R[155],108,[[["self"]],["u32"]]],[11,R[156],E,R[157],108,[[["u32"]],[R[21],["sort"]]]],[11,R[158],E,R[159],108,[[["u32"]],["sort"]]],[11,R[26],E,R[160],108,[[["self"]],["bool"]]],[11,"is_all",E,R[161],108,[[["self"]],["bool"]]],[11,R[162],E,R[163],108,[[["self"],["sort"]],["bool"]]],[11,R[170],E,R[164],108,[[["self"],["sort"]],["bool"]]],[11,"insert",E,R[165],108,[[["self"],["sort"]]]],[11,"remove",E,R[166],108,[[["self"],["sort"]]]],[11,"toggle",E,R[167],108,[[["self"],["sort"]]]],[11,"set",E,R[168],108,[[["self"],["sort"],["bool"]]]],[11,"is_none",E,E,108,[[["self"]],["bool"]]],[11,"is_topological",E,E,108,[[["self"]],["bool"]]],[11,"is_time",E,E,108,[[["self"]],["bool"]]],[11,"is_reverse",E,E,108,[[["self"]],["bool"]]],[18,"USER_PASS_PLAINTEXT",E,E,109,N],[18,"SSH_KEY",E,E,109,N],[18,"SSH_MEMORY",E,E,109,N],[18,"SSH_CUSTOM",E,E,109,N],[18,"DEFAULT",E,E,109,N],[18,"SSH_INTERACTIVE",E,E,109,N],[18,"USERNAME",E,E,109,N],[11,"empty",E,R[152],109,[[],[R[154]]]],[11,"all",E,R[153],109,[[],[R[154]]]],[11,"bits",E,R[155],109,[[["self"]],["u32"]]],[11,R[156],E,R[157],109,[[["u32"]],[R[21],[R[154]]]]],[11,R[158],E,R[159],109,[[["u32"]],[R[154]]]],[11,R[26],E,R[160],109,[[["self"]],["bool"]]],[11,"is_all",E,R[161],109,[[["self"]],["bool"]]],[11,R[162],E,R[163],109,[[["self"],[R[154]]],["bool"]]],[11,R[170],E,R[164],109,[[["self"],[R[154]]],["bool"]]],[11,"insert",E,R[165],109,[[["self"],[R[154]]]]],[11,"remove",E,R[166],109,[[["self"],[R[154]]]]],[11,"toggle",E,R[167],109,[[["self"],[R[154]]]]],[11,"set",E,R[168],109,[[["self"],[R[154]],["bool"]]]],[11,"is_user_pass_plaintext",E,E,109,[[["self"]],["bool"]]],[11,"is_ssh_key",E,E,109,[[["self"]],["bool"]]],[11,"is_ssh_memory",E,E,109,[[["self"]],["bool"]]],[11,"is_ssh_custom",E,E,109,[[["self"]],["bool"]]],[11,R[173],E,E,109,[[["self"]],["bool"]]],[11,"is_ssh_interactive",E,E,109,[[["self"]],["bool"]]],[11,"is_username",E,E,109,[[["self"]],["bool"]]],[18,"EXTENDED",E,"Set when the `extended_flags` field is valid.",110,N],[18,"VALID",E,"\"Assume valid\" flag",110,N],[11,"empty",E,R[152],110,[[],[R[169]]]],[11,"all",E,R[153],110,[[],[R[169]]]],[11,"bits",E,R[155],110,[[["self"]],["u16"]]],[11,R[156],E,R[157],110,[[["u16"]],[R[21],[R[169]]]]],[11,R[158],E,R[159],110,[[["u16"]],[R[169]]]],[11,R[26],E,R[160],110,[[["self"]],["bool"]]],[11,"is_all",E,R[161],110,[[["self"]],["bool"]]],[11,R[162],E,R[163],110,[[["self"],[R[169]]],["bool"]]],[11,R[170],E,R[164],110,[[["self"],[R[169]]],["bool"]]],[11,"insert",E,R[165],110,[[["self"],[R[169]]]]],[11,"remove",E,R[166],110,[[["self"],[R[169]]]]],[11,"toggle",E,R[167],110,[[["self"],[R[169]]]]],[11,"set",E,R[168],110,[[["self"],[R[169]],["bool"]]]],[11,"is_extended",E,E,110,[[["self"]],["bool"]]],[11,"is_valid",E,E,110,[[["self"]],["bool"]]],[18,"INTENT_TO_ADD",E,"An \"intent to add\" entry from \"git add -N\"",111,N],[18,"SKIP_WORKTREE",E,"Skip the associated worktree file, for sparse checkouts",111,N],[18,"EXTENDED2",E,"Reserved for a future on-disk extended flag",111,N],[18,"UPDATE",E,E,111,N],[18,"REMOVE",E,E,111,N],[18,"UPTODATE",E,E,111,N],[18,"ADDED",E,E,111,N],[18,"HASHED",E,E,111,N],[18,"UNHASHED",E,E,111,N],[18,"WT_REMOVE",E,E,111,N],[18,R[181],E,E,111,N],[18,"UNPACKED",E,E,111,N],[18,"NEW_SKIP_WORKTREE",E,E,111,N],[11,"empty",E,R[152],111,[[],[R[171]]]],[11,"all",E,R[153],111,[[],[R[171]]]],[11,"bits",E,R[155],111,[[["self"]],["u16"]]],[11,R[156],E,R[157],111,[[["u16"]],[R[21],[R[171]]]]],[11,R[158],E,R[159],111,[[["u16"]],[R[171]]]],[11,R[26],E,R[160],111,[[["self"]],["bool"]]],[11,"is_all",E,R[161],111,[[["self"]],["bool"]]],[11,R[162],E,R[163],111,[[["self"],[R[171]]],["bool"]]],[11,R[170],E,R[164],111,[[["self"],[R[171]]],["bool"]]],[11,"insert",E,R[165],111,[[["self"],[R[171]]]]],[11,"remove",E,R[166],111,[[["self"],[R[171]]]]],[11,"toggle",E,R[167],111,[[["self"],[R[171]]]]],[11,"set",E,R[168],111,[[["self"],[R[171]],["bool"]]]],[11,"is_intent_to_add",E,E,111,[[["self"]],["bool"]]],[11,"is_skip_worktree",E,E,111,[[["self"]],["bool"]]],[11,"is_extended2",E,E,111,[[["self"]],["bool"]]],[11,"is_update",E,E,111,[[["self"]],["bool"]]],[11,"is_remove",E,E,111,[[["self"]],["bool"]]],[11,R[176],E,E,111,[[["self"]],["bool"]]],[11,"is_added",E,E,111,[[["self"]],["bool"]]],[11,"is_hashed",E,E,111,[[["self"]],["bool"]]],[11,"is_unhashed",E,E,111,[[["self"]],["bool"]]],[11,"is_wt_remove",E,E,111,[[["self"]],["bool"]]],[11,R[182],E,E,111,[[["self"]],["bool"]]],[11,"is_unpacked",E,E,111,[[["self"]],["bool"]]],[11,"is_new_skip_worktree",E,E,111,[[["self"]],["bool"]]],[18,"DEFAULT",E,E,112,N],[18,"FORCE",E,E,112,N],[18,"DISABLE_PATHSPEC_MATCH",E,E,112,N],[18,"CHECK_PATHSPEC",E,E,112,N],[11,"empty",E,R[152],112,[[],[R[172]]]],[11,"all",E,R[153],112,[[],[R[172]]]],[11,"bits",E,R[155],112,[[["self"]],["u32"]]],[11,R[156],E,R[157],112,[[["u32"]],[R[21],[R[172]]]]],[11,R[158],E,R[159],112,[[["u32"]],[R[172]]]],[11,R[26],E,R[160],112,[[["self"]],["bool"]]],[11,"is_all",E,R[161],112,[[["self"]],["bool"]]],[11,R[162],E,R[163],112,[[["self"],[R[172]]],["bool"]]],[11,R[170],E,R[164],112,[[["self"],[R[172]]],["bool"]]],[11,"insert",E,R[165],112,[[["self"],[R[172]]]]],[11,"remove",E,R[166],112,[[["self"],[R[172]]]]],[11,"toggle",E,R[167],112,[[["self"],[R[172]]]]],[11,"set",E,R[168],112,[[["self"],[R[172]],["bool"]]]],[11,R[173],E,E,112,[[["self"]],["bool"]]],[11,"is_force",E,E,112,[[["self"]],["bool"]]],[11,"is_disable_pathspec_match",E,E,112,[[["self"]],["bool"]]],[11,"is_check_pathspec",E,E,112,[[["self"]],["bool"]]],[18,"NO_SEARCH",E,"Only open the specified path; don't walk upward searching.",113,N],[18,"CROSS_FS",E,"Search across filesystem boundaries.",113,N],[18,"BARE",E,"Force opening as bare repository, and defer loading its…",113,N],[18,"NO_DOTGIT",E,"Don't try appending `/.git` to the specified repository…",113,N],[18,"FROM_ENV",E,"Respect environment variables like `$GIT_DIR`.",113,N],[11,"empty",E,R[152],113,[[],[R[174]]]],[11,"all",E,R[153],113,[[],[R[174]]]],[11,"bits",E,R[155],113,[[["self"]],["u32"]]],[11,R[156],E,R[157],113,[[["u32"]],[R[21],[R[174]]]]],[11,R[158],E,R[159],113,[[["u32"]],[R[174]]]],[11,R[26],E,R[160],113,[[["self"]],["bool"]]],[11,"is_all",E,R[161],113,[[["self"]],["bool"]]],[11,R[162],E,R[163],113,[[["self"],[R[174]]],["bool"]]],[11,R[170],E,R[164],113,[[["self"],[R[174]]],["bool"]]],[11,"insert",E,R[165],113,[[["self"],[R[174]]]]],[11,"remove",E,R[166],113,[[["self"],[R[174]]]]],[11,"toggle",E,R[167],113,[[["self"],[R[174]]]]],[11,"set",E,R[168],113,[[["self"],[R[174]],["bool"]]]],[11,"is_no_search",E,E,113,[[["self"]],["bool"]]],[11,"is_cross_fs",E,E,113,[[["self"]],["bool"]]],[11,"is_bare",E,E,113,[[["self"]],["bool"]]],[11,"is_no_dotgit",E,E,113,[[["self"]],["bool"]]],[11,"is_from_env",E,E,113,[[["self"]],["bool"]]],[18,"SINGLE",E,"The spec targeted a single object",114,N],[18,"RANGE",E,"The spec targeted a range of commits",114,N],[18,"MERGE_BASE",E,"The spec used the `...` operator, which invokes special…",114,N],[11,"empty",E,R[152],114,[[],[R[127]]]],[11,"all",E,R[153],114,[[],[R[127]]]],[11,"bits",E,R[155],114,[[["self"]],["u32"]]],[11,R[156],E,R[157],114,[[["u32"]],[R[21],[R[127]]]]],[11,R[158],E,R[159],114,[[["u32"]],[R[127]]]],[11,R[26],E,R[160],114,[[["self"]],["bool"]]],[11,"is_all",E,R[161],114,[[["self"]],["bool"]]],[11,R[162],E,R[163],114,[[["self"],[R[127]]],["bool"]]],[11,R[170],E,R[164],114,[[["self"],[R[127]]],["bool"]]],[11,"insert",E,R[165],114,[[["self"],[R[127]]]]],[11,"remove",E,R[166],114,[[["self"],[R[127]]]]],[11,"toggle",E,R[167],114,[[["self"],[R[127]]]]],[11,"set",E,R[168],114,[[["self"],[R[127]],["bool"]]]],[11,"is_no_single",E,E,114,[[["self"]],["bool"]]],[11,"is_range",E,E,114,[[["self"]],["bool"]]],[11,"is_merge_base",E,E,114,[[["self"]],["bool"]]],[18,"ANALYSIS_NONE",E,"No merge is possible.",115,N],[18,"ANALYSIS_NORMAL",E,"A \"normal\" merge; both HEAD and the given merge input have…",115,N],[18,"ANALYSIS_UP_TO_DATE",E,"All given merge inputs are reachable from HEAD, meaning…",115,N],[18,"ANALYSIS_FASTFORWARD",E,"The given merge input is a fast-forward from HEAD and no…",115,N],[18,"ANALYSIS_UNBORN",E,"The HEAD of the current repository is \"unborn\" and does…",115,N],[11,"empty",E,R[152],115,[[],[R[175]]]],[11,"all",E,R[153],115,[[],[R[175]]]],[11,"bits",E,R[155],115,[[["self"]],["u32"]]],[11,R[156],E,R[157],115,[[["u32"]],[R[21],[R[175]]]]],[11,R[158],E,R[159],115,[[["u32"]],[R[175]]]],[11,R[26],E,R[160],115,[[["self"]],["bool"]]],[11,"is_all",E,R[161],115,[[["self"]],["bool"]]],[11,R[162],E,R[163],115,[[["self"],[R[175]]],["bool"]]],[11,R[170],E,R[164],115,[[["self"],[R[175]]],["bool"]]],[11,"insert",E,R[165],115,[[["self"],[R[175]]]]],[11,"remove",E,R[166],115,[[["self"],[R[175]]]]],[11,"toggle",E,R[167],115,[[["self"],[R[175]]]]],[11,"set",E,R[168],115,[[["self"],[R[175]],["bool"]]]],[11,"is_none",E,E,115,[[["self"]],["bool"]]],[11,"is_normal",E,E,115,[[["self"]],["bool"]]],[11,R[176],E,E,115,[[["self"]],["bool"]]],[11,"is_fast_forward",E,E,115,[[["self"]],["bool"]]],[11,"is_unborn",E,E,115,[[["self"]],["bool"]]],[18,"NONE",E,"No configuration was found that suggests a preferred…",116,N],[18,"NO_FAST_FORWARD",E,"There is a `merge.ff=false` configuration setting,…",116,N],[18,"FASTFORWARD_ONLY",E,"There is a `merge.ff=only` configuration setting,…",116,N],[11,"empty",E,R[152],116,[[],[R[177]]]],[11,"all",E,R[153],116,[[],[R[177]]]],[11,"bits",E,R[155],116,[[["self"]],["u32"]]],[11,R[156],E,R[157],116,[[["u32"]],[R[21],[R[177]]]]],[11,R[158],E,R[159],116,[[["u32"]],[R[177]]]],[11,R[26],E,R[160],116,[[["self"]],["bool"]]],[11,"is_all",E,R[161],116,[[["self"]],["bool"]]],[11,R[162],E,R[163],116,[[["self"],[R[177]]],["bool"]]],[11,R[170],E,R[164],116,[[["self"],[R[177]]],["bool"]]],[11,"insert",E,R[165],116,[[["self"],[R[177]]]]],[11,"remove",E,R[166],116,[[["self"],[R[177]]]]],[11,"toggle",E,R[167],116,[[["self"],[R[177]]]]],[11,"set",E,R[168],116,[[["self"],[R[177]],["bool"]]]],[11,"is_none",E,E,116,[[["self"]],["bool"]]],[11,"is_no_fast_forward",E,E,116,[[["self"]],["bool"]]],[11,"is_fastforward_only",E,E,116,[[["self"]],["bool"]]],[11,"str",E,R[179],14,[[["self"]],["str"]]],[11,"is_loose",E,"Determine if the given git_otype is a valid loose object…",14,[[["self"]],["bool"]]],[11,R[90],E,"Convert a raw git_otype to an ObjectType",14,[[[R[178]]],[R[21],[R[78]]]]],[11,"raw",E,"Convert this kind into its raw representation",14,[[["self"]],[R[178]]]],[11,R[83],E,"Convert a string object type representation to its object…",14,[[["str"]],[R[21],[R[78]]]]],[11,"str",E,R[179],15,[[["self"]],["str"]]],[11,R[90],E,"Convert a raw git_ref_t to a ReferenceType.",15,[[[R[426]]],[R[21],[R[180]]]]],[11,R[90],E,"Converts a raw configuration level to a ConfigLevel",17,[[[R[428]]],[R[44]]]],[18,"CURRENT",E,E,117,N],[18,"INDEX_NEW",E,E,117,N],[18,R[185],E,E,117,N],[18,R[184],E,E,117,N],[18,"INDEX_RENAMED",E,E,117,N],[18,"INDEX_TYPECHANGE",E,E,117,N],[18,"WT_NEW",E,E,117,N],[18,"WT_MODIFIED",E,E,117,N],[18,"WT_DELETED",E,E,117,N],[18,"WT_TYPECHANGE",E,E,117,N],[18,"WT_RENAMED",E,E,117,N],[18,"IGNORED",E,E,117,N],[18,R[181],E,E,117,N],[11,"empty",E,R[152],117,[[],["status"]]],[11,"all",E,R[153],117,[[],["status"]]],[11,"bits",E,R[155],117,[[["self"]],["u32"]]],[11,R[156],E,R[157],117,[[["u32"]],[R[21],["status"]]]],[11,R[158],E,R[159],117,[[["u32"]],["status"]]],[11,R[26],E,R[160],117,[[["self"]],["bool"]]],[11,"is_all",E,R[161],117,[[["self"]],["bool"]]],[11,R[162],E,R[163],117,[[["self"],["status"]],["bool"]]],[11,R[170],E,R[164],117,[[["self"],["status"]],["bool"]]],[11,"insert",E,R[165],117,[[["self"],["status"]]]],[11,"remove",E,R[166],117,[[["self"],["status"]]]],[11,"toggle",E,R[167],117,[[["self"],["status"]]]],[11,"set",E,R[168],117,[[["self"],["status"],["bool"]]]],[11,"is_index_new",E,E,117,[[["self"]],["bool"]]],[11,R[188],E,E,117,[[["self"]],["bool"]]],[11,R[187],E,E,117,[[["self"]],["bool"]]],[11,"is_index_renamed",E,E,117,[[["self"]],["bool"]]],[11,"is_index_typechange",E,E,117,[[["self"]],["bool"]]],[11,"is_wt_new",E,E,117,[[["self"]],["bool"]]],[11,"is_wt_modified",E,E,117,[[["self"]],["bool"]]],[11,"is_wt_deleted",E,E,117,[[["self"]],["bool"]]],[11,"is_wt_typechange",E,E,117,[[["self"]],["bool"]]],[11,"is_wt_renamed",E,E,117,[[["self"]],["bool"]]],[11,R[190],E,E,117,[[["self"]],["bool"]]],[11,R[182],E,E,117,[[["self"]],["bool"]]],[18,"SHARED_UMASK",E,"Use permissions configured by umask - the default",118,N],[18,"SHARED_GROUP",E,"Use `--shared=group` behavior, chmod'ing the new repo to…",118,N],[18,"SHARED_ALL",E,"Use `--shared=all` behavior, adding world readability.",118,N],[11,"empty",E,R[152],118,[[],[R[183]]]],[11,"all",E,R[153],118,[[],[R[183]]]],[11,"bits",E,R[155],118,[[["self"]],["u32"]]],[11,R[156],E,R[157],118,[[["u32"]],[R[21],[R[183]]]]],[11,R[158],E,R[159],118,[[["u32"]],[R[183]]]],[11,R[26],E,R[160],118,[[["self"]],["bool"]]],[11,"is_all",E,R[161],118,[[["self"]],["bool"]]],[11,R[162],E,R[163],118,[[["self"],[R[183]]],["bool"]]],[11,R[170],E,R[164],118,[[["self"],[R[183]]],["bool"]]],[11,"insert",E,R[165],118,[[["self"],[R[183]]]]],[11,"remove",E,R[166],118,[[["self"],[R[183]]]]],[11,"toggle",E,R[167],118,[[["self"],[R[183]]]]],[11,"set",E,R[168],118,[[["self"],[R[183]],["bool"]]]],[11,"is_shared_umask",E,E,118,[[["self"]],["bool"]]],[11,"is_shared_group",E,E,118,[[["self"]],["bool"]]],[11,"is_shared_all",E,E,118,[[["self"]],["bool"]]],[18,"IN_HEAD",E,E,119,N],[18,"IN_INDEX",E,E,119,N],[18,"IN_CONFIG",E,E,119,N],[18,"IN_WD",E,E,119,N],[18,"INDEX_ADDED",E,E,119,N],[18,R[184],E,E,119,N],[18,R[185],E,E,119,N],[18,"WD_UNINITIALIZED",E,E,119,N],[18,"WD_ADDED",E,E,119,N],[18,"WD_DELETED",E,E,119,N],[18,"WD_MODIFIED",E,E,119,N],[18,"WD_INDEX_MODIFIED",E,E,119,N],[18,"WD_WD_MODIFIED",E,E,119,N],[18,"WD_UNTRACKED",E,E,119,N],[11,"empty",E,R[152],119,[[],[R[186]]]],[11,"all",E,R[153],119,[[],[R[186]]]],[11,"bits",E,R[155],119,[[["self"]],["u32"]]],[11,R[156],E,R[157],119,[[["u32"]],[R[21],[R[186]]]]],[11,R[158],E,R[159],119,[[["u32"]],[R[186]]]],[11,R[26],E,R[160],119,[[["self"]],["bool"]]],[11,"is_all",E,R[161],119,[[["self"]],["bool"]]],[11,R[162],E,R[163],119,[[["self"],[R[186]]],["bool"]]],[11,R[170],E,R[164],119,[[["self"],[R[186]]],["bool"]]],[11,"insert",E,R[165],119,[[["self"],[R[186]]]]],[11,"remove",E,R[166],119,[[["self"],[R[186]]]]],[11,"toggle",E,R[167],119,[[["self"],[R[186]]]]],[11,"set",E,R[168],119,[[["self"],[R[186]],["bool"]]]],[11,"is_in_head",E,E,119,[[["self"]],["bool"]]],[11,"is_in_index",E,E,119,[[["self"]],["bool"]]],[11,"is_in_config",E,E,119,[[["self"]],["bool"]]],[11,"is_in_wd",E,E,119,[[["self"]],["bool"]]],[11,"is_index_added",E,E,119,[[["self"]],["bool"]]],[11,R[187],E,E,119,[[["self"]],["bool"]]],[11,R[188],E,E,119,[[["self"]],["bool"]]],[11,"is_wd_uninitialized",E,E,119,[[["self"]],["bool"]]],[11,"is_wd_added",E,E,119,[[["self"]],["bool"]]],[11,"is_wd_deleted",E,E,119,[[["self"]],["bool"]]],[11,"is_wd_modified",E,E,119,[[["self"]],["bool"]]],[11,"is_wd_wd_modified",E,E,119,[[["self"]],["bool"]]],[11,"is_wd_untracked",E,E,119,[[["self"]],["bool"]]],[18,"DEFAULT",E,"Use the default pathspec matching configuration.",120,N],[18,"IGNORE_CASE",E,"Force matching to ignore case, otherwise matching will use…",120,N],[18,"USE_CASE",E,"Force case sensitive matches, otherwise match will use the…",120,N],[18,"NO_GLOB",E,"Disable glob patterns and just use simple string…",120,N],[18,"NO_MATCH_ERROR",E,"Means that match functions return the error code…",120,N],[18,"FIND_FAILURES",E,"Means that the list returned should track which patterns…",120,N],[18,"FAILURES_ONLY",E,"Means that the list returned does not need to keep the…",120,N],[11,"empty",E,R[152],120,[[],[R[86]]]],[11,"all",E,R[153],120,[[],[R[86]]]],[11,"bits",E,R[155],120,[[["self"]],["u32"]]],[11,R[156],E,R[157],120,[[["u32"]],[R[21],[R[86]]]]],[11,R[158],E,R[159],120,[[["u32"]],[R[86]]]],[11,R[26],E,R[160],120,[[["self"]],["bool"]]],[11,"is_all",E,R[161],120,[[["self"]],["bool"]]],[11,R[162],E,R[163],120,[[["self"],[R[86]]],["bool"]]],[11,R[170],E,R[164],120,[[["self"],[R[86]]],["bool"]]],[11,"insert",E,R[165],120,[[["self"],[R[86]]]]],[11,"remove",E,R[166],120,[[["self"],[R[86]]]]],[11,"toggle",E,R[167],120,[[["self"],[R[86]]]]],[11,"set",E,R[168],120,[[["self"],[R[86]],["bool"]]]],[11,R[173],E,E,120,[[["self"]],["bool"]]],[11,"is_ignore_case",E,E,120,[[["self"]],["bool"]]],[11,"is_use_case",E,E,120,[[["self"]],["bool"]]],[11,"is_no_glob",E,E,120,[[["self"]],["bool"]]],[11,"is_no_match_error",E,E,120,[[["self"]],["bool"]]],[11,"is_find_failures",E,E,120,[[["self"]],["bool"]]],[11,"is_failures_only",E,E,120,[[["self"]],["bool"]]],[18,"CONFLICT",E,"Notification about a conflict.",121,N],[18,"DIRTY",E,"Notification about a dirty file.",121,N],[18,"UPDATED",E,"Notification about an updated file.",121,N],[18,"UNTRACKED",E,"Notification about an untracked file.",121,N],[18,"IGNORED",E,"Notification about an ignored file.",121,N],[11,"empty",E,R[152],121,[[],[R[189]]]],[11,"all",E,R[153],121,[[],[R[189]]]],[11,"bits",E,R[155],121,[[["self"]],["u32"]]],[11,R[156],E,R[157],121,[[["u32"]],[R[21],[R[189]]]]],[11,R[158],E,R[159],121,[[["u32"]],[R[189]]]],[11,R[26],E,R[160],121,[[["self"]],["bool"]]],[11,"is_all",E,R[161],121,[[["self"]],["bool"]]],[11,R[162],E,R[163],121,[[["self"],[R[189]]],["bool"]]],[11,R[170],E,R[164],121,[[["self"],[R[189]]],["bool"]]],[11,"insert",E,R[165],121,[[["self"],[R[189]]]]],[11,"remove",E,R[166],121,[[["self"],[R[189]]]]],[11,"toggle",E,R[167],121,[[["self"],[R[189]]]]],[11,"set",E,R[168],121,[[["self"],[R[189]],["bool"]]]],[11,"is_conflict",E,E,121,[[["self"]],["bool"]]],[11,"is_dirty",E,E,121,[[["self"]],["bool"]]],[11,"is_updated",E,E,121,[[["self"]],["bool"]]],[11,"is_untracked",E,E,121,[[["self"]],["bool"]]],[11,R[190],E,E,121,[[["self"]],["bool"]]],[18,"NONE",E,"Don't generate any stats",122,N],[18,"FULL",E,"Equivalent of `--stat` in git",122,N],[18,"SHORT",E,"Equivalent of `--shortstat` in git",122,N],[18,"NUMBER",E,"Equivalent of `--numstat` in git",122,N],[18,"INCLUDE_SUMMARY",E,"Extended header information such as creations, renames and…",122,N],[11,"empty",E,R[152],122,[[],[R[191]]]],[11,"all",E,R[153],122,[[],[R[191]]]],[11,"bits",E,R[155],122,[[["self"]],[R[192]]]],[11,R[156],E,R[157],122,[[[R[192]]],[R[21],[R[191]]]]],[11,R[158],E,R[159],122,[[[R[192]]],[R[191]]]],[11,R[26],E,R[160],122,[[["self"]],["bool"]]],[11,"is_all",E,R[161],122,[[["self"]],["bool"]]],[11,R[162],E,R[163],122,[[["self"],[R[191]]],["bool"]]],[11,R[170],E,R[164],122,[[["self"],[R[191]]],["bool"]]],[11,"insert",E,R[165],122,[[["self"],[R[191]]]]],[11,"remove",E,R[166],122,[[["self"],[R[191]]]]],[11,"toggle",E,R[167],122,[[["self"],[R[191]]]]],[11,"set",E,R[168],122,[[["self"],[R[191]],["bool"]]]],[11,"is_none",E,E,122,[[["self"]],["bool"]]],[11,"is_full",E,E,122,[[["self"]],["bool"]]],[11,"is_short",E,E,122,[[["self"]],["bool"]]],[11,"is_number",E,E,122,[[["self"]],["bool"]]],[11,"is_include_summary",E,E,122,[[["self"]],["bool"]]],[18,"DEFAULT",E,E,123,N],[18,"REINSTATE_INDEX",E,"Try to reinstate not only the working tree's changes, but…",123,N],[11,"empty",E,R[152],123,[[],[R[193]]]],[11,"all",E,R[153],123,[[],[R[193]]]],[11,"bits",E,R[155],123,[[["self"]],["u32"]]],[11,R[156],E,R[157],123,[[["u32"]],[R[21],[R[193]]]]],[11,R[158],E,R[159],123,[[["u32"]],[R[193]]]],[11,R[26],E,R[160],123,[[["self"]],["bool"]]],[11,"is_all",E,R[161],123,[[["self"]],["bool"]]],[11,R[162],E,R[163],123,[[["self"],[R[193]]],["bool"]]],[11,R[170],E,R[164],123,[[["self"],[R[193]]],["bool"]]],[11,"insert",E,R[165],123,[[["self"],[R[193]]]]],[11,"remove",E,R[166],123,[[["self"],[R[193]]]]],[11,"toggle",E,R[167],123,[[["self"],[R[193]]]]],[11,"set",E,R[168],123,[[["self"],[R[193]],["bool"]]]],[11,R[173],E,E,123,[[["self"]],["bool"]]],[11,"is_reinstate_index",E,E,123,[[["self"]],["bool"]]],[18,"DEFAULT",E,E,124,N],[18,"KEEP_INDEX",E,"All changes already added to the index are left intact in…",124,N],[18,"INCLUDE_UNTRACKED",E,"All untracked files are also stashed and then cleaned up…",124,N],[18,"INCLUDE_IGNORED",E,"All ignored files are also stashed and then cleaned up…",124,N],[11,"empty",E,R[152],124,[[],[R[194]]]],[11,"all",E,R[153],124,[[],[R[194]]]],[11,"bits",E,R[155],124,[[["self"]],["u32"]]],[11,R[156],E,R[157],124,[[["u32"]],[R[21],[R[194]]]]],[11,R[158],E,R[159],124,[[["u32"]],[R[194]]]],[11,R[26],E,R[160],124,[[["self"]],["bool"]]],[11,"is_all",E,R[161],124,[[["self"]],["bool"]]],[11,R[162],E,R[163],124,[[["self"],[R[194]]],["bool"]]],[11,R[170],E,R[164],124,[[["self"],[R[194]]],["bool"]]],[11,"insert",E,R[165],124,[[["self"],[R[194]]]]],[11,"remove",E,R[166],124,[[["self"],[R[194]]]]],[11,"toggle",E,R[167],124,[[["self"],[R[194]]]]],[11,"set",E,R[168],124,[[["self"],[R[194]],["bool"]]]],[11,R[173],E,E,124,[[["self"]],["bool"]]],[11,"is_keep_index",E,E,124,[[["self"]],["bool"]]],[11,"is_include_untracked",E,E,124,[[["self"]],["bool"]]],[11,"is_include_ignored",E,E,124,[[["self"]],["bool"]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[["self"]],[U]]],[11,R[196],E,E,35,[[[U]],[R[24]]]],[11,"borrow",E,E,35,[[["self"]],[T]]],[11,R[198],E,E,35,[[["self"]],["typeid"]]],[11,R[195],E,E,35,[[["self"]],[T]]],[11,R[197],E,E,35,[[["self"]],[R[24]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[["self"]],[U]]],[11,R[196],E,E,36,[[[U]],[R[24]]]],[11,"borrow",E,E,36,[[["self"]],[T]]],[11,R[198],E,E,36,[[["self"]],["typeid"]]],[11,R[195],E,E,36,[[["self"]],[T]]],[11,R[197],E,E,36,[[["self"]],[R[24]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[199],E,E,125,[[["self"]],["i"]]],[11,"into",E,E,125,[[["self"]],[U]]],[11,R[196],E,E,125,[[[U]],[R[24]]]],[11,"borrow",E,E,125,[[["self"]],[T]]],[11,R[198],E,E,125,[[["self"]],["typeid"]]],[11,R[195],E,E,125,[[["self"]],[T]]],[11,R[197],E,E,125,[[["self"]],[R[24]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[["self"]],[U]]],[11,R[196],E,E,37,[[[U]],[R[24]]]],[11,"borrow",E,E,37,[[["self"]],[T]]],[11,R[198],E,E,37,[[["self"]],["typeid"]]],[11,R[195],E,E,37,[[["self"]],[T]]],[11,R[197],E,E,37,[[["self"]],[R[24]]]],[11,R[151],E,E,38,[[["self"]],[T]]],[11,R[200],E,E,38,N],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[["self"]],[U]]],[11,R[196],E,E,38,[[[U]],[R[24]]]],[11,"borrow",E,E,38,[[["self"]],[T]]],[11,R[198],E,E,38,[[["self"]],["typeid"]]],[11,R[195],E,E,38,[[["self"]],[T]]],[11,R[197],E,E,38,[[["self"]],[R[24]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[["self"]],[U]]],[11,R[196],E,E,39,[[[U]],[R[24]]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[198],E,E,39,[[["self"]],["typeid"]]],[11,R[195],E,E,39,[[["self"]],[T]]],[11,R[197],E,E,39,[[["self"]],[R[24]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[["self"]],[U]]],[11,R[196],E,E,40,[[[U]],[R[24]]]],[11,"borrow",E,E,40,[[["self"]],[T]]],[11,R[198],E,E,40,[[["self"]],["typeid"]]],[11,R[195],E,E,40,[[["self"]],[T]]],[11,R[197],E,E,40,[[["self"]],[R[24]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[199],E,E,41,[[["self"]],["i"]]],[11,"into",E,E,41,[[["self"]],[U]]],[11,R[196],E,E,41,[[[U]],[R[24]]]],[11,"borrow",E,E,41,[[["self"]],[T]]],[11,R[198],E,E,41,[[["self"]],["typeid"]]],[11,R[195],E,E,41,[[["self"]],[T]]],[11,R[197],E,E,41,[[["self"]],[R[24]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[["self"]],[U]]],[11,R[196],E,E,42,[[[U]],[R[24]]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[198],E,E,42,[[["self"]],["typeid"]]],[11,R[195],E,E,42,[[["self"]],[T]]],[11,R[197],E,E,42,[[["self"]],[R[24]]]],[11,R[151],E,E,43,[[["self"]],[T]]],[11,R[200],E,E,43,N],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[["self"]],[U]]],[11,R[196],E,E,43,[[[U]],[R[24]]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[198],E,E,43,[[["self"]],["typeid"]]],[11,R[195],E,E,43,[[["self"]],[T]]],[11,R[197],E,E,43,[[["self"]],[R[24]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[199],E,E,126,[[["self"]],["i"]]],[11,"into",E,E,126,[[["self"]],[U]]],[11,R[196],E,E,126,[[[U]],[R[24]]]],[11,"borrow",E,E,126,[[["self"]],[T]]],[11,R[198],E,E,126,[[["self"]],["typeid"]]],[11,R[195],E,E,126,[[["self"]],[T]]],[11,R[197],E,E,126,[[["self"]],[R[24]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[["self"]],[U]]],[11,R[196],E,E,44,[[[U]],[R[24]]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[198],E,E,44,[[["self"]],["typeid"]]],[11,R[195],E,E,44,[[["self"]],[T]]],[11,R[197],E,E,44,[[["self"]],[R[24]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[["self"]],[U]]],[11,R[196],E,E,45,[[[U]],[R[24]]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[198],E,E,45,[[["self"]],["typeid"]]],[11,R[195],E,E,45,[[["self"]],[T]]],[11,R[197],E,E,45,[[["self"]],[R[24]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,"into",E,E,127,[[["self"]],[U]]],[11,R[196],E,E,127,[[[U]],[R[24]]]],[11,"borrow",E,E,127,[[["self"]],[T]]],[11,R[198],E,E,127,[[["self"]],["typeid"]]],[11,R[195],E,E,127,[[["self"]],[T]]],[11,R[197],E,E,127,[[["self"]],[R[24]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[["self"]],[U]]],[11,R[196],E,E,46,[[[U]],[R[24]]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[198],E,E,46,[[["self"]],["typeid"]]],[11,R[195],E,E,46,[[["self"]],[T]]],[11,R[197],E,E,46,[[["self"]],[R[24]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[196],E,E,0,[[[U]],[R[24]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[198],E,E,0,[[["self"]],["typeid"]]],[11,R[195],E,E,0,[[["self"]],[T]]],[11,R[197],E,E,0,[[["self"]],[R[24]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[["self"]],[U]]],[11,R[196],E,E,47,[[[U]],[R[24]]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[198],E,E,47,[[["self"]],["typeid"]]],[11,R[195],E,E,47,[[["self"]],[T]]],[11,R[197],E,E,47,[[["self"]],[R[24]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[["self"]],[U]]],[11,R[196],E,E,48,[[[U]],[R[24]]]],[11,"borrow",E,E,48,[[["self"]],[T]]],[11,R[198],E,E,48,[[["self"]],["typeid"]]],[11,R[195],E,E,48,[[["self"]],[T]]],[11,R[197],E,E,48,[[["self"]],[R[24]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[["self"]],[U]]],[11,R[196],E,E,49,[[[U]],[R[24]]]],[11,"borrow",E,E,49,[[["self"]],[T]]],[11,R[198],E,E,49,[[["self"]],["typeid"]]],[11,R[195],E,E,49,[[["self"]],[T]]],[11,R[197],E,E,49,[[["self"]],[R[24]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[["self"]],[U]]],[11,R[196],E,E,50,[[[U]],[R[24]]]],[11,"borrow",E,E,50,[[["self"]],[T]]],[11,R[198],E,E,50,[[["self"]],["typeid"]]],[11,R[195],E,E,50,[[["self"]],[T]]],[11,R[197],E,E,50,[[["self"]],[R[24]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[["self"]],[U]]],[11,R[196],E,E,51,[[[U]],[R[24]]]],[11,"borrow",E,E,51,[[["self"]],[T]]],[11,R[198],E,E,51,[[["self"]],["typeid"]]],[11,R[195],E,E,51,[[["self"]],[T]]],[11,R[197],E,E,51,[[["self"]],[R[24]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[["self"]],[U]]],[11,R[196],E,E,52,[[[U]],[R[24]]]],[11,"borrow",E,E,52,[[["self"]],[T]]],[11,R[198],E,E,52,[[["self"]],["typeid"]]],[11,R[195],E,E,52,[[["self"]],[T]]],[11,R[197],E,E,52,[[["self"]],[R[24]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[["self"]],[U]]],[11,R[196],E,E,53,[[[U]],[R[24]]]],[11,"borrow",E,E,53,[[["self"]],[T]]],[11,R[198],E,E,53,[[["self"]],["typeid"]]],[11,R[195],E,E,53,[[["self"]],[T]]],[11,R[197],E,E,53,[[["self"]],[R[24]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[199],E,E,128,[[["self"]],["i"]]],[11,"into",E,E,128,[[["self"]],[U]]],[11,R[196],E,E,128,[[[U]],[R[24]]]],[11,"borrow",E,E,128,[[["self"]],[T]]],[11,R[198],E,E,128,[[["self"]],["typeid"]]],[11,R[195],E,E,128,[[["self"]],[T]]],[11,R[197],E,E,128,[[["self"]],[R[24]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[["self"]],[U]]],[11,R[196],E,E,57,[[[U]],[R[24]]]],[11,"borrow",E,E,57,[[["self"]],[T]]],[11,R[198],E,E,57,[[["self"]],["typeid"]]],[11,R[195],E,E,57,[[["self"]],[T]]],[11,R[197],E,E,57,[[["self"]],[R[24]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[["self"]],[U]]],[11,R[196],E,E,58,[[[U]],[R[24]]]],[11,"borrow",E,E,58,[[["self"]],[T]]],[11,R[198],E,E,58,[[["self"]],["typeid"]]],[11,R[195],E,E,58,[[["self"]],[T]]],[11,R[197],E,E,58,[[["self"]],[R[24]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[["self"]],[U]]],[11,R[196],E,E,54,[[[U]],[R[24]]]],[11,"borrow",E,E,54,[[["self"]],[T]]],[11,R[198],E,E,54,[[["self"]],["typeid"]]],[11,R[195],E,E,54,[[["self"]],[T]]],[11,R[197],E,E,54,[[["self"]],[R[24]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[["self"]],[U]]],[11,R[196],E,E,55,[[[U]],[R[24]]]],[11,"borrow",E,E,55,[[["self"]],[T]]],[11,R[198],E,E,55,[[["self"]],["typeid"]]],[11,R[195],E,E,55,[[["self"]],[T]]],[11,R[197],E,E,55,[[["self"]],[R[24]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[["self"]],[U]]],[11,R[196],E,E,56,[[[U]],[R[24]]]],[11,"borrow",E,E,56,[[["self"]],[T]]],[11,R[198],E,E,56,[[["self"]],["typeid"]]],[11,R[195],E,E,56,[[["self"]],[T]]],[11,R[197],E,E,56,[[["self"]],[R[24]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[["self"]],[U]]],[11,R[196],E,E,59,[[[U]],[R[24]]]],[11,"borrow",E,E,59,[[["self"]],[T]]],[11,R[198],E,E,59,[[["self"]],["typeid"]]],[11,R[195],E,E,59,[[["self"]],[T]]],[11,R[197],E,E,59,[[["self"]],[R[24]]]],[11,R[201],E,E,60,[[["self"]],["string"]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[["self"]],[U]]],[11,R[196],E,E,60,[[[U]],[R[24]]]],[11,"borrow",E,E,60,[[["self"]],[T]]],[11,R[198],E,E,60,[[["self"]],["typeid"]]],[11,R[195],E,E,60,[[["self"]],[T]]],[11,R[197],E,E,60,[[["self"]],[R[24]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[["self"]],[U]]],[11,R[196],E,E,61,[[[U]],[R[24]]]],[11,"borrow",E,E,61,[[["self"]],[T]]],[11,R[198],E,E,61,[[["self"]],["typeid"]]],[11,R[195],E,E,61,[[["self"]],[T]]],[11,R[197],E,E,61,[[["self"]],[R[24]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[196],E,E,1,[[[U]],[R[24]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[198],E,E,1,[[["self"]],["typeid"]]],[11,R[195],E,E,1,[[["self"]],[T]]],[11,R[197],E,E,1,[[["self"]],[R[24]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[199],E,E,129,[[["self"]],["i"]]],[11,"into",E,E,129,[[["self"]],[U]]],[11,R[196],E,E,129,[[[U]],[R[24]]]],[11,"borrow",E,E,129,[[["self"]],[T]]],[11,R[198],E,E,129,[[["self"]],["typeid"]]],[11,R[195],E,E,129,[[["self"]],[T]]],[11,R[197],E,E,129,[[["self"]],[R[24]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[196],E,E,2,[[[U]],[R[24]]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[198],E,E,2,[[["self"]],["typeid"]]],[11,R[195],E,E,2,[[["self"]],[T]]],[11,R[197],E,E,2,[[["self"]],[R[24]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[199],E,E,130,[[["self"]],["i"]]],[11,"into",E,E,130,[[["self"]],[U]]],[11,R[196],E,E,130,[[[U]],[R[24]]]],[11,"borrow",E,E,130,[[["self"]],[T]]],[11,R[198],E,E,130,[[["self"]],["typeid"]]],[11,R[195],E,E,130,[[["self"]],[T]]],[11,R[197],E,E,130,[[["self"]],[R[24]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[["self"]],[U]]],[11,R[196],E,E,62,[[[U]],[R[24]]]],[11,"borrow",E,E,62,[[["self"]],[T]]],[11,R[198],E,E,62,[[["self"]],["typeid"]]],[11,R[195],E,E,62,[[["self"]],[T]]],[11,R[197],E,E,62,[[["self"]],[R[24]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[["self"]],[U]]],[11,R[196],E,E,63,[[[U]],[R[24]]]],[11,"borrow",E,E,63,[[["self"]],[T]]],[11,R[198],E,E,63,[[["self"]],["typeid"]]],[11,R[195],E,E,63,[[["self"]],[T]]],[11,R[197],E,E,63,[[["self"]],[R[24]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[["self"]],[U]]],[11,R[196],E,E,64,[[[U]],[R[24]]]],[11,"borrow",E,E,64,[[["self"]],[T]]],[11,R[198],E,E,64,[[["self"]],["typeid"]]],[11,R[195],E,E,64,[[["self"]],[T]]],[11,R[197],E,E,64,[[["self"]],[R[24]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[199],E,E,131,[[["self"]],["i"]]],[11,"into",E,E,131,[[["self"]],[U]]],[11,R[196],E,E,131,[[[U]],[R[24]]]],[11,"borrow",E,E,131,[[["self"]],[T]]],[11,R[198],E,E,131,[[["self"]],["typeid"]]],[11,R[195],E,E,131,[[["self"]],[T]]],[11,R[197],E,E,131,[[["self"]],[R[24]]]],[11,R[151],E,E,65,[[["self"]],[T]]],[11,R[200],E,E,65,N],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[["self"]],[U]]],[11,R[196],E,E,65,[[[U]],[R[24]]]],[11,"borrow",E,E,65,[[["self"]],[T]]],[11,R[198],E,E,65,[[["self"]],["typeid"]]],[11,R[195],E,E,65,[[["self"]],[T]]],[11,R[197],E,E,65,[[["self"]],[R[24]]]],[11,R[151],E,E,69,[[["self"]],[T]]],[11,R[200],E,E,69,N],[11,R[201],E,E,69,[[["self"]],["string"]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[["self"]],[U]]],[11,R[196],E,E,69,[[[U]],[R[24]]]],[11,"borrow",E,E,69,[[["self"]],[T]]],[11,R[198],E,E,69,[[["self"]],["typeid"]]],[11,R[195],E,E,69,[[["self"]],[T]]],[11,R[197],E,E,69,[[["self"]],[R[24]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[["self"]],[U]]],[11,R[196],E,E,70,[[[U]],[R[24]]]],[11,"borrow",E,E,70,[[["self"]],[T]]],[11,R[198],E,E,70,[[["self"]],["typeid"]]],[11,R[195],E,E,70,[[["self"]],[T]]],[11,R[197],E,E,70,[[["self"]],[R[24]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[["self"]],[U]]],[11,R[196],E,E,71,[[[U]],[R[24]]]],[11,"borrow",E,E,71,[[["self"]],[T]]],[11,R[198],E,E,71,[[["self"]],["typeid"]]],[11,R[195],E,E,71,[[["self"]],[T]]],[11,R[197],E,E,71,[[["self"]],[R[24]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[["self"]],[U]]],[11,R[196],E,E,72,[[[U]],[R[24]]]],[11,"borrow",E,E,72,[[["self"]],[T]]],[11,R[198],E,E,72,[[["self"]],["typeid"]]],[11,R[195],E,E,72,[[["self"]],[T]]],[11,R[197],E,E,72,[[["self"]],[R[24]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[199],E,E,132,[[["self"]],["i"]]],[11,"into",E,E,132,[[["self"]],[U]]],[11,R[196],E,E,132,[[[U]],[R[24]]]],[11,"borrow",E,E,132,[[["self"]],[T]]],[11,R[198],E,E,132,[[["self"]],["typeid"]]],[11,R[195],E,E,132,[[["self"]],[T]]],[11,R[197],E,E,132,[[["self"]],[R[24]]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[199],E,E,133,[[["self"]],["i"]]],[11,"into",E,E,133,[[["self"]],[U]]],[11,R[196],E,E,133,[[[U]],[R[24]]]],[11,"borrow",E,E,133,[[["self"]],[T]]],[11,R[198],E,E,133,[[["self"]],["typeid"]]],[11,R[195],E,E,133,[[["self"]],[T]]],[11,R[197],E,E,133,[[["self"]],[R[24]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[199],E,E,134,[[["self"]],["i"]]],[11,"into",E,E,134,[[["self"]],[U]]],[11,R[196],E,E,134,[[[U]],[R[24]]]],[11,"borrow",E,E,134,[[["self"]],[T]]],[11,R[198],E,E,134,[[["self"]],["typeid"]]],[11,R[195],E,E,134,[[["self"]],[T]]],[11,R[197],E,E,134,[[["self"]],[R[24]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[["self"]],[U]]],[11,R[196],E,E,73,[[[U]],[R[24]]]],[11,"borrow",E,E,73,[[["self"]],[T]]],[11,R[198],E,E,73,[[["self"]],["typeid"]]],[11,R[195],E,E,73,[[["self"]],[T]]],[11,R[197],E,E,73,[[["self"]],[R[24]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[["self"]],[U]]],[11,R[196],E,E,74,[[[U]],[R[24]]]],[11,"borrow",E,E,74,[[["self"]],[T]]],[11,R[198],E,E,74,[[["self"]],["typeid"]]],[11,R[195],E,E,74,[[["self"]],[T]]],[11,R[197],E,E,74,[[["self"]],[R[24]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[199],E,E,76,[[["self"]],["i"]]],[11,"into",E,E,76,[[["self"]],[U]]],[11,R[196],E,E,76,[[[U]],[R[24]]]],[11,"borrow",E,E,76,[[["self"]],[T]]],[11,R[198],E,E,76,[[["self"]],["typeid"]]],[11,R[195],E,E,76,[[["self"]],[T]]],[11,R[197],E,E,76,[[["self"]],[R[24]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[["self"]],[U]]],[11,R[196],E,E,75,[[[U]],[R[24]]]],[11,"borrow",E,E,75,[[["self"]],[T]]],[11,R[198],E,E,75,[[["self"]],["typeid"]]],[11,R[195],E,E,75,[[["self"]],[T]]],[11,R[197],E,E,75,[[["self"]],[R[24]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[["self"]],[U]]],[11,R[196],E,E,77,[[[U]],[R[24]]]],[11,"borrow",E,E,77,[[["self"]],[T]]],[11,R[198],E,E,77,[[["self"]],["typeid"]]],[11,R[195],E,E,77,[[["self"]],[T]]],[11,R[197],E,E,77,[[["self"]],[R[24]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[["self"]],[U]]],[11,R[196],E,E,78,[[[U]],[R[24]]]],[11,"borrow",E,E,78,[[["self"]],[T]]],[11,R[198],E,E,78,[[["self"]],["typeid"]]],[11,R[195],E,E,78,[[["self"]],[T]]],[11,R[197],E,E,78,[[["self"]],[R[24]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[199],E,E,79,[[["self"]],["i"]]],[11,"into",E,E,79,[[["self"]],[U]]],[11,R[196],E,E,79,[[[U]],[R[24]]]],[11,"borrow",E,E,79,[[["self"]],[T]]],[11,R[198],E,E,79,[[["self"]],["typeid"]]],[11,R[195],E,E,79,[[["self"]],[T]]],[11,R[197],E,E,79,[[["self"]],[R[24]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[199],E,E,135,[[["self"]],["i"]]],[11,"into",E,E,135,[[["self"]],[U]]],[11,R[196],E,E,135,[[[U]],[R[24]]]],[11,"borrow",E,E,135,[[["self"]],[T]]],[11,R[198],E,E,135,[[["self"]],["typeid"]]],[11,R[195],E,E,135,[[["self"]],[T]]],[11,R[197],E,E,135,[[["self"]],[R[24]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[["self"]],[U]]],[11,R[196],E,E,80,[[[U]],[R[24]]]],[11,"borrow",E,E,80,[[["self"]],[T]]],[11,R[198],E,E,80,[[["self"]],["typeid"]]],[11,R[195],E,E,80,[[["self"]],[T]]],[11,R[197],E,E,80,[[["self"]],[R[24]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[["self"]],[U]]],[11,R[196],E,E,81,[[[U]],[R[24]]]],[11,"borrow",E,E,81,[[["self"]],[T]]],[11,R[198],E,E,81,[[["self"]],["typeid"]]],[11,R[195],E,E,81,[[["self"]],[T]]],[11,R[197],E,E,81,[[["self"]],[R[24]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[199],E,E,136,[[["self"]],["i"]]],[11,"into",E,E,136,[[["self"]],[U]]],[11,R[196],E,E,136,[[[U]],[R[24]]]],[11,"borrow",E,E,136,[[["self"]],[T]]],[11,R[198],E,E,136,[[["self"]],["typeid"]]],[11,R[195],E,E,136,[[["self"]],[T]]],[11,R[197],E,E,136,[[["self"]],[R[24]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[["self"]],[U]]],[11,R[196],E,E,82,[[[U]],[R[24]]]],[11,"borrow",E,E,82,[[["self"]],[T]]],[11,R[198],E,E,82,[[["self"]],["typeid"]]],[11,R[195],E,E,82,[[["self"]],[T]]],[11,R[197],E,E,82,[[["self"]],[R[24]]]],[11,R[151],E,E,83,[[["self"]],[T]]],[11,R[200],E,E,83,N],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[["self"]],[U]]],[11,R[196],E,E,83,[[[U]],[R[24]]]],[11,"borrow",E,E,83,[[["self"]],[T]]],[11,R[198],E,E,83,[[["self"]],["typeid"]]],[11,R[195],E,E,83,[[["self"]],[T]]],[11,R[197],E,E,83,[[["self"]],[R[24]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[["self"]],[U]]],[11,R[196],E,E,87,[[[U]],[R[24]]]],[11,"borrow",E,E,87,[[["self"]],[T]]],[11,R[198],E,E,87,[[["self"]],["typeid"]]],[11,R[195],E,E,87,[[["self"]],[T]]],[11,R[197],E,E,87,[[["self"]],[R[24]]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[199],E,E,137,[[["self"]],["i"]]],[11,"into",E,E,137,[[["self"]],[U]]],[11,R[196],E,E,137,[[[U]],[R[24]]]],[11,"borrow",E,E,137,[[["self"]],[T]]],[11,R[198],E,E,137,[[["self"]],["typeid"]]],[11,R[195],E,E,137,[[["self"]],[T]]],[11,R[197],E,E,137,[[["self"]],[R[24]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[["self"]],[U]]],[11,R[196],E,E,84,[[[U]],[R[24]]]],[11,"borrow",E,E,84,[[["self"]],[T]]],[11,R[198],E,E,84,[[["self"]],["typeid"]]],[11,R[195],E,E,84,[[["self"]],[T]]],[11,R[197],E,E,84,[[["self"]],[R[24]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[["self"]],[U]]],[11,R[196],E,E,85,[[[U]],[R[24]]]],[11,"borrow",E,E,85,[[["self"]],[T]]],[11,R[198],E,E,85,[[["self"]],["typeid"]]],[11,R[195],E,E,85,[[["self"]],[T]]],[11,R[197],E,E,85,[[["self"]],[R[24]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[["self"]],[U]]],[11,R[196],E,E,86,[[[U]],[R[24]]]],[11,"borrow",E,E,86,[[["self"]],[T]]],[11,R[198],E,E,86,[[["self"]],["typeid"]]],[11,R[195],E,E,86,[[["self"]],[T]]],[11,R[197],E,E,86,[[["self"]],[R[24]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[["self"]],[U]]],[11,R[196],E,E,88,[[[U]],[R[24]]]],[11,"borrow",E,E,88,[[["self"]],[T]]],[11,R[198],E,E,88,[[["self"]],["typeid"]]],[11,R[195],E,E,88,[[["self"]],[T]]],[11,R[197],E,E,88,[[["self"]],[R[24]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[["self"]],[U]]],[11,R[196],E,E,89,[[[U]],[R[24]]]],[11,"borrow",E,E,89,[[["self"]],[T]]],[11,R[198],E,E,89,[[["self"]],["typeid"]]],[11,R[195],E,E,89,[[["self"]],[T]]],[11,R[197],E,E,89,[[["self"]],[R[24]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[["self"]],[U]]],[11,R[196],E,E,90,[[[U]],[R[24]]]],[11,"borrow",E,E,90,[[["self"]],[T]]],[11,R[198],E,E,90,[[["self"]],["typeid"]]],[11,R[195],E,E,90,[[["self"]],[T]]],[11,R[197],E,E,90,[[["self"]],[R[24]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[["self"]],[U]]],[11,R[196],E,E,91,[[[U]],[R[24]]]],[11,"borrow",E,E,91,[[["self"]],[T]]],[11,R[198],E,E,91,[[["self"]],["typeid"]]],[11,R[195],E,E,91,[[["self"]],[T]]],[11,R[197],E,E,91,[[["self"]],[R[24]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[["self"]],[U]]],[11,R[196],E,E,92,[[[U]],[R[24]]]],[11,"borrow",E,E,92,[[["self"]],[T]]],[11,R[198],E,E,92,[[["self"]],["typeid"]]],[11,R[195],E,E,92,[[["self"]],[T]]],[11,R[197],E,E,92,[[["self"]],[R[24]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[199],E,E,93,[[["self"]],["i"]]],[11,"into",E,E,93,[[["self"]],[U]]],[11,R[196],E,E,93,[[[U]],[R[24]]]],[11,"borrow",E,E,93,[[["self"]],[T]]],[11,R[198],E,E,93,[[["self"]],["typeid"]]],[11,R[195],E,E,93,[[["self"]],[T]]],[11,R[197],E,E,93,[[["self"]],[R[24]]]],[11,R[151],E,E,94,[[["self"]],[T]]],[11,R[200],E,E,94,N],[11,R[201],E,E,94,[[["self"]],["string"]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[["self"]],[U]]],[11,R[196],E,E,94,[[[U]],[R[24]]]],[11,"borrow",E,E,94,[[["self"]],[T]]],[11,R[198],E,E,94,[[["self"]],["typeid"]]],[11,R[195],E,E,94,[[["self"]],[T]]],[11,R[197],E,E,94,[[["self"]],[R[24]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[["self"]],[U]]],[11,R[196],E,E,95,[[[U]],[R[24]]]],[11,"borrow",E,E,95,[[["self"]],[T]]],[11,R[198],E,E,95,[[["self"]],["typeid"]]],[11,R[195],E,E,95,[[["self"]],[T]]],[11,R[197],E,E,95,[[["self"]],[R[24]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[["self"]],[U]]],[11,R[196],E,E,96,[[[U]],[R[24]]]],[11,"borrow",E,E,96,[[["self"]],[T]]],[11,R[198],E,E,96,[[["self"]],["typeid"]]],[11,R[195],E,E,96,[[["self"]],[T]]],[11,R[197],E,E,96,[[["self"]],[R[24]]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[199],E,E,138,[[["self"]],["i"]]],[11,"into",E,E,138,[[["self"]],[U]]],[11,R[196],E,E,138,[[[U]],[R[24]]]],[11,"borrow",E,E,138,[[["self"]],[T]]],[11,R[198],E,E,138,[[["self"]],["typeid"]]],[11,R[195],E,E,138,[[["self"]],[T]]],[11,R[197],E,E,138,[[["self"]],[R[24]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,"into",E,E,97,[[["self"]],[U]]],[11,R[196],E,E,97,[[[U]],[R[24]]]],[11,"borrow",E,E,97,[[["self"]],[T]]],[11,R[198],E,E,97,[[["self"]],["typeid"]]],[11,R[195],E,E,97,[[["self"]],[T]]],[11,R[197],E,E,97,[[["self"]],[R[24]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,"into",E,E,100,[[["self"]],[U]]],[11,R[196],E,E,100,[[[U]],[R[24]]]],[11,"borrow",E,E,100,[[["self"]],[T]]],[11,R[198],E,E,100,[[["self"]],["typeid"]]],[11,R[195],E,E,100,[[["self"]],[T]]],[11,R[197],E,E,100,[[["self"]],[R[24]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[["self"]],[U]]],[11,R[196],E,E,98,[[[U]],[R[24]]]],[11,"borrow",E,E,98,[[["self"]],[T]]],[11,R[198],E,E,98,[[["self"]],["typeid"]]],[11,R[195],E,E,98,[[["self"]],[T]]],[11,R[197],E,E,98,[[["self"]],[R[24]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,"into",E,E,99,[[["self"]],[U]]],[11,R[196],E,E,99,[[[U]],[R[24]]]],[11,"borrow",E,E,99,[[["self"]],[T]]],[11,R[198],E,E,99,[[["self"]],["typeid"]]],[11,R[195],E,E,99,[[["self"]],[T]]],[11,R[197],E,E,99,[[["self"]],[R[24]]]],[11,R[151],E,E,101,[[["self"]],[T]]],[11,R[200],E,E,101,N],[11,"from",E,E,101,[[[T]],[T]]],[11,"into",E,E,101,[[["self"]],[U]]],[11,R[196],E,E,101,[[[U]],[R[24]]]],[11,"borrow",E,E,101,[[["self"]],[T]]],[11,R[198],E,E,101,[[["self"]],["typeid"]]],[11,R[195],E,E,101,[[["self"]],[T]]],[11,R[197],E,E,101,[[["self"]],[R[24]]]],[11,R[151],E,E,102,[[["self"]],[T]]],[11,R[200],E,E,102,N],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[["self"]],[U]]],[11,R[196],E,E,102,[[[U]],[R[24]]]],[11,"borrow",E,E,102,[[["self"]],[T]]],[11,R[198],E,E,102,[[["self"]],["typeid"]]],[11,R[195],E,E,102,[[["self"]],[T]]],[11,R[197],E,E,102,[[["self"]],[R[24]]]],[11,R[151],E,E,103,[[["self"]],[T]]],[11,R[200],E,E,103,N],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[["self"]],[U]]],[11,R[196],E,E,103,[[[U]],[R[24]]]],[11,"borrow",E,E,103,[[["self"]],[T]]],[11,R[198],E,E,103,[[["self"]],["typeid"]]],[11,R[195],E,E,103,[[["self"]],[T]]],[11,R[197],E,E,103,[[["self"]],[R[24]]]],[11,R[151],E,E,104,[[["self"]],[T]]],[11,R[200],E,E,104,N],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[["self"]],[U]]],[11,R[196],E,E,104,[[[U]],[R[24]]]],[11,"borrow",E,E,104,[[["self"]],[T]]],[11,R[198],E,E,104,[[["self"]],["typeid"]]],[11,R[195],E,E,104,[[["self"]],[T]]],[11,R[197],E,E,104,[[["self"]],[R[24]]]],[11,R[151],E,E,105,[[["self"]],[T]]],[11,R[200],E,E,105,N],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[["self"]],[U]]],[11,R[196],E,E,105,[[[U]],[R[24]]]],[11,"borrow",E,E,105,[[["self"]],[T]]],[11,R[198],E,E,105,[[["self"]],["typeid"]]],[11,R[195],E,E,105,[[["self"]],[T]]],[11,R[197],E,E,105,[[["self"]],[R[24]]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[199],E,E,139,[[["self"]],["i"]]],[11,"into",E,E,139,[[["self"]],[U]]],[11,R[196],E,E,139,[[[U]],[R[24]]]],[11,"borrow",E,E,139,[[["self"]],[T]]],[11,R[198],E,E,139,[[["self"]],["typeid"]]],[11,R[195],E,E,139,[[["self"]],[T]]],[11,R[197],E,E,139,[[["self"]],[R[24]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[["self"]],[U]]],[11,R[196],E,E,106,[[[U]],[R[24]]]],[11,"borrow",E,E,106,[[["self"]],[T]]],[11,R[198],E,E,106,[[["self"]],["typeid"]]],[11,R[195],E,E,106,[[["self"]],[T]]],[11,R[197],E,E,106,[[["self"]],[R[24]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[["self"]],[U]]],[11,R[196],E,E,66,[[[U]],[R[24]]]],[11,"borrow",E,E,66,[[["self"]],[T]]],[11,R[198],E,E,66,[[["self"]],["typeid"]]],[11,R[195],E,E,66,[[["self"]],[T]]],[11,R[197],E,E,66,[[["self"]],[R[24]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[["self"]],[U]]],[11,R[196],E,E,67,[[[U]],[R[24]]]],[11,"borrow",E,E,67,[[["self"]],[T]]],[11,R[198],E,E,67,[[["self"]],["typeid"]]],[11,R[195],E,E,67,[[["self"]],[T]]],[11,R[197],E,E,67,[[["self"]],[R[24]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,"into",E,E,140,[[["self"]],[U]]],[11,R[196],E,E,140,[[[U]],[R[24]]]],[11,"borrow",E,E,140,[[["self"]],[T]]],[11,R[198],E,E,140,[[["self"]],["typeid"]]],[11,R[195],E,E,140,[[["self"]],[T]]],[11,R[197],E,E,140,[[["self"]],[R[24]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[["self"]],[U]]],[11,R[196],E,E,68,[[[U]],[R[24]]]],[11,"borrow",E,E,68,[[["self"]],[T]]],[11,R[198],E,E,68,[[["self"]],["typeid"]]],[11,R[195],E,E,68,[[["self"]],[T]]],[11,R[197],E,E,68,[[["self"]],[R[24]]]],[11,R[151],E,E,108,[[["self"]],[T]]],[11,R[200],E,E,108,N],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[["self"]],[U]]],[11,R[196],E,E,108,[[[U]],[R[24]]]],[11,"borrow",E,E,108,[[["self"]],[T]]],[11,R[198],E,E,108,[[["self"]],["typeid"]]],[11,R[195],E,E,108,[[["self"]],[T]]],[11,R[197],E,E,108,[[["self"]],[R[24]]]],[11,R[151],E,E,109,[[["self"]],[T]]],[11,R[200],E,E,109,N],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[["self"]],[U]]],[11,R[196],E,E,109,[[[U]],[R[24]]]],[11,"borrow",E,E,109,[[["self"]],[T]]],[11,R[198],E,E,109,[[["self"]],["typeid"]]],[11,R[195],E,E,109,[[["self"]],[T]]],[11,R[197],E,E,109,[[["self"]],[R[24]]]],[11,R[151],E,E,110,[[["self"]],[T]]],[11,R[200],E,E,110,N],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[["self"]],[U]]],[11,R[196],E,E,110,[[[U]],[R[24]]]],[11,"borrow",E,E,110,[[["self"]],[T]]],[11,R[198],E,E,110,[[["self"]],["typeid"]]],[11,R[195],E,E,110,[[["self"]],[T]]],[11,R[197],E,E,110,[[["self"]],[R[24]]]],[11,R[151],E,E,111,[[["self"]],[T]]],[11,R[200],E,E,111,N],[11,"from",E,E,111,[[[T]],[T]]],[11,"into",E,E,111,[[["self"]],[U]]],[11,R[196],E,E,111,[[[U]],[R[24]]]],[11,"borrow",E,E,111,[[["self"]],[T]]],[11,R[198],E,E,111,[[["self"]],["typeid"]]],[11,R[195],E,E,111,[[["self"]],[T]]],[11,R[197],E,E,111,[[["self"]],[R[24]]]],[11,R[151],E,E,112,[[["self"]],[T]]],[11,R[200],E,E,112,N],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[["self"]],[U]]],[11,R[196],E,E,112,[[[U]],[R[24]]]],[11,"borrow",E,E,112,[[["self"]],[T]]],[11,R[198],E,E,112,[[["self"]],["typeid"]]],[11,R[195],E,E,112,[[["self"]],[T]]],[11,R[197],E,E,112,[[["self"]],[R[24]]]],[11,R[151],E,E,113,[[["self"]],[T]]],[11,R[200],E,E,113,N],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[["self"]],[U]]],[11,R[196],E,E,113,[[[U]],[R[24]]]],[11,"borrow",E,E,113,[[["self"]],[T]]],[11,R[198],E,E,113,[[["self"]],["typeid"]]],[11,R[195],E,E,113,[[["self"]],[T]]],[11,R[197],E,E,113,[[["self"]],[R[24]]]],[11,R[151],E,E,114,[[["self"]],[T]]],[11,R[200],E,E,114,N],[11,"from",E,E,114,[[[T]],[T]]],[11,"into",E,E,114,[[["self"]],[U]]],[11,R[196],E,E,114,[[[U]],[R[24]]]],[11,"borrow",E,E,114,[[["self"]],[T]]],[11,R[198],E,E,114,[[["self"]],["typeid"]]],[11,R[195],E,E,114,[[["self"]],[T]]],[11,R[197],E,E,114,[[["self"]],[R[24]]]],[11,R[151],E,E,115,[[["self"]],[T]]],[11,R[200],E,E,115,N],[11,"from",E,E,115,[[[T]],[T]]],[11,"into",E,E,115,[[["self"]],[U]]],[11,R[196],E,E,115,[[[U]],[R[24]]]],[11,"borrow",E,E,115,[[["self"]],[T]]],[11,R[198],E,E,115,[[["self"]],["typeid"]]],[11,R[195],E,E,115,[[["self"]],[T]]],[11,R[197],E,E,115,[[["self"]],[R[24]]]],[11,R[151],E,E,116,[[["self"]],[T]]],[11,R[200],E,E,116,N],[11,"from",E,E,116,[[[T]],[T]]],[11,"into",E,E,116,[[["self"]],[U]]],[11,R[196],E,E,116,[[[U]],[R[24]]]],[11,"borrow",E,E,116,[[["self"]],[T]]],[11,R[198],E,E,116,[[["self"]],["typeid"]]],[11,R[195],E,E,116,[[["self"]],[T]]],[11,R[197],E,E,116,[[["self"]],[R[24]]]],[11,R[151],E,E,117,[[["self"]],[T]]],[11,R[200],E,E,117,N],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[["self"]],[U]]],[11,R[196],E,E,117,[[[U]],[R[24]]]],[11,"borrow",E,E,117,[[["self"]],[T]]],[11,R[198],E,E,117,[[["self"]],["typeid"]]],[11,R[195],E,E,117,[[["self"]],[T]]],[11,R[197],E,E,117,[[["self"]],[R[24]]]],[11,R[151],E,E,118,[[["self"]],[T]]],[11,R[200],E,E,118,N],[11,"from",E,E,118,[[[T]],[T]]],[11,"into",E,E,118,[[["self"]],[U]]],[11,R[196],E,E,118,[[[U]],[R[24]]]],[11,"borrow",E,E,118,[[["self"]],[T]]],[11,R[198],E,E,118,[[["self"]],["typeid"]]],[11,R[195],E,E,118,[[["self"]],[T]]],[11,R[197],E,E,118,[[["self"]],[R[24]]]],[11,R[151],E,E,119,[[["self"]],[T]]],[11,R[200],E,E,119,N],[11,"from",E,E,119,[[[T]],[T]]],[11,"into",E,E,119,[[["self"]],[U]]],[11,R[196],E,E,119,[[[U]],[R[24]]]],[11,"borrow",E,E,119,[[["self"]],[T]]],[11,R[198],E,E,119,[[["self"]],["typeid"]]],[11,R[195],E,E,119,[[["self"]],[T]]],[11,R[197],E,E,119,[[["self"]],[R[24]]]],[11,R[151],E,E,120,[[["self"]],[T]]],[11,R[200],E,E,120,N],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[["self"]],[U]]],[11,R[196],E,E,120,[[[U]],[R[24]]]],[11,"borrow",E,E,120,[[["self"]],[T]]],[11,R[198],E,E,120,[[["self"]],["typeid"]]],[11,R[195],E,E,120,[[["self"]],[T]]],[11,R[197],E,E,120,[[["self"]],[R[24]]]],[11,R[151],E,E,121,[[["self"]],[T]]],[11,R[200],E,E,121,N],[11,"from",E,E,121,[[[T]],[T]]],[11,"into",E,E,121,[[["self"]],[U]]],[11,R[196],E,E,121,[[[U]],[R[24]]]],[11,"borrow",E,E,121,[[["self"]],[T]]],[11,R[198],E,E,121,[[["self"]],["typeid"]]],[11,R[195],E,E,121,[[["self"]],[T]]],[11,R[197],E,E,121,[[["self"]],[R[24]]]],[11,R[151],E,E,122,[[["self"]],[T]]],[11,R[200],E,E,122,N],[11,"from",E,E,122,[[[T]],[T]]],[11,"into",E,E,122,[[["self"]],[U]]],[11,R[196],E,E,122,[[[U]],[R[24]]]],[11,"borrow",E,E,122,[[["self"]],[T]]],[11,R[198],E,E,122,[[["self"]],["typeid"]]],[11,R[195],E,E,122,[[["self"]],[T]]],[11,R[197],E,E,122,[[["self"]],[R[24]]]],[11,R[151],E,E,123,[[["self"]],[T]]],[11,R[200],E,E,123,N],[11,"from",E,E,123,[[[T]],[T]]],[11,"into",E,E,123,[[["self"]],[U]]],[11,R[196],E,E,123,[[[U]],[R[24]]]],[11,"borrow",E,E,123,[[["self"]],[T]]],[11,R[198],E,E,123,[[["self"]],["typeid"]]],[11,R[195],E,E,123,[[["self"]],[T]]],[11,R[197],E,E,123,[[["self"]],[R[24]]]],[11,R[151],E,E,124,[[["self"]],[T]]],[11,R[200],E,E,124,N],[11,"from",E,E,124,[[[T]],[T]]],[11,"into",E,E,124,[[["self"]],[U]]],[11,R[196],E,E,124,[[[U]],[R[24]]]],[11,"borrow",E,E,124,[[["self"]],[T]]],[11,R[198],E,E,124,[[["self"]],["typeid"]]],[11,R[195],E,E,124,[[["self"]],[T]]],[11,R[197],E,E,124,[[["self"]],[R[24]]]],[11,R[151],E,E,3,[[["self"]],[T]]],[11,R[200],E,E,3,N],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[196],E,E,3,[[[U]],[R[24]]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[198],E,E,3,[[["self"]],["typeid"]]],[11,R[195],E,E,3,[[["self"]],[T]]],[11,R[197],E,E,3,[[["self"]],[R[24]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[196],E,E,4,[[[U]],[R[24]]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[198],E,E,4,[[["self"]],["typeid"]]],[11,R[195],E,E,4,[[["self"]],[T]]],[11,R[197],E,E,4,[[["self"]],[R[24]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[196],E,E,5,[[[U]],[R[24]]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[198],E,E,5,[[["self"]],["typeid"]]],[11,R[195],E,E,5,[[["self"]],[T]]],[11,R[197],E,E,5,[[["self"]],[R[24]]]],[11,R[151],E,E,6,[[["self"]],[T]]],[11,R[200],E,E,6,N],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[["self"]],[U]]],[11,R[196],E,E,6,[[[U]],[R[24]]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[198],E,E,6,[[["self"]],["typeid"]]],[11,R[195],E,E,6,[[["self"]],[T]]],[11,R[197],E,E,6,[[["self"]],[R[24]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[["self"]],[U]]],[11,R[196],E,E,7,[[[U]],[R[24]]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[198],E,E,7,[[["self"]],["typeid"]]],[11,R[195],E,E,7,[[["self"]],[T]]],[11,R[197],E,E,7,[[["self"]],[R[24]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[["self"]],[U]]],[11,R[196],E,E,8,[[[U]],[R[24]]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[198],E,E,8,[[["self"]],["typeid"]]],[11,R[195],E,E,8,[[["self"]],[T]]],[11,R[197],E,E,8,[[["self"]],[R[24]]]],[11,R[151],E,E,9,[[["self"]],[T]]],[11,R[200],E,E,9,N],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[["self"]],[U]]],[11,R[196],E,E,9,[[[U]],[R[24]]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[198],E,E,9,[[["self"]],["typeid"]]],[11,R[195],E,E,9,[[["self"]],[T]]],[11,R[197],E,E,9,[[["self"]],[R[24]]]],[11,R[151],E,E,10,[[["self"]],[T]]],[11,R[200],E,E,10,N],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,R[196],E,E,10,[[[U]],[R[24]]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[198],E,E,10,[[["self"]],["typeid"]]],[11,R[195],E,E,10,[[["self"]],[T]]],[11,R[197],E,E,10,[[["self"]],[R[24]]]],[11,R[151],E,E,11,[[["self"]],[T]]],[11,R[200],E,E,11,N],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[196],E,E,11,[[[U]],[R[24]]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[198],E,E,11,[[["self"]],["typeid"]]],[11,R[195],E,E,11,[[["self"]],[T]]],[11,R[197],E,E,11,[[["self"]],[R[24]]]],[11,R[151],E,E,12,[[["self"]],[T]]],[11,R[200],E,E,12,N],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[["self"]],[U]]],[11,R[196],E,E,12,[[[U]],[R[24]]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[198],E,E,12,[[["self"]],["typeid"]]],[11,R[195],E,E,12,[[["self"]],[T]]],[11,R[197],E,E,12,[[["self"]],[R[24]]]],[11,R[151],E,E,13,[[["self"]],[T]]],[11,R[200],E,E,13,N],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[["self"]],[U]]],[11,R[196],E,E,13,[[[U]],[R[24]]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[198],E,E,13,[[["self"]],["typeid"]]],[11,R[195],E,E,13,[[["self"]],[T]]],[11,R[197],E,E,13,[[["self"]],[R[24]]]],[11,R[151],E,E,14,[[["self"]],[T]]],[11,R[200],E,E,14,N],[11,R[201],E,E,14,[[["self"]],["string"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[["self"]],[U]]],[11,R[196],E,E,14,[[[U]],[R[24]]]],[11,"borrow",E,E,14,[[["self"]],[T]]],[11,R[198],E,E,14,[[["self"]],["typeid"]]],[11,R[195],E,E,14,[[["self"]],[T]]],[11,R[197],E,E,14,[[["self"]],[R[24]]]],[11,R[151],E,E,15,[[["self"]],[T]]],[11,R[200],E,E,15,N],[11,R[201],E,E,15,[[["self"]],["string"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[["self"]],[U]]],[11,R[196],E,E,15,[[[U]],[R[24]]]],[11,"borrow",E,E,15,[[["self"]],[T]]],[11,R[198],E,E,15,[[["self"]],["typeid"]]],[11,R[195],E,E,15,[[["self"]],[T]]],[11,R[197],E,E,15,[[["self"]],[R[24]]]],[11,R[151],E,E,16,[[["self"]],[T]]],[11,R[200],E,E,16,N],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[["self"]],[U]]],[11,R[196],E,E,16,[[[U]],[R[24]]]],[11,"borrow",E,E,16,[[["self"]],[T]]],[11,R[198],E,E,16,[[["self"]],["typeid"]]],[11,R[195],E,E,16,[[["self"]],[T]]],[11,R[197],E,E,16,[[["self"]],[R[24]]]],[11,R[151],E,E,17,[[["self"]],[T]]],[11,R[200],E,E,17,N],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[["self"]],[U]]],[11,R[196],E,E,17,[[[U]],[R[24]]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[198],E,E,17,[[["self"]],["typeid"]]],[11,R[195],E,E,17,[[["self"]],[T]]],[11,R[197],E,E,17,[[["self"]],[R[24]]]],[11,R[151],E,E,18,[[["self"]],[T]]],[11,R[200],E,E,18,N],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[["self"]],[U]]],[11,R[196],E,E,18,[[[U]],[R[24]]]],[11,"borrow",E,E,18,[[["self"]],[T]]],[11,R[198],E,E,18,[[["self"]],["typeid"]]],[11,R[195],E,E,18,[[["self"]],[T]]],[11,R[197],E,E,18,[[["self"]],[R[24]]]],[11,R[151],E,E,19,[[["self"]],[T]]],[11,R[200],E,E,19,N],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[["self"]],[U]]],[11,R[196],E,E,19,[[[U]],[R[24]]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[198],E,E,19,[[["self"]],["typeid"]]],[11,R[195],E,E,19,[[["self"]],[T]]],[11,R[197],E,E,19,[[["self"]],[R[24]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[["self"]],[U]]],[11,R[196],E,E,20,[[[U]],[R[24]]]],[11,"borrow",E,E,20,[[["self"]],[T]]],[11,R[198],E,E,20,[[["self"]],["typeid"]]],[11,R[195],E,E,20,[[["self"]],[T]]],[11,R[197],E,E,20,[[["self"]],[R[24]]]],[11,R[151],E,E,21,[[["self"]],[T]]],[11,R[200],E,E,21,N],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[["self"]],[U]]],[11,R[196],E,E,21,[[[U]],[R[24]]]],[11,"borrow",E,E,21,[[["self"]],[T]]],[11,R[198],E,E,21,[[["self"]],["typeid"]]],[11,R[195],E,E,21,[[["self"]],[T]]],[11,R[197],E,E,21,[[["self"]],[R[24]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[["self"]],[U]]],[11,R[196],E,E,22,[[[U]],[R[24]]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[198],E,E,22,[[["self"]],["typeid"]]],[11,R[195],E,E,22,[[["self"]],[T]]],[11,R[197],E,E,22,[[["self"]],[R[24]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[["self"]],[U]]],[11,R[196],E,E,23,[[[U]],[R[24]]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[198],E,E,23,[[["self"]],["typeid"]]],[11,R[195],E,E,23,[[["self"]],[T]]],[11,R[197],E,E,23,[[["self"]],[R[24]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[["self"]],[U]]],[11,R[196],E,E,24,[[[U]],[R[24]]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[198],E,E,24,[[["self"]],["typeid"]]],[11,R[195],E,E,24,[[["self"]],[T]]],[11,R[197],E,E,24,[[["self"]],[R[24]]]],[11,"from",R[202],E,26,[[[T]],[T]]],[11,"into",E,E,26,[[["self"]],[U]]],[11,R[196],E,E,26,[[[U]],[R[24]]]],[11,"borrow",E,E,26,[[["self"]],[T]]],[11,R[198],E,E,26,[[["self"]],["typeid"]]],[11,R[195],E,E,26,[[["self"]],[T]]],[11,R[197],E,E,26,[[["self"]],[R[24]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[["self"]],[U]]],[11,R[196],E,E,27,[[[U]],[R[24]]]],[11,"borrow",E,E,27,[[["self"]],[T]]],[11,R[198],E,E,27,[[["self"]],["typeid"]]],[11,R[195],E,E,27,[[["self"]],[T]]],[11,R[197],E,E,27,[[["self"]],[R[24]]]],[11,R[151],E,E,25,[[["self"]],[T]]],[11,R[200],E,E,25,N],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[["self"]],[U]]],[11,R[196],E,E,25,[[[U]],[R[24]]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[198],E,E,25,[[["self"]],["typeid"]]],[11,R[195],E,E,25,[[["self"]],[T]]],[11,R[197],E,E,25,[[["self"]],[R[24]]]],[11,"from",R[203],E,28,[[[T]],[T]]],[11,"into",E,E,28,[[["self"]],[U]]],[11,R[196],E,E,28,[[[U]],[R[24]]]],[11,"borrow",E,E,28,[[["self"]],[T]]],[11,R[198],E,E,28,[[["self"]],["typeid"]]],[11,R[195],E,E,28,[[["self"]],[T]]],[11,R[197],E,E,28,[[["self"]],[R[24]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[["self"]],[U]]],[11,R[196],E,E,29,[[[U]],[R[24]]]],[11,"borrow",E,E,29,[[["self"]],[T]]],[11,R[198],E,E,29,[[["self"]],["typeid"]]],[11,R[195],E,E,29,[[["self"]],[T]]],[11,R[197],E,E,29,[[["self"]],[R[24]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[["self"]],[U]]],[11,R[196],E,E,30,[[[U]],[R[24]]]],[11,"borrow",E,E,30,[[["self"]],[T]]],[11,R[198],E,E,30,[[["self"]],["typeid"]]],[11,R[195],E,E,30,[[["self"]],[T]]],[11,R[197],E,E,30,[[["self"]],[R[24]]]],[11,"from",R[204],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[["self"]],[U]]],[11,R[196],E,E,31,[[[U]],[R[24]]]],[11,"borrow",E,E,31,[[["self"]],[T]]],[11,R[198],E,E,31,[[["self"]],["typeid"]]],[11,R[195],E,E,31,[[["self"]],[T]]],[11,R[197],E,E,31,[[["self"]],[R[24]]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[199],E,E,141,[[["self"]],["i"]]],[11,"into",E,E,141,[[["self"]],[U]]],[11,R[196],E,E,141,[[[U]],[R[24]]]],[11,"borrow",E,E,141,[[["self"]],[T]]],[11,R[198],E,E,141,[[["self"]],["typeid"]]],[11,R[195],E,E,141,[[["self"]],[T]]],[11,R[197],E,E,141,[[["self"]],[R[24]]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[199],E,E,142,[[["self"]],["i"]]],[11,"into",E,E,142,[[["self"]],[U]]],[11,R[196],E,E,142,[[[U]],[R[24]]]],[11,"borrow",E,E,142,[[["self"]],[T]]],[11,R[198],E,E,142,[[["self"]],["typeid"]]],[11,R[195],E,E,142,[[["self"]],[T]]],[11,R[197],E,E,142,[[["self"]],[R[24]]]],[11,"from",R[205],E,143,[[[T]],[T]]],[11,"into",E,E,143,[[["self"]],[U]]],[11,R[196],E,E,143,[[[U]],[R[24]]]],[11,"borrow",E,E,143,[[["self"]],[T]]],[11,R[198],E,E,143,[[["self"]],["typeid"]]],[11,R[195],E,E,143,[[["self"]],[T]]],[11,R[197],E,E,143,[[["self"]],[R[24]]]],[11,"from",R[206],E,34,[[[T]],[T]]],[11,"into",E,E,34,[[["self"]],[U]]],[11,R[196],E,E,34,[[[U]],[R[24]]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[198],E,E,34,[[["self"]],["typeid"]]],[11,R[195],E,E,34,[[["self"]],[T]]],[11,R[197],E,E,34,[[["self"]],[R[24]]]],[11,R[151],E,E,32,[[["self"]],[T]]],[11,R[200],E,E,32,N],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[["self"]],[U]]],[11,R[196],E,E,32,[[[U]],[R[24]]]],[11,"borrow",E,E,32,[[["self"]],[T]]],[11,R[198],E,E,32,[[["self"]],["typeid"]]],[11,R[195],E,E,32,[[["self"]],[T]]],[11,R[197],E,E,32,[[["self"]],[R[24]]]],[11,"as_ref","git2",E,69,N],[11,R[207],E,E,108,[[["self"],["sort"]],[R[21],[R[208]]]]],[11,"lt",E,E,108,[[["self"],["sort"]],["bool"]]],[11,"le",E,E,108,[[["self"],["sort"]],["bool"]]],[11,"gt",E,E,108,[[["self"],["sort"]],["bool"]]],[11,"ge",E,E,108,[[["self"],["sort"]],["bool"]]],[11,R[207],E,E,109,[[["self"],[R[154]]],[R[21],[R[208]]]]],[11,"lt",E,E,109,[[["self"],[R[154]]],["bool"]]],[11,"le",E,E,109,[[["self"],[R[154]]],["bool"]]],[11,"gt",E,E,109,[[["self"],[R[154]]],["bool"]]],[11,"ge",E,E,109,[[["self"],[R[154]]],["bool"]]],[11,R[207],E,E,110,[[["self"],[R[169]]],[R[21],[R[208]]]]],[11,"lt",E,E,110,[[["self"],[R[169]]],["bool"]]],[11,"le",E,E,110,[[["self"],[R[169]]],["bool"]]],[11,"gt",E,E,110,[[["self"],[R[169]]],["bool"]]],[11,"ge",E,E,110,[[["self"],[R[169]]],["bool"]]],[11,R[207],E,E,111,[[["self"],[R[171]]],[R[21],[R[208]]]]],[11,"lt",E,E,111,[[["self"],[R[171]]],["bool"]]],[11,"le",E,E,111,[[["self"],[R[171]]],["bool"]]],[11,"gt",E,E,111,[[["self"],[R[171]]],["bool"]]],[11,"ge",E,E,111,[[["self"],[R[171]]],["bool"]]],[11,R[207],E,E,112,[[["self"],[R[172]]],[R[21],[R[208]]]]],[11,"lt",E,E,112,[[["self"],[R[172]]],["bool"]]],[11,"le",E,E,112,[[["self"],[R[172]]],["bool"]]],[11,"gt",E,E,112,[[["self"],[R[172]]],["bool"]]],[11,"ge",E,E,112,[[["self"],[R[172]]],["bool"]]],[11,R[207],E,E,113,[[["self"],[R[174]]],[R[21],[R[208]]]]],[11,"lt",E,E,113,[[["self"],[R[174]]],["bool"]]],[11,"le",E,E,113,[[["self"],[R[174]]],["bool"]]],[11,"gt",E,E,113,[[["self"],[R[174]]],["bool"]]],[11,"ge",E,E,113,[[["self"],[R[174]]],["bool"]]],[11,R[207],E,E,114,[[["self"],[R[127]]],[R[21],[R[208]]]]],[11,"lt",E,E,114,[[["self"],[R[127]]],["bool"]]],[11,"le",E,E,114,[[["self"],[R[127]]],["bool"]]],[11,"gt",E,E,114,[[["self"],[R[127]]],["bool"]]],[11,"ge",E,E,114,[[["self"],[R[127]]],["bool"]]],[11,R[207],E,E,115,[[["self"],[R[175]]],[R[21],[R[208]]]]],[11,"lt",E,E,115,[[["self"],[R[175]]],["bool"]]],[11,"le",E,E,115,[[["self"],[R[175]]],["bool"]]],[11,"gt",E,E,115,[[["self"],[R[175]]],["bool"]]],[11,"ge",E,E,115,[[["self"],[R[175]]],["bool"]]],[11,R[207],E,E,116,[[["self"],[R[177]]],[R[21],[R[208]]]]],[11,"lt",E,E,116,[[["self"],[R[177]]],["bool"]]],[11,"le",E,E,116,[[["self"],[R[177]]],["bool"]]],[11,"gt",E,E,116,[[["self"],[R[177]]],["bool"]]],[11,"ge",E,E,116,[[["self"],[R[177]]],["bool"]]],[11,R[207],E,E,69,[[["self"],["oid"]],[R[21],[R[208]]]]],[11,R[207],E,E,78,[[["self"],[R[33]]],[R[21],[R[208]]]]],[11,R[207],E,E,102,[[["self"],["time"]],[R[21],[R[208]]]]],[11,R[207],E,E,103,[[["self"],[R[209]]],[R[21],[R[208]]]]],[11,R[207],E,E,105,[[["self"],[R[148]]],[R[21],[R[208]]]]],[11,R[207],E,E,117,[[["self"],["status"]],[R[21],[R[208]]]]],[11,"lt",E,E,117,[[["self"],["status"]],["bool"]]],[11,"le",E,E,117,[[["self"],["status"]],["bool"]]],[11,"gt",E,E,117,[[["self"],["status"]],["bool"]]],[11,"ge",E,E,117,[[["self"],["status"]],["bool"]]],[11,R[207],E,E,118,[[["self"],[R[183]]],[R[21],[R[208]]]]],[11,"lt",E,E,118,[[["self"],[R[183]]],["bool"]]],[11,"le",E,E,118,[[["self"],[R[183]]],["bool"]]],[11,"gt",E,E,118,[[["self"],[R[183]]],["bool"]]],[11,"ge",E,E,118,[[["self"],[R[183]]],["bool"]]],[11,R[207],E,E,119,[[["self"],[R[186]]],[R[21],[R[208]]]]],[11,"lt",E,E,119,[[["self"],[R[186]]],["bool"]]],[11,"le",E,E,119,[[["self"],[R[186]]],["bool"]]],[11,"gt",E,E,119,[[["self"],[R[186]]],["bool"]]],[11,"ge",E,E,119,[[["self"],[R[186]]],["bool"]]],[11,R[207],E,E,120,[[["self"],[R[86]]],[R[21],[R[208]]]]],[11,"lt",E,E,120,[[["self"],[R[86]]],["bool"]]],[11,"le",E,E,120,[[["self"],[R[86]]],["bool"]]],[11,"gt",E,E,120,[[["self"],[R[86]]],["bool"]]],[11,"ge",E,E,120,[[["self"],[R[86]]],["bool"]]],[11,R[207],E,E,121,[[["self"],[R[189]]],[R[21],[R[208]]]]],[11,"lt",E,E,121,[[["self"],[R[189]]],["bool"]]],[11,"le",E,E,121,[[["self"],[R[189]]],["bool"]]],[11,"gt",E,E,121,[[["self"],[R[189]]],["bool"]]],[11,"ge",E,E,121,[[["self"],[R[189]]],["bool"]]],[11,R[207],E,E,122,[[["self"],[R[191]]],[R[21],[R[208]]]]],[11,"lt",E,E,122,[[["self"],[R[191]]],["bool"]]],[11,"le",E,E,122,[[["self"],[R[191]]],["bool"]]],[11,"gt",E,E,122,[[["self"],[R[191]]],["bool"]]],[11,"ge",E,E,122,[[["self"],[R[191]]],["bool"]]],[11,R[207],E,E,123,[[["self"],[R[193]]],[R[21],[R[208]]]]],[11,"lt",E,E,123,[[["self"],[R[193]]],["bool"]]],[11,"le",E,E,123,[[["self"],[R[193]]],["bool"]]],[11,"gt",E,E,123,[[["self"],[R[193]]],["bool"]]],[11,"ge",E,E,123,[[["self"],[R[193]]],["bool"]]],[11,R[207],E,E,124,[[["self"],[R[194]]],[R[21],[R[208]]]]],[11,"lt",E,E,124,[[["self"],[R[194]]],["bool"]]],[11,"le",E,E,124,[[["self"],[R[194]]],["bool"]]],[11,"gt",E,E,124,[[["self"],[R[194]]],["bool"]]],[11,"ge",E,E,124,[[["self"],[R[194]]],["bool"]]],[11,R[210],E,E,109,[[],["self"]]],[11,R[210],E,E,112,[[],["self"]]],[11,R[210],R[202],E,26,[[],["self"]]],[11,R[210],E,E,27,[[],["self"]]],[11,R[210],"git2",E,37,[[],["self"]]],[11,R[210],E,E,42,[[],["self"]]],[11,R[210],E,E,48,[[],["self"]]],[11,R[210],E,E,49,[[],["self"]]],[11,R[210],E,E,53,[[],["self"]]],[11,R[210],E,E,59,[[],["self"]]],[11,R[210],E,E,63,[[],["self"]]],[11,R[210],E,E,74,[[],[R[102]]]],[11,R[210],E,E,75,[[],["self"]]],[11,R[210],E,E,85,[[],["self"]]],[11,R[210],E,E,86,[[],["self"]]],[11,R[210],E,E,88,[[],["self"]]],[11,R[210],E,E,95,[[],["self"]]],[11,R[210],E,E,99,[[],["self"]]],[11,R[210],E,E,100,[[],["self"]]],[11,R[210],E,E,120,[[],["self"]]],[11,R[210],E,E,123,[[],["self"]]],[11,R[210],E,E,124,[[],["self"]]],[11,"eq",E,E,9,[[["self"],[R[211]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[212]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[213]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[78]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[180]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[117]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[44]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[214]]],["bool"]]],[11,"eq",E,E,108,[[["self"],["sort"]],["bool"]]],[11,"ne",E,E,108,[[["self"],["sort"]],["bool"]]],[11,"eq",E,E,109,[[["self"],[R[154]]],["bool"]]],[11,"ne",E,E,109,[[["self"],[R[154]]],["bool"]]],[11,"eq",E,E,110,[[["self"],[R[169]]],["bool"]]],[11,"ne",E,E,110,[[["self"],[R[169]]],["bool"]]],[11,"eq",E,E,111,[[["self"],[R[171]]],["bool"]]],[11,"ne",E,E,111,[[["self"],[R[171]]],["bool"]]],[11,"eq",E,E,112,[[["self"],[R[172]]],["bool"]]],[11,"ne",E,E,112,[[["self"],[R[172]]],["bool"]]],[11,"eq",E,E,113,[[["self"],[R[174]]],["bool"]]],[11,"ne",E,E,113,[[["self"],[R[174]]],["bool"]]],[11,"eq",E,E,114,[[["self"],[R[127]]],["bool"]]],[11,"ne",E,E,114,[[["self"],[R[127]]],["bool"]]],[11,"eq",E,E,115,[[["self"],[R[175]]],["bool"]]],[11,"ne",E,E,115,[[["self"],[R[175]]],["bool"]]],[11,"eq",E,E,116,[[["self"],[R[177]]],["bool"]]],[11,"ne",E,E,116,[[["self"],[R[177]]],["bool"]]],[11,"eq",E,E,60,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,60,[[["self"],["error"]],["bool"]]],[11,"eq",E,E,69,[[["self"],["oid"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[91]]],["bool"]]],[11,"eq",E,E,78,[[["self"],[R[33]]],["bool"]]],[11,"eq",E,E,102,[[["self"],["time"]],["bool"]]],[11,"ne",E,E,102,[[["self"],["time"]],["bool"]]],[11,"eq",E,E,103,[[["self"],[R[209]]],["bool"]]],[11,"ne",E,E,103,[[["self"],[R[209]]],["bool"]]],[11,"eq",E,E,105,[[["self"],[R[148]]],["bool"]]],[11,"eq",E,E,117,[[["self"],["status"]],["bool"]]],[11,"ne",E,E,117,[[["self"],["status"]],["bool"]]],[11,"eq",E,E,118,[[["self"],[R[183]]],["bool"]]],[11,"ne",E,E,118,[[["self"],[R[183]]],["bool"]]],[11,"eq",E,E,19,[[["self"],["delta"]],["bool"]]],[11,"eq",E,E,119,[[["self"],[R[186]]],["bool"]]],[11,"ne",E,E,119,[[["self"],[R[186]]],["bool"]]],[11,"eq",E,E,120,[[["self"],[R[86]]],["bool"]]],[11,"ne",E,E,120,[[["self"],[R[86]]],["bool"]]],[11,"eq",E,E,121,[[["self"],[R[189]]],["bool"]]],[11,"ne",E,E,121,[[["self"],[R[189]]],["bool"]]],[11,"eq",E,E,122,[[["self"],[R[191]]],["bool"]]],[11,"ne",E,E,122,[[["self"],[R[191]]],["bool"]]],[11,"eq",E,E,123,[[["self"],[R[193]]],["bool"]]],[11,"ne",E,E,123,[[["self"],[R[193]]],["bool"]]],[11,"eq",E,E,124,[[["self"],[R[194]]],["bool"]]],[11,"ne",E,E,124,[[["self"],[R[194]]],["bool"]]],[11,R[215],R[204],E,141,[[["self"]],[R[21],[R[21]]]]],[11,R[215],E,E,142,[[["self"]],[R[21]]]],[11,R[215],"git2",E,125,[[["self"]],[R[21],[R[27]]]]],[11,R[215],E,E,126,[[["self"]],[R[21],[R[80]]]]],[11,R[215],E,E,128,[[["self"]],[R[21],[R[88]]]]],[11,R[215],E,E,134,[[["self"]],[R[21]]]],[11,R[215],E,E,133,[[["self"]],[R[21],[R[88]]]]],[11,R[215],E,E,132,[[["self"]],[R[21]]]],[11,R[215],E,E,136,[[["self"]],[R[21],[R[216]]]]],[11,R[215],E,E,137,[[["self"]],[R[21],["refspec"]]]],[11,R[215],E,E,138,[[["self"]],[R[21],[R[217]]]]],[11,R[215],E,E,139,[[["self"]],[R[21],[R[148]]]]],[11,"cmp",E,E,108,[[["self"],["sort"]],[R[208]]]],[11,"cmp",E,E,109,[[["self"],[R[154]]],[R[208]]]],[11,"cmp",E,E,110,[[["self"],[R[169]]],[R[208]]]],[11,"cmp",E,E,111,[[["self"],[R[171]]],[R[208]]]],[11,"cmp",E,E,112,[[["self"],[R[172]]],[R[208]]]],[11,"cmp",E,E,113,[[["self"],[R[174]]],[R[208]]]],[11,"cmp",E,E,114,[[["self"],[R[127]]],[R[208]]]],[11,"cmp",E,E,115,[[["self"],[R[175]]],[R[208]]]],[11,"cmp",E,E,116,[[["self"],[R[177]]],[R[208]]]],[11,"cmp",E,E,69,[[["self"],["oid"]],[R[208]]]],[11,"cmp",E,E,78,[[["self"],[R[33]]],[R[208]]]],[11,"cmp",E,E,102,[[["self"],["time"]],[R[208]]]],[11,"cmp",E,E,103,[[["self"],[R[209]]],[R[208]]]],[11,"cmp",E,E,105,[[["self"],[R[148]]],[R[208]]]],[11,"cmp",E,E,117,[[["self"],["status"]],[R[208]]]],[11,"cmp",E,E,118,[[["self"],[R[183]]],[R[208]]]],[11,"cmp",E,E,119,[[["self"],[R[186]]],[R[208]]]],[11,"cmp",E,E,120,[[["self"],[R[86]]],[R[208]]]],[11,"cmp",E,E,121,[[["self"],[R[189]]],[R[208]]]],[11,"cmp",E,E,122,[[["self"],[R[191]]],[R[208]]]],[11,"cmp",E,E,123,[[["self"],[R[193]]],[R[208]]]],[11,"cmp",E,E,124,[[["self"],[R[194]]],[R[208]]]],[11,"from",E,E,60,[[["nulerror"]],["error"]]],[11,"from",E,E,60,[[["joinpathserror"]],["error"]]],[11,"clone",E,E,9,[[["self"]],[R[211]]]],[11,"clone",E,E,10,[[["self"]],[R[212]]]],[11,"clone",E,E,11,[[["self"]],[R[213]]]],[11,"clone",E,E,12,[[["self"]],[R[100]]]],[11,"clone",E,E,13,[[["self"]],[R[218]]]],[11,"clone",E,E,14,[[["self"]],[R[78]]]],[11,"clone",E,E,15,[[["self"]],[R[180]]]],[11,"clone",E,E,16,[[["self"]],[R[117]]]],[11,"clone",E,E,17,[[["self"]],[R[44]]]],[11,"clone",E,E,18,[[["self"]],[R[214]]]],[11,"clone",E,E,108,[[["self"]],["sort"]]],[11,"clone",E,E,109,[[["self"]],[R[154]]]],[11,"clone",E,E,110,[[["self"]],[R[169]]]],[11,"clone",E,E,111,[[["self"]],[R[171]]]],[11,"clone",E,E,112,[[["self"]],[R[172]]]],[11,"clone",E,E,113,[[["self"]],[R[174]]]],[11,"clone",E,E,114,[[["self"]],[R[127]]]],[11,"clone",E,E,115,[[["self"]],[R[175]]]],[11,"clone",E,E,116,[[["self"]],[R[177]]]],[11,"clone",R[202],E,25,[[["self"]],[R[219]]]],[11,"clone",R[206],E,32,[[["self"]],["service"]]],[11,"clone","git2",E,38,[[["self"]],["self"]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],[R[220]]]],[11,"clone",E,E,65,[[["self"]],[R[79]]]],[11,"clone",E,E,69,[[["self"]],["oid"]]],[11,"clone",E,E,83,[[["self"]],["remote"]]],[11,"clone",E,E,94,[[["self"]],[R[29]]]],[11,"clone",E,E,6,[[["self"]],[R[221]]]],[11,"clone",E,E,101,[[["self"]],["self"]]],[11,"clone",E,E,102,[[["self"]],["time"]]],[11,"clone",E,E,103,[[["self"]],[R[209]]]],[11,"clone",E,E,104,[[["self"]],["self"]]],[11,"clone",E,E,105,[[["self"]],[R[148]]]],[11,"clone",E,E,117,[[["self"]],["status"]]],[11,"clone",E,E,118,[[["self"]],[R[183]]]],[11,"clone",E,E,19,[[["self"]],["delta"]]],[11,"clone",E,E,119,[[["self"]],[R[186]]]],[11,"clone",E,E,120,[[["self"]],[R[86]]]],[11,"clone",E,E,121,[[["self"]],[R[189]]]],[11,"clone",E,E,21,[[["self"]],[R[222]]]],[11,"clone",E,E,122,[[["self"]],[R[191]]]],[11,"clone",E,E,123,[[["self"]],[R[193]]]],[11,"clone",E,E,124,[[["self"]],[R[194]]]],[11,"drop",R[204],E,31,[[["self"]]]],[11,"drop",R[205],E,143,[[["self"]]]],[11,"drop",R[206],E,34,[[["self"]]]],[11,"drop","git2",E,35,[[["self"]]]],[11,"drop",E,E,38,[[["self"]]]],[11,"drop",E,E,39,[[["self"]]]],[11,"drop",E,E,41,[[["self"]]]],[11,"drop",E,E,42,[[["self"]]]],[11,"drop",E,E,43,[[["self"]]]],[11,"drop",E,E,44,[[["self"]]]],[11,"drop",E,E,127,[[["self"]]]],[11,"drop",E,E,45,[[["self"]]]],[11,"drop",E,E,46,[[["self"]]]],[11,"drop",E,E,47,[[["self"]]]],[11,"drop",E,E,50,[[["self"]]]],[11,"drop",E,E,56,[[["self"]]]],[11,"drop",E,E,61,[[["self"]]]],[11,"drop",E,E,129,[[["self"]]]],[11,"drop",E,E,62,[[["self"]]]],[11,"drop",E,E,64,[[["self"]]]],[11,"drop",E,E,131,[[["self"]]]],[11,"drop",E,E,65,[[["self"]]]],[11,"drop",E,E,66,[[["self"]]]],[11,"drop",E,E,67,[[["self"]]]],[11,"drop",E,E,140,[[["self"]]]],[11,"drop",E,E,68,[[["self"]]]],[11,"drop",E,E,70,[[["self"]]]],[11,"drop",E,E,71,[[["self"]]]],[11,"drop",E,E,72,[[["self"]]]],[11,"drop",E,E,73,[[["self"]]]],[11,"drop",E,E,76,[[["self"]]]],[11,"drop",E,E,78,[[["self"]]]],[11,"drop",E,E,79,[[["self"]]]],[11,"drop",E,E,80,[[["self"]]]],[11,"drop",E,E,83,[[["self"]]]],[11,"drop",E,E,87,[[["self"]]]],[11,"drop",E,E,90,[[["self"]]]],[11,"drop",E,E,93,[[["self"]]]],[11,"drop",E,E,94,[[["self"]]]],[11,"drop",E,E,96,[[["self"]]]],[11,"drop",E,E,98,[[["self"]]]],[11,"drop",E,E,101,[[["self"]]]],[11,"drop",E,E,104,[[["self"]]]],[11,"drop",E,E,105,[[["self"]]]],[11,"drop",E,E,106,[[["self"]]]],[11,"into",E,E,8,[[["self"]],["i32"]]],[11,"into",E,E,7,[[["self"]],[R[427]]]],[11,"extend",E,E,108,[[["self"],[T]]]],[11,"extend",E,E,109,[[["self"],[T]]]],[11,"extend",E,E,110,[[["self"],[T]]]],[11,"extend",E,E,111,[[["self"],[T]]]],[11,"extend",E,E,112,[[["self"],[T]]]],[11,"extend",E,E,113,[[["self"],[T]]]],[11,"extend",E,E,114,[[["self"],[T]]]],[11,"extend",E,E,115,[[["self"],[T]]]],[11,"extend",E,E,116,[[["self"],[T]]]],[11,"extend",E,E,117,[[["self"],[T]]]],[11,"extend",E,E,118,[[["self"],[T]]]],[11,"extend",E,E,119,[[["self"],[T]]]],[11,"extend",E,E,120,[[["self"],[T]]]],[11,"extend",E,E,121,[[["self"],[T]]]],[11,"extend",E,E,122,[[["self"],[T]]]],[11,"extend",E,E,123,[[["self"],[T]]]],[11,"extend",E,E,124,[[["self"],[T]]]],[11,"next",R[204],E,141,[[["self"]],[R[21],[R[21]]]]],[11,R[223],E,E,141,N],[11,"next",E,E,142,[[["self"]],[R[21]]]],[11,R[223],E,E,142,N],[11,"next","git2",E,125,[[["self"]],[R[21],[R[27]]]]],[11,R[223],E,E,125,N],[11,"next",E,E,41,[[["self"]],[R[21],[R[24]]]]],[11,"next",E,E,126,[[["self"]],[R[21],[R[80]]]]],[11,R[223],E,E,126,N],[11,"next",E,E,128,[[["self"]],[R[21],[R[88]]]]],[11,R[223],E,E,128,N],[11,"next",E,E,130,[[["self"]],[R[21],[R[62]]]]],[11,"next",E,E,129,[[["self"]],[R[21],[R[24]]]]],[11,"next",E,E,131,[[["self"]],[R[21],[R[24]]]]],[11,"next",E,E,134,[[["self"]],[R[21]]]],[11,R[223],E,E,134,N],[11,"next",E,E,133,[[["self"]],[R[21],[R[88]]]]],[11,R[223],E,E,133,N],[11,"next",E,E,132,[[["self"]],[R[21]]]],[11,R[223],E,E,132,N],[11,"next",E,"Performs the next rebase operation and returns the…",76,[[["self"]],[R[21],[R[24]]]]],[11,"next",E,E,79,[[["self"]],[R[21],[R[24]]]]],[11,"next",E,E,135,[[["self"]],[R[21],[R[24]]]]],[11,"next",E,E,136,[[["self"]],[R[21],[R[216]]]]],[11,R[223],E,E,136,N],[11,"next",E,E,137,[[["self"]],[R[21],["refspec"]]]],[11,R[223],E,E,137,N],[11,"next",E,E,93,[[["self"]],[R[21],[R[24]]]]],[11,"next",E,E,138,[[["self"]],[R[21],[R[217]]]]],[11,R[223],E,E,138,N],[11,"next",E,E,139,[[["self"]],[R[21],[R[148]]]]],[11,R[223],E,E,139,N],[11,"fmt",E,E,60,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,"Hex-encode this Oid into a formatter.",69,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,94,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,14,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,15,[[["self"],[R[224]]],[R[24]]]],[11,"deref_mut",E,E,42,N],[11,"deref",R[205],E,143,N],[11,"deref","git2",E,42,N],[11,"hash",E,E,108,N],[11,"hash",E,E,109,N],[11,"hash",E,E,110,N],[11,"hash",E,E,111,N],[11,"hash",E,E,112,N],[11,"hash",E,E,113,N],[11,"hash",E,E,114,N],[11,"hash",E,E,115,N],[11,"hash",E,E,116,N],[11,"hash",E,E,69,[[["self"],["h"]]]],[11,"hash",E,E,117,N],[11,"hash",E,E,118,N],[11,"hash",E,E,119,N],[11,"hash",E,E,120,N],[11,"hash",E,E,121,N],[11,"hash",E,E,122,N],[11,"hash",E,E,123,N],[11,"hash",E,E,124,N],[11,"sub",E,R[225],108,[[["self"],["sort"]],["sort"]]],[11,"sub",E,R[225],109,[[["self"],[R[154]]],[R[154]]]],[11,"sub",E,R[225],110,[[["self"],[R[169]]],[R[169]]]],[11,"sub",E,R[225],111,[[["self"],[R[171]]],[R[171]]]],[11,"sub",E,R[225],112,[[["self"],[R[172]]],[R[172]]]],[11,"sub",E,R[225],113,[[["self"],[R[174]]],[R[174]]]],[11,"sub",E,R[225],114,[[["self"],[R[127]]],[R[127]]]],[11,"sub",E,R[225],115,[[["self"],[R[175]]],[R[175]]]],[11,"sub",E,R[225],116,[[["self"],[R[177]]],[R[177]]]],[11,"sub",E,R[225],117,[[["self"],["status"]],["status"]]],[11,"sub",E,R[225],118,[[["self"],[R[183]]],[R[183]]]],[11,"sub",E,R[225],119,[[["self"],[R[186]]],[R[186]]]],[11,"sub",E,R[225],120,[[["self"],[R[86]]],[R[86]]]],[11,"sub",E,R[225],121,[[["self"],[R[189]]],[R[189]]]],[11,"sub",E,R[225],122,[[["self"],[R[191]]],[R[191]]]],[11,"sub",E,R[225],123,[[["self"],[R[193]]],[R[193]]]],[11,"sub",E,R[225],124,[[["self"],[R[194]]],[R[194]]]],[11,R[226],E,R[227],108,[[["self"],["sort"]]]],[11,R[226],E,R[227],109,[[["self"],[R[154]]]]],[11,R[226],E,R[227],110,[[["self"],[R[169]]]]],[11,R[226],E,R[227],111,[[["self"],[R[171]]]]],[11,R[226],E,R[227],112,[[["self"],[R[172]]]]],[11,R[226],E,R[227],113,[[["self"],[R[174]]]]],[11,R[226],E,R[227],114,[[["self"],[R[127]]]]],[11,R[226],E,R[227],115,[[["self"],[R[175]]]]],[11,R[226],E,R[227],116,[[["self"],[R[177]]]]],[11,R[226],E,R[227],117,[[["self"],["status"]]]],[11,R[226],E,R[227],118,[[["self"],[R[183]]]]],[11,R[226],E,R[227],119,[[["self"],[R[186]]]]],[11,R[226],E,R[227],120,[[["self"],[R[86]]]]],[11,R[226],E,R[227],121,[[["self"],[R[189]]]]],[11,R[226],E,R[227],122,[[["self"],[R[191]]]]],[11,R[226],E,R[227],123,[[["self"],[R[193]]]]],[11,R[226],E,R[227],124,[[["self"],[R[194]]]]],[11,"not",E,R[228],108,[[["self"]],["sort"]]],[11,"not",E,R[228],109,[[["self"]],[R[154]]]],[11,"not",E,R[228],110,[[["self"]],[R[169]]]],[11,"not",E,R[228],111,[[["self"]],[R[171]]]],[11,"not",E,R[228],112,[[["self"]],[R[172]]]],[11,"not",E,R[228],113,[[["self"]],[R[174]]]],[11,"not",E,R[228],114,[[["self"]],[R[127]]]],[11,"not",E,R[228],115,[[["self"]],[R[175]]]],[11,"not",E,R[228],116,[[["self"]],[R[177]]]],[11,"not",E,R[228],117,[[["self"]],["status"]]],[11,"not",E,R[228],118,[[["self"]],[R[183]]]],[11,"not",E,R[228],119,[[["self"]],[R[186]]]],[11,"not",E,R[228],120,[[["self"]],[R[86]]]],[11,"not",E,R[228],121,[[["self"]],[R[189]]]],[11,"not",E,R[228],122,[[["self"]],[R[191]]]],[11,"not",E,R[228],123,[[["self"]],[R[193]]]],[11,"not",E,R[228],124,[[["self"]],[R[194]]]],[11,"bitand",E,R[229],108,[[["self"],["sort"]],["sort"]]],[11,"bitand",E,R[229],109,[[["self"],[R[154]]],[R[154]]]],[11,"bitand",E,R[229],110,[[["self"],[R[169]]],[R[169]]]],[11,"bitand",E,R[229],111,[[["self"],[R[171]]],[R[171]]]],[11,"bitand",E,R[229],112,[[["self"],[R[172]]],[R[172]]]],[11,"bitand",E,R[229],113,[[["self"],[R[174]]],[R[174]]]],[11,"bitand",E,R[229],114,[[["self"],[R[127]]],[R[127]]]],[11,"bitand",E,R[229],115,[[["self"],[R[175]]],[R[175]]]],[11,"bitand",E,R[229],116,[[["self"],[R[177]]],[R[177]]]],[11,"bitand",E,R[229],117,[[["self"],["status"]],["status"]]],[11,"bitand",E,R[229],118,[[["self"],[R[183]]],[R[183]]]],[11,"bitand",E,R[229],119,[[["self"],[R[186]]],[R[186]]]],[11,"bitand",E,R[229],120,[[["self"],[R[86]]],[R[86]]]],[11,"bitand",E,R[229],121,[[["self"],[R[189]]],[R[189]]]],[11,"bitand",E,R[229],122,[[["self"],[R[191]]],[R[191]]]],[11,"bitand",E,R[229],123,[[["self"],[R[193]]],[R[193]]]],[11,"bitand",E,R[229],124,[[["self"],[R[194]]],[R[194]]]],[11,"bitor",E,R[230],108,[[["self"],["sort"]],["sort"]]],[11,"bitor",E,R[230],109,[[["self"],[R[154]]],[R[154]]]],[11,"bitor",E,R[230],110,[[["self"],[R[169]]],[R[169]]]],[11,"bitor",E,R[230],111,[[["self"],[R[171]]],[R[171]]]],[11,"bitor",E,R[230],112,[[["self"],[R[172]]],[R[172]]]],[11,"bitor",E,R[230],113,[[["self"],[R[174]]],[R[174]]]],[11,"bitor",E,R[230],114,[[["self"],[R[127]]],[R[127]]]],[11,"bitor",E,R[230],115,[[["self"],[R[175]]],[R[175]]]],[11,"bitor",E,R[230],116,[[["self"],[R[177]]],[R[177]]]],[11,"bitor",E,R[230],117,[[["self"],["status"]],["status"]]],[11,"bitor",E,R[230],118,[[["self"],[R[183]]],[R[183]]]],[11,"bitor",E,R[230],119,[[["self"],[R[186]]],[R[186]]]],[11,"bitor",E,R[230],120,[[["self"],[R[86]]],[R[86]]]],[11,"bitor",E,R[230],121,[[["self"],[R[189]]],[R[189]]]],[11,"bitor",E,R[230],122,[[["self"],[R[191]]],[R[191]]]],[11,"bitor",E,R[230],123,[[["self"],[R[193]]],[R[193]]]],[11,"bitor",E,R[230],124,[[["self"],[R[194]]],[R[194]]]],[11,"bitxor",E,R[231],108,[[["self"],["sort"]],["sort"]]],[11,"bitxor",E,R[231],109,[[["self"],[R[154]]],[R[154]]]],[11,"bitxor",E,R[231],110,[[["self"],[R[169]]],[R[169]]]],[11,"bitxor",E,R[231],111,[[["self"],[R[171]]],[R[171]]]],[11,"bitxor",E,R[231],112,[[["self"],[R[172]]],[R[172]]]],[11,"bitxor",E,R[231],113,[[["self"],[R[174]]],[R[174]]]],[11,"bitxor",E,R[231],114,[[["self"],[R[127]]],[R[127]]]],[11,"bitxor",E,R[231],115,[[["self"],[R[175]]],[R[175]]]],[11,"bitxor",E,R[231],116,[[["self"],[R[177]]],[R[177]]]],[11,"bitxor",E,R[231],117,[[["self"],["status"]],["status"]]],[11,"bitxor",E,R[231],118,[[["self"],[R[183]]],[R[183]]]],[11,"bitxor",E,R[231],119,[[["self"],[R[186]]],[R[186]]]],[11,"bitxor",E,R[231],120,[[["self"],[R[86]]],[R[86]]]],[11,"bitxor",E,R[231],121,[[["self"],[R[189]]],[R[189]]]],[11,"bitxor",E,R[231],122,[[["self"],[R[191]]],[R[191]]]],[11,"bitxor",E,R[231],123,[[["self"],[R[193]]],[R[193]]]],[11,"bitxor",E,R[231],124,[[["self"],[R[194]]],[R[194]]]],[11,R[232],E,R[233],108,[[["self"],["sort"]]]],[11,R[232],E,R[233],109,[[["self"],[R[154]]]]],[11,R[232],E,R[233],110,[[["self"],[R[169]]]]],[11,R[232],E,R[233],111,[[["self"],[R[171]]]]],[11,R[232],E,R[233],112,[[["self"],[R[172]]]]],[11,R[232],E,R[233],113,[[["self"],[R[174]]]]],[11,R[232],E,R[233],114,[[["self"],[R[127]]]]],[11,R[232],E,R[233],115,[[["self"],[R[175]]]]],[11,R[232],E,R[233],116,[[["self"],[R[177]]]]],[11,R[232],E,R[233],117,[[["self"],["status"]]]],[11,R[232],E,R[233],118,[[["self"],[R[183]]]]],[11,R[232],E,R[233],119,[[["self"],[R[186]]]]],[11,R[232],E,R[233],120,[[["self"],[R[86]]]]],[11,R[232],E,R[233],121,[[["self"],[R[189]]]]],[11,R[232],E,R[233],122,[[["self"],[R[191]]]]],[11,R[232],E,R[233],123,[[["self"],[R[193]]]]],[11,R[232],E,R[233],124,[[["self"],[R[194]]]]],[11,R[234],E,R[235],108,[[["self"],["sort"]]]],[11,R[234],E,R[235],109,[[["self"],[R[154]]]]],[11,R[234],E,R[235],110,[[["self"],[R[169]]]]],[11,R[234],E,R[235],111,[[["self"],[R[171]]]]],[11,R[234],E,R[235],112,[[["self"],[R[172]]]]],[11,R[234],E,R[235],113,[[["self"],[R[174]]]]],[11,R[234],E,R[235],114,[[["self"],[R[127]]]]],[11,R[234],E,R[235],115,[[["self"],[R[175]]]]],[11,R[234],E,R[235],116,[[["self"],[R[177]]]]],[11,R[234],E,R[235],117,[[["self"],["status"]]]],[11,R[234],E,R[235],118,[[["self"],[R[183]]]]],[11,R[234],E,R[235],119,[[["self"],[R[186]]]]],[11,R[234],E,R[235],120,[[["self"],[R[86]]]]],[11,R[234],E,R[235],121,[[["self"],[R[189]]]]],[11,R[234],E,R[235],122,[[["self"],[R[191]]]]],[11,R[234],E,R[235],123,[[["self"],[R[193]]]]],[11,R[234],E,R[235],124,[[["self"],[R[194]]]]],[11,R[236],E,R[237],108,[[["self"],["sort"]]]],[11,R[236],E,R[237],109,[[["self"],[R[154]]]]],[11,R[236],E,R[237],110,[[["self"],[R[169]]]]],[11,R[236],E,R[237],111,[[["self"],[R[171]]]]],[11,R[236],E,R[237],112,[[["self"],[R[172]]]]],[11,R[236],E,R[237],113,[[["self"],[R[174]]]]],[11,R[236],E,R[237],114,[[["self"],[R[127]]]]],[11,R[236],E,R[237],115,[[["self"],[R[175]]]]],[11,R[236],E,R[237],116,[[["self"],[R[177]]]]],[11,R[236],E,R[237],117,[[["self"],["status"]]]],[11,R[236],E,R[237],118,[[["self"],[R[183]]]]],[11,R[236],E,R[237],119,[[["self"],[R[186]]]]],[11,R[236],E,R[237],120,[[["self"],[R[86]]]]],[11,R[236],E,R[237],121,[[["self"],[R[189]]]]],[11,R[236],E,R[237],122,[[["self"],[R[191]]]]],[11,R[236],E,R[237],123,[[["self"],[R[193]]]]],[11,R[236],E,R[237],124,[[["self"],[R[194]]]]],[11,R[238],E,E,108,[[[T]],["sort"]]],[11,R[238],E,E,109,[[[T]],[R[154]]]],[11,R[238],E,E,110,[[[T]],[R[169]]]],[11,R[238],E,E,111,[[[T]],[R[171]]]],[11,R[238],E,E,112,[[[T]],[R[172]]]],[11,R[238],E,E,113,[[[T]],[R[174]]]],[11,R[238],E,E,114,[[[T]],[R[127]]]],[11,R[238],E,E,115,[[[T]],[R[175]]]],[11,R[238],E,E,116,[[[T]],[R[177]]]],[11,R[238],E,E,117,[[[T]],["status"]]],[11,R[238],E,E,118,[[[T]],[R[183]]]],[11,R[238],E,E,119,[[[T]],[R[186]]]],[11,R[238],E,E,120,[[[T]],[R[86]]]],[11,R[238],E,E,121,[[[T]],[R[189]]]],[11,R[238],E,E,122,[[[T]],[R[191]]]],[11,R[238],E,E,123,[[[T]],[R[193]]]],[11,R[238],E,E,124,[[[T]],[R[194]]]],[11,"fmt",E,E,9,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,10,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,11,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,14,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,15,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,16,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,17,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,18,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,108,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,109,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,110,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,111,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,112,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,113,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,114,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,115,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,116,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",R[205],E,143,[[["self"],[R[224]]],[R[24],["error"]]]],[11,"fmt","git2",E,38,[[["self"],[R[224]]],[R[24],["error"]]]],[11,"fmt",E,E,43,[[["self"],[R[224]]],[R[24],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,60,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,64,[[["self"],[R[224]]],[R[24],["error"]]]],[11,"fmt",E,E,65,[[["self"],[R[224]]],[R[24],["error"]]]],[11,"fmt",E,E,69,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,5,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,77,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,101,[[["self"],[R[224]]],[R[24],["error"]]]],[11,"fmt",E,E,104,[[["self"],[R[224]]],[R[24],["error"]]]],[11,"fmt",E,E,117,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,118,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,19,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,119,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,120,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,121,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,122,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,24,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,123,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,124,[[["self"],[R[224]]],[R[24]]]],[11,R[83],E,R[239],69,[[["str"]],[R[24],["oid","error"]]]],[11,"fmt",E,E,108,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,109,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,110,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,111,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,112,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,113,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,114,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,115,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,116,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,117,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,118,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,119,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,120,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,121,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,122,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,123,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,124,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,108,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,109,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,110,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,111,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,112,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,113,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,114,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,115,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,116,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,117,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,118,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,119,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,120,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,121,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,122,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,123,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,124,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,108,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,109,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,110,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,111,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,112,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,113,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,114,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,115,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,116,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,117,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,118,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,119,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,120,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,121,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,122,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,123,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,124,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,108,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,109,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,110,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,111,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,112,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,113,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,114,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,115,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,116,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,117,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,118,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,119,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,120,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,121,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,122,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,123,[[["self"],[R[224]]],[R[24]]]],[11,"fmt",E,E,124,[[["self"],[R[224]]],[R[24]]]],[11,"write",E,E,39,N],[11,"flush",E,E,39,[[["self"]],[R[24]]]],[11,"write",E,E,68,N],[11,"flush",E,E,68,[[["self"]],[R[24]]]],[11,"read",E,E,140,N],[11,R[240],E,E,60,[[["self"]],["str"]]]],"p":[[3,R[241]],[3,R[242]],[3,R[243]],[4,R[244]],[4,R[245]],[4,R[246]],[4,R[247]],[4,R[248]],[4,R[249]],[4,R[250]],[4,R[251]],[4,R[252]],[4,R[253]],[4,R[254]],[4,R[255]],[4,R[256]],[4,R[257]],[4,R[258]],[4,R[259]],[4,"Delta"],[4,R[260]],[4,R[261]],[4,R[262]],[4,R[263]],[4,R[264]],[4,R[265]],[3,R[266]],[3,R[267]],[3,"Cert"],[3,R[268]],[3,"CertX509"],[3,R[269]],[4,"Service"],[8,R[270]],[3,R[271]],[3,"Blame"],[3,R[272]],[3,R[273]],[3,"Blob"],[3,R[274]],[3,"Branch"],[3,"Branches"],[3,"Buf"],[3,"Commit"],[3,R[8]],[3,R[275]],[3,"Cred"],[3,R[11]],[3,R[276]],[3,R[277]],[3,"Diff"],[3,R[278]],[3,"DiffFile"],[3,R[279]],[3,"DiffLine"],[3,"DiffHunk"],[3,R[280]],[3,R[281]],[3,R[282]],[3,R[283]],[3,"Error"],[3,"Index"],[3,R[284]],[3,R[285]],[3,"Note"],[3,R[9]],[3,"Odb"],[3,R[286]],[3,R[287]],[3,"Oid"],[3,R[288]],[3,"Pathspec"],[3,R[289]],[3,"Patch"],[3,R[290]],[3,R[291]],[3,"Rebase"],[3,R[292]],[3,R[6]],[3,R[293]],[3,"Reflog"],[3,R[294]],[3,"Refspec"],[3,"Remote"],[3,R[295]],[3,R[296]],[3,R[297]],[3,R[298]],[3,R[299]],[3,R[17]],[3,R[7]],[3,R[300]],[3,"Revspec"],[3,"Revwalk"],[3,R[301]],[3,R[302]],[3,"Statuses"],[3,R[303]],[3,R[10]],[3,R[304]],[3,R[305]],[3,"Tag"],[3,"Time"],[3,R[306]],[3,"Tree"],[3,R[307]],[3,R[308]],[8,R[309]],[3,"Sort"],[3,R[310]],[3,R[311]],[3,R[312]],[3,R[313]],[3,R[314]],[3,R[315]],[3,R[316]],[3,R[317]],[3,"Status"],[3,R[318]],[3,R[319]],[3,R[320]],[3,R[321]],[3,R[322]],[3,R[323]],[3,R[324]],[3,R[325]],[3,"Parents"],[3,R[326]],[3,"Deltas"],[3,R[327]],[3,R[328]],[3,"Notes"],[3,R[329]],[3,R[330]],[3,R[331]],[3,R[332]],[3,R[333]],[3,"Refspecs"],[3,R[334]],[3,"TreeIter"],[3,R[335]],[3,"Iter"],[3,R[336]],[3,"OidArray"]]};
searchIndex[R[338]]={"doc":E,"i":[[3,R[439],R[338],E,N,N],[12,"from",E,E,0,N],[12,"to",E,E,0,N],[12,"flags",E,E,0,N],[3,R[440],E,E,N,N],[12,R[77],E,E,1,N],[12,"klass",E,E,1,N],[3,"git_oid",E,E,N,N],[12,"id",E,E,2,N],[3,R[433],E,E,N,N],[12,"strings",E,E,3,N],[12,"count",E,E,3,N],[3,R[434],E,E,N,N],[12,"ids",E,E,4,N],[12,"count",E,E,4,N],[3,R[441],E,E,N,N],[12,"name",E,E,5,N],[12,"email",E,E,5,N],[12,"when",E,E,5,N],[3,R[431],E,E,N,N],[12,"time",E,E,6,N],[12,"offset",E,E,6,N],[12,"sign",E,E,6,N],[3,R[442],E,E,N,N],[12,R[362],E,E,7,N],[12,R[374],E,E,7,N],[12,R[375],E,E,7,N],[12,"bare",E,E,7,N],[12,"local",E,E,7,N],[12,"checkout_branch",E,E,7,N],[12,"repository_cb",E,E,7,N],[12,"repository_cb_payload",E,E,7,N],[12,"remote_cb",E,E,7,N],[12,"remote_cb_payload",E,E,7,N],[3,R[339],E,E,N,N],[12,R[362],E,E,8,N],[12,"checkout_strategy",E,E,8,N],[12,R[340],E,E,8,N],[12,"dir_mode",E,E,8,N],[12,"file_mode",E,E,8,N],[12,"file_open_flags",E,E,8,N],[12,"notify_flags",E,E,8,N],[12,R[395],E,E,8,N],[12,"notify_payload",E,E,8,N],[12,R[341],E,E,8,N],[12,R[421],E,E,8,N],[12,"paths",E,E,8,N],[12,"baseline",E,E,8,N],[12,"baseline_index",E,E,8,N],[12,"target_directory",E,E,8,N],[12,R[342],E,E,8,N],[12,R[343],E,E,8,N],[12,R[344],E,E,8,N],[12,"perfdata_cb",E,E,8,N],[12,"perfdata_payload",E,E,8,N],[3,R[443],E,E,N,N],[12,"mkdir_calls",E,E,9,N],[12,"stat_calls",E,E,9,N],[12,"chmod_calls",E,E,9,N],[3,R[444],E,E,N,N],[12,R[362],E,E,10,N],[12,R[345],E,E,10,N],[12,"completion",E,E,10,N],[12,R[346],E,E,10,N],[12,R[347],E,E,10,N],[12,R[348],E,E,10,N],[12,R[113],E,E,10,N],[12,"pack_progress",E,E,10,N],[12,"push_transfer_progress",E,E,10,N],[12,R[349],E,E,10,N],[12,"push_negotiation",E,E,10,N],[12,R[25],E,E,10,N],[12,"payload",E,E,10,N],[3,R[445],E,E,N,N],[12,R[362],E,E,11,N],[12,R[377],E,E,11,N],[12,"prune",E,E,11,N],[12,R[350],E,E,11,N],[12,R[351],E,E,11,N],[12,R[378],E,E,11,N],[12,R[379],E,E,11,N],[3,R[446],E,E,N,N],[12,"src_refname",E,E,12,N],[12,"dst_refname",E,E,12,N],[12,"src",E,E,12,N],[12,"dst",E,E,12,N],[3,"git_cert",E,E,N,N],[12,"cert_type",E,E,13,N],[3,R[447],E,E,N,N],[12,"parent",E,E,14,N],[12,"kind",E,E,14,N],[12,"hash_md5",E,E,14,N],[12,R[352],E,E,14,N],[3,R[448],E,E,N,N],[12,"parent",E,E,15,N],[12,"data",E,E,15,N],[12,"len",E,E,15,N],[3,R[435],E,E,N,N],[12,R[353],E,E,16,N],[12,R[354],E,E,16,N],[12,R[355],E,E,16,N],[12,R[356],E,E,16,N],[12,R[357],E,E,16,N],[12,R[358],E,E,16,N],[12,R[359],E,E,16,N],[3,R[449],E,E,N,N],[12,"id",E,E,17,N],[12,"path",E,E,17,N],[12,"size",E,E,17,N],[12,"flags",E,E,17,N],[12,"mode",E,E,17,N],[3,R[450],E,E,N,N],[12,R[362],E,E,18,N],[12,"show",E,E,18,N],[12,"flags",E,E,18,N],[12,R[85],E,E,18,N],[12,"baseline",E,E,18,N],[3,R[451],E,E,N,N],[12,"status",E,E,19,N],[12,"flags",E,E,19,N],[12,R[405],E,E,19,N],[12,"nfiles",E,E,19,N],[12,R[57],E,E,19,N],[12,R[58],E,E,19,N],[3,R[452],E,E,N,N],[12,"status",E,E,20,N],[12,R[360],E,E,20,N],[12,R[361],E,E,20,N],[3,"git_buf",E,E,N,N],[12,"ptr",E,E,21,N],[12,"asize",E,E,21,N],[12,"size",E,E,21,N],[3,R[436],E,E,N,N],[12,R[362],E,E,22,N],[12,"flags",E,E,22,N],[12,"min_match_characters",E,E,22,N],[12,R[363],E,E,22,N],[12,R[364],E,E,22,N],[12,"min_line",E,E,22,N],[12,"max_line",E,E,22,N],[3,R[437],E,E,N,N],[12,R[365],E,E,23,N],[12,R[366],E,E,23,N],[12,"final_start_line_number",E,E,23,N],[12,R[367],E,E,23,N],[12,R[368],E,E,23,N],[12,"orig_path",E,E,23,N],[12,"orig_start_line_number",E,E,23,N],[12,R[369],E,E,23,N],[12,"boundary",E,E,23,N],[3,R[438],E,E,N,N],[12,"ctime",E,E,24,N],[12,"mtime",E,E,24,N],[12,"dev",E,E,24,N],[12,"ino",E,E,24,N],[12,"mode",E,E,24,N],[12,"uid",E,E,24,N],[12,"gid",E,E,24,N],[12,R[370],E,E,24,N],[12,"id",E,E,24,N],[12,"flags",E,E,24,N],[12,R[371],E,E,24,N],[12,"path",E,E,24,N],[3,R[432],E,E,N,N],[12,"seconds",E,E,25,N],[12,R[372],E,E,25,N],[3,R[453],E,E,N,N],[12,"name",E,E,26,N],[12,"value",E,E,26,N],[12,R[373],E,E,26,N],[12,"level",E,E,26,N],[12,"free",E,E,26,N],[12,"payload",E,E,26,N],[3,R[454],E,E,N,N],[12,R[362],E,E,27,N],[12,R[374],E,E,27,N],[12,R[375],E,E,27,N],[12,R[376],E,E,27,N],[3,R[455],E,E,N,N],[12,"write",E,E,28,N],[12,"close",E,E,28,N],[12,"free",E,E,28,N],[3,"git_cred",E,E,N,N],[12,"credtype",E,E,29,N],[12,"free",E,E,29,N],[3,R[456],E,E,N,N],[12,R[362],E,E,30,N],[12,"pb_parallelism",E,E,30,N],[12,R[377],E,E,30,N],[12,R[378],E,E,30,N],[12,R[379],E,E,30,N],[3,R[380],E,E,N,N],[12,R[362],E,E,31,N],[12,"flags",E,E,31,N],[12,"mode",E,E,31,N],[12,R[381],E,E,31,N],[12,R[240],E,E,31,N],[12,R[382],E,E,31,N],[12,R[383],E,E,31,N],[12,R[384],E,E,31,N],[3,R[457],E,E,N,N],[12,"local",E,E,32,N],[12,"oid",E,E,32,N],[12,"loid",E,E,32,N],[12,"name",E,E,32,N],[12,R[385],E,E,32,N],[3,R[458],E,E,N,N],[12,R[386],E,E,33,N],[12,R[387],E,E,33,N],[12,R[388],E,E,33,N],[12,R[389],E,E,33,N],[12,"header_len",E,E,33,N],[12,"header",E,E,33,N],[3,R[459],E,E,N,N],[12,"origin",E,E,34,N],[12,R[390],E,E,34,N],[12,R[391],E,E,34,N],[12,R[392],E,E,34,N],[12,"content_len",E,E,34,N],[12,R[393],E,E,34,N],[12,"content",E,E,34,N],[3,R[460],E,E,N,N],[12,R[362],E,E,35,N],[12,"flags",E,E,35,N],[12,R[394],E,E,35,N],[12,R[85],E,E,35,N],[12,R[395],E,E,35,N],[12,R[341],E,E,35,N],[12,"payload",E,E,35,N],[12,R[396],E,E,35,N],[12,R[397],E,E,35,N],[12,R[398],E,E,35,N],[12,"max_size",E,E,35,N],[12,R[399],E,E,35,N],[12,R[400],E,E,35,N],[3,R[461],E,E,N,N],[12,R[362],E,E,36,N],[12,"flags",E,E,36,N],[12,R[67],E,E,36,N],[12,R[401],E,E,36,N],[12,R[402],E,E,36,N],[12,R[403],E,E,36,N],[12,R[404],E,E,36,N],[12,"metric",E,E,36,N],[3,R[462],E,E,N,N],[12,"file_signature",E,E,37,N],[12,"buffer_signature",E,E,37,N],[12,"free_signature",E,E,37,N],[12,R[405],E,E,37,N],[12,"payload",E,E,37,N],[3,R[463],E,E,N,N],[12,R[406],E,E,38,N],[12,R[57],E,E,38,N],[12,R[58],E,E,38,N],[3,R[464],E,E,N,N],[12,"kind",E,E,39,N],[12,"data",E,E,39,N],[12,"datalen",E,E,39,N],[12,"inflatedlen",E,E,39,N],[3,R[465],E,E,N,N],[12,R[362],E,E,40,N],[12,"flags",E,E,40,N],[12,R[67],E,E,40,N],[12,R[407],E,E,40,N],[12,"metric",E,E,40,N],[12,R[408],E,E,40,N],[12,"default_driver",E,E,40,N],[12,R[409],E,E,40,N],[12,"file_flags",E,E,40,N],[3,R[466],E,E,N,N],[12,R[362],E,E,41,N],[12,"set_callbacks",E,E,41,N],[12,"set_custom_headers",E,E,41,N],[12,"connect",E,E,41,N],[12,"ls",E,E,41,N],[12,"push",E,E,41,N],[12,"negotiate_fetch",E,E,41,N],[12,"download_pack",E,E,41,N],[12,"is_connected",E,E,41,N],[12,"read_flags",E,E,41,N],[12,"cancel",E,E,41,N],[12,"close",E,E,41,N],[12,"free",E,E,41,N],[3,R[467],E,E,N,N],[12,R[362],E,E,42,N],[12,"odb",E,E,42,N],[12,"read",E,E,42,N],[12,"read_prefix",E,E,42,N],[12,R[410],E,E,42,N],[12,"write",E,E,42,N],[12,"writestream",E,E,42,N],[12,"readstream",E,E,42,N],[12,"exists",E,E,42,N],[12,R[411],E,E,42,N],[12,"refresh",E,E,42,N],[12,R[84],E,E,42,N],[12,"writepack",E,E,42,N],[12,"freshen",E,E,42,N],[12,"free",E,E,42,N],[3,R[468],E,E,N,N],[12,R[362],E,E,43,N],[12,"exists",E,E,43,N],[12,"lookup",E,E,43,N],[12,"iterator",E,E,43,N],[12,"write",E,E,43,N],[12,"rename",E,E,43,N],[12,"del",E,E,43,N],[12,"compress",E,E,43,N],[12,"has_log",E,E,43,N],[12,"ensure_log",E,E,43,N],[12,"free",E,E,43,N],[12,"reflog_read",E,E,43,N],[12,"reflog_write",E,E,43,N],[12,R[412],E,E,43,N],[12,R[413],E,E,43,N],[12,"lock",E,E,43,N],[12,"unlock",E,E,43,N],[3,R[469],E,E,N,N],[12,R[362],E,E,44,N],[12,"kind",E,E,44,N],[12,"url",E,E,44,N],[12,R[346],E,E,44,N],[12,R[347],E,E,44,N],[12,"payload",E,E,44,N],[3,R[470],E,E,N,N],[12,"subtransport",E,E,45,N],[12,"read",E,E,45,N],[12,"write",E,E,45,N],[12,"free",E,E,45,N],[3,R[471],E,E,N,N],[12,"action",E,E,46,N],[12,"close",E,E,46,N],[12,"free",E,E,46,N],[3,R[472],E,E,N,N],[12,"callback",E,E,47,N],[12,"rpc",E,E,47,N],[12,"param",E,E,47,N],[3,R[473],E,E,N,N],[12,R[362],E,E,48,N],[12,R[414],E,E,48,N],[12,"describe_strategy",E,E,48,N],[12,"pattern",E,E,48,N],[12,R[415],E,E,48,N],[12,R[416],E,E,48,N],[3,R[474],E,E,N,N],[12,R[362],E,E,49,N],[12,R[417],E,E,49,N],[12,R[418],E,E,49,N],[12,R[419],E,E,49,N],[3,R[420],E,E,N,N],[12,R[362],E,E,50,N],[12,"flags",E,E,50,N],[12,R[142],E,E,50,N],[12,R[341],E,E,50,N],[12,R[421],E,E,50,N],[3,R[475],E,E,N,N],[12,R[362],E,E,51,N],[12,"quiet",E,E,51,N],[12,"inmemory",E,E,51,N],[12,R[422],E,E,51,N],[12,R[423],E,E,51,N],[12,R[142],E,E,51,N],[3,R[476],E,E,N,N],[12,"kind",E,E,52,N],[12,"id",E,E,52,N],[12,"exec",E,E,52,N],[4,"git_blob",E,E,N,N],[4,R[477],E,E,N,N],[4,R[478],E,E,N,N],[4,R[479],E,E,N,N],[4,R[480],E,E,N,N],[4,R[481],E,E,N,N],[4,R[482],E,E,N,N],[4,R[483],E,E,N,N],[4,R[484],E,E,N,N],[4,R[485],E,E,N,N],[4,R[486],E,E,N,N],[4,R[487],E,E,N,N],[4,R[488],E,E,N,N],[4,R[489],E,E,N,N],[4,R[490],E,E,N,N],[4,R[491],E,E,N,N],[4,R[492],E,E,N,N],[4,R[493],E,E,N,N],[4,"git_tag",E,E,N,N],[4,"git_tree",E,E,N,N],[4,R[494],E,E,N,N],[4,R[495],E,E,N,N],[4,"git_push",E,E,N,N],[4,"git_note",E,E,N,N],[4,R[496],E,E,N,N],[4,R[497],E,E,N,N],[4,R[498],E,E,N,N],[4,R[499],E,E,N,N],[4,"git_diff",E,E,N,N],[4,R[500],E,E,N,N],[4,R[501],E,E,N,N],[4,R[502],E,E,N,N],[4,R[503],E,E,N,N],[4,R[504],E,E,N,N],[4,R[505],E,E,N,N],[4,R[506],E,E,N,N],[4,"git_odb",E,E,N,N],[4,R[507],E,E,N,N],[4,R[508],E,E,N,N],[4,R[509],E,E,N,N],[4,R[510],E,E,N,N],[4,R[511],E,E,N,N],[4,R[512],E,E,N,N],[4,R[513],E,E,N,N],[5,"init",E,E,N,[[]]],[5,"git_libgit2_init",E,E,N,N],[5,"git_libgit2_shutdown",E,E,N,N],[5,"git_repository_new",E,E,N,N],[5,"git_repository_free",E,E,N,N],[5,"git_repository_open",E,E,N,N],[5,"git_repository_open_bare",E,E,N,N],[5,"git_repository_open_ext",E,E,N,N],[5,"git_repository_open_from_worktree",E,E,N,N],[5,"git_repository_wrap_odb",E,E,N,N],[5,"git_repository_init",E,E,N,N],[5,"git_repository_init_ext",E,E,N,N],[5,"git_repository_init_init_options",E,E,N,N],[5,"git_repository_get_namespace",E,E,N,N],[5,"git_repository_set_namespace",E,E,N,N],[5,"git_repository_head",E,E,N,N],[5,"git_repository_set_head",E,E,N,N],[5,"git_repository_head_detached",E,E,N,N],[5,"git_repository_set_head_detached",E,E,N,N],[5,"git_repository_set_bare",E,E,N,N],[5,"git_repository_is_worktree",E,E,N,N],[5,"git_repository_is_bare",E,E,N,N],[5,"git_repository_is_empty",E,E,N,N],[5,"git_repository_is_shallow",E,E,N,N],[5,"git_repository_path",E,E,N,N],[5,"git_repository_state",E,E,N,N],[5,"git_repository_workdir",E,E,N,N],[5,"git_repository_set_workdir",E,E,N,N],[5,"git_repository_index",E,E,N,N],[5,"git_repository_set_index",E,E,N,N],[5,"git_repository_message",E,E,N,N],[5,"git_repository_message_remove",E,E,N,N],[5,"git_repository_config",E,E,N,N],[5,"git_repository_set_config",E,E,N,N],[5,"git_repository_config_snapshot",E,E,N,N],[5,"git_repository_discover",E,E,N,N],[5,"git_repository_set_odb",E,E,N,N],[5,"git_repository_refdb",E,E,N,N],[5,"git_repository_set_refdb",E,E,N,N],[5,"git_repository_reinit_filesystem",E,E,N,N],[5,"git_ignore_add_rule",E,E,N,N],[5,"git_ignore_clear_internal_rules",E,E,N,N],[5,"git_ignore_path_is_ignored",E,E,N,N],[5,"git_revparse",E,E,N,N],[5,"git_revparse_single",E,E,N,N],[5,"git_revparse_ext",E,E,N,N],[5,"git_object_dup",E,E,N,N],[5,"git_object_id",E,E,N,N],[5,"git_object_free",E,E,N,N],[5,"git_object_lookup",E,E,N,N],[5,"git_object_type",E,E,N,N],[5,"git_object_peel",E,E,N,N],[5,"git_object_short_id",E,E,N,N],[5,"git_object_type2string",E,E,N,N],[5,"git_object_string2type",E,E,N,N],[5,"git_object_typeisloose",E,E,N,N],[5,"git_oid_fromraw",E,E,N,N],[5,"git_oid_fromstrn",E,E,N,N],[5,"git_oid_tostr",E,E,N,N],[5,"git_oid_cmp",E,E,N,N],[5,"git_oid_equal",E,E,N,N],[5,"git_oid_streq",E,E,N,N],[5,"git_oid_iszero",E,E,N,N],[5,"giterr_last",E,E,N,N],[5,"giterr_clear",E,E,N,N],[5,"giterr_set_str",E,E,N,N],[5,"git_remote_create",E,E,N,N],[5,"git_remote_lookup",E,E,N,N],[5,"git_remote_create_anonymous",E,E,N,N],[5,"git_remote_delete",E,E,N,N],[5,"git_remote_free",E,E,N,N],[5,"git_remote_name",E,E,N,N],[5,"git_remote_pushurl",E,E,N,N],[5,"git_remote_refspec_count",E,E,N,N],[5,"git_remote_url",E,E,N,N],[5,"git_remote_connect",E,E,N,N],[5,"git_remote_connected",E,E,N,N],[5,"git_remote_disconnect",E,E,N,N],[5,"git_remote_add_fetch",E,E,N,N],[5,"git_remote_add_push",E,E,N,N],[5,"git_remote_download",E,E,N,N],[5,"git_remote_stop",E,E,N,N],[5,"git_remote_dup",E,E,N,N],[5,"git_remote_get_fetch_refspecs",E,E,N,N],[5,"git_remote_get_push_refspecs",E,E,N,N],[5,"git_remote_get_refspec",E,E,N,N],[5,"git_remote_is_valid_name",E,E,N,N],[5,"git_remote_list",E,E,N,N],[5,"git_remote_rename",E,E,N,N],[5,"git_remote_fetch",E,E,N,N],[5,"git_remote_push",E,E,N,N],[5,"git_remote_update_tips",E,E,N,N],[5,"git_remote_set_url",E,E,N,N],[5,"git_remote_set_pushurl",E,E,N,N],[5,"git_remote_init_callbacks",E,E,N,N],[5,"git_fetch_init_options",E,E,N,N],[5,"git_remote_stats",E,E,N,N],[5,"git_remote_ls",E,E,N,N],[5,"git_remote_set_autotag",E,E,N,N],[5,"git_remote_prune",E,E,N,N],[5,"git_refspec_direction",E,E,N,N],[5,"git_refspec_dst",E,E,N,N],[5,"git_refspec_dst_matches",E,E,N,N],[5,"git_refspec_src",E,E,N,N],[5,"git_refspec_src_matches",E,E,N,N],[5,"git_refspec_force",E,E,N,N],[5,"git_refspec_string",E,E,N,N],[5,"git_strarray_free",E,E,N,N],[5,"git_oidarray_free",E,E,N,N],[5,"git_signature_default",E,E,N,N],[5,"git_signature_free",E,E,N,N],[5,"git_signature_new",E,E,N,N],[5,"git_signature_now",E,E,N,N],[5,"git_signature_dup",E,E,N,N],[5,"git_status_list_new",E,E,N,N],[5,"git_status_list_entrycount",E,E,N,N],[5,"git_status_byindex",E,E,N,N],[5,"git_status_list_free",E,E,N,N],[5,"git_status_init_options",E,E,N,N],[5,"git_status_file",E,E,N,N],[5,"git_status_should_ignore",E,E,N,N],[5,"git_clone",E,E,N,N],[5,"git_clone_init_options",E,E,N,N],[5,"git_reset",E,E,N,N],[5,"git_reset_default",E,E,N,N],[5,"git_reference_cmp",E,E,N,N],[5,"git_reference_delete",E,E,N,N],[5,"git_reference_free",E,E,N,N],[5,"git_reference_is_branch",E,E,N,N],[5,"git_reference_is_note",E,E,N,N],[5,"git_reference_is_remote",E,E,N,N],[5,"git_reference_is_tag",E,E,N,N],[5,"git_reference_is_valid_name",E,E,N,N],[5,"git_reference_lookup",E,E,N,N],[5,"git_reference_name",E,E,N,N],[5,"git_reference_name_to_id",E,E,N,N],[5,"git_reference_peel",E,E,N,N],[5,"git_reference_rename",E,E,N,N],[5,"git_reference_resolve",E,E,N,N],[5,"git_reference_shorthand",E,E,N,N],[5,"git_reference_symbolic_target",E,E,N,N],[5,"git_reference_target",E,E,N,N],[5,"git_reference_target_peel",E,E,N,N],[5,"git_reference_set_target",E,E,N,N],[5,"git_reference_type",E,E,N,N],[5,"git_reference_iterator_new",E,E,N,N],[5,"git_reference_iterator_glob_new",E,E,N,N],[5,"git_reference_iterator_free",E,E,N,N],[5,"git_reference_next",E,E,N,N],[5,"git_reference_next_name",E,E,N,N],[5,"git_reference_create",E,E,N,N],[5,"git_reference_symbolic_create",E,E,N,N],[5,"git_reference_create_matching",E,E,N,N],[5,"git_reference_symbolic_create_matching",E,E,N,N],[5,"git_reference_has_log",E,E,N,N],[5,"git_reference_ensure_log",E,E,N,N],[5,"git_stash_save",E,E,N,N],[5,"git_stash_apply_init_options",E,E,N,N],[5,"git_stash_apply",E,E,N,N],[5,"git_stash_foreach",E,E,N,N],[5,"git_stash_drop",E,E,N,N],[5,"git_stash_pop",E,E,N,N],[5,"git_submodule_add_finalize",E,E,N,N],[5,"git_submodule_add_setup",E,E,N,N],[5,"git_submodule_add_to_index",E,E,N,N],[5,"git_submodule_branch",E,E,N,N],[5,"git_submodule_foreach",E,E,N,N],[5,"git_submodule_free",E,E,N,N],[5,"git_submodule_head_id",E,E,N,N],[5,"git_submodule_index_id",E,E,N,N],[5,"git_submodule_init",E,E,N,N],[5,"git_submodule_location",E,E,N,N],[5,"git_submodule_lookup",E,E,N,N],[5,"git_submodule_name",E,E,N,N],[5,"git_submodule_open",E,E,N,N],[5,"git_submodule_path",E,E,N,N],[5,"git_submodule_reload",E,E,N,N],[5,"git_submodule_set_ignore",E,E,N,N],[5,"git_submodule_set_update",E,E,N,N],[5,"git_submodule_set_url",E,E,N,N],[5,"git_submodule_sync",E,E,N,N],[5,"git_submodule_update_strategy",E,E,N,N],[5,"git_submodule_update",E,E,N,N],[5,"git_submodule_update_init_options",E,E,N,N],[5,"git_submodule_url",E,E,N,N],[5,"git_submodule_wd_id",E,E,N,N],[5,"git_submodule_status",E,E,N,N],[5,"git_submodule_set_branch",E,E,N,N],[5,"git_blob_free",E,E,N,N],[5,"git_blob_id",E,E,N,N],[5,"git_blob_is_binary",E,E,N,N],[5,"git_blob_lookup",E,E,N,N],[5,"git_blob_lookup_prefix",E,E,N,N],[5,"git_blob_rawcontent",E,E,N,N],[5,"git_blob_rawsize",E,E,N,N],[5,"git_blob_create_frombuffer",E,E,N,N],[5,"git_blob_create_fromdisk",E,E,N,N],[5,"git_blob_create_fromworkdir",E,E,N,N],[5,"git_blob_create_fromstream",E,E,N,N],[5,"git_blob_create_fromstream_commit",E,E,N,N],[5,"git_tree_entry_byid",E,E,N,N],[5,"git_tree_entry_byindex",E,E,N,N],[5,"git_tree_entry_byname",E,E,N,N],[5,"git_tree_entry_bypath",E,E,N,N],[5,"git_tree_entry_cmp",E,E,N,N],[5,"git_tree_entry_dup",E,E,N,N],[5,"git_tree_entry_filemode",E,E,N,N],[5,"git_tree_entry_filemode_raw",E,E,N,N],[5,"git_tree_entry_free",E,E,N,N],[5,"git_tree_entry_id",E,E,N,N],[5,"git_tree_entry_name",E,E,N,N],[5,"git_tree_entry_to_object",E,E,N,N],[5,"git_tree_entry_type",E,E,N,N],[5,"git_tree_entrycount",E,E,N,N],[5,"git_tree_free",E,E,N,N],[5,"git_tree_id",E,E,N,N],[5,"git_tree_lookup",E,E,N,N],[5,"git_tree_walk",E,E,N,N],[5,"git_treebuilder_new",E,E,N,N],[5,"git_treebuilder_clear",E,E,N,N],[5,"git_treebuilder_entrycount",E,E,N,N],[5,"git_treebuilder_free",E,E,N,N],[5,"git_treebuilder_get",E,E,N,N],[5,"git_treebuilder_insert",E,E,N,N],[5,"git_treebuilder_remove",E,E,N,N],[5,"git_treebuilder_filter",E,E,N,N],[5,"git_treebuilder_write",E,E,N,N],[5,"git_buf_free",E,E,N,N],[5,"git_buf_grow",E,E,N,N],[5,"git_buf_set",E,E,N,N],[5,"git_commit_author",E,E,N,N],[5,"git_commit_committer",E,E,N,N],[5,"git_commit_free",E,E,N,N],[5,"git_commit_id",E,E,N,N],[5,"git_commit_lookup",E,E,N,N],[5,"git_commit_message",E,E,N,N],[5,"git_commit_message_encoding",E,E,N,N],[5,"git_commit_message_raw",E,E,N,N],[5,"git_commit_nth_gen_ancestor",E,E,N,N],[5,"git_commit_parent",E,E,N,N],[5,"git_commit_parent_id",E,E,N,N],[5,"git_commit_parentcount",E,E,N,N],[5,"git_commit_raw_header",E,E,N,N],[5,"git_commit_summary",E,E,N,N],[5,"git_commit_time",E,E,N,N],[5,"git_commit_time_offset",E,E,N,N],[5,"git_commit_tree",E,E,N,N],[5,"git_commit_tree_id",E,E,N,N],[5,"git_commit_amend",E,E,N,N],[5,"git_commit_create",E,E,N,N],[5,"git_commit_header_field",E,E,N,N],[5,"git_annotated_commit_lookup",E,E,N,N],[5,"git_commit_create_with_signature",E,E,N,N],[5,"git_commit_extract_signature",E,E,N,N],[5,"git_branch_create",E,E,N,N],[5,"git_branch_delete",E,E,N,N],[5,"git_branch_is_head",E,E,N,N],[5,"git_branch_iterator_free",E,E,N,N],[5,"git_branch_iterator_new",E,E,N,N],[5,"git_branch_lookup",E,E,N,N],[5,"git_branch_move",E,E,N,N],[5,"git_branch_name",E,E,N,N],[5,"git_branch_next",E,E,N,N],[5,"git_branch_set_upstream",E,E,N,N],[5,"git_branch_upstream",E,E,N,N],[5,"git_index_add",E,E,N,N],[5,"git_index_add_all",E,E,N,N],[5,"git_index_add_bypath",E,E,N,N],[5,"git_index_add_frombuffer",E,E,N,N],[5,"git_index_conflict_add",E,E,N,N],[5,"git_index_conflict_remove",E,E,N,N],[5,"git_index_conflict_get",E,E,N,N],[5,"git_index_conflict_iterator_new",E,E,N,N],[5,"git_index_conflict_next",E,E,N,N],[5,"git_index_conflict_iterator_free",E,E,N,N],[5,"git_index_clear",E,E,N,N],[5,"git_index_entry_stage",E,E,N,N],[5,"git_index_entrycount",E,E,N,N],[5,"git_index_find",E,E,N,N],[5,"git_index_free",E,E,N,N],[5,"git_index_get_byindex",E,E,N,N],[5,"git_index_get_bypath",E,E,N,N],[5,"git_index_has_conflicts",E,E,N,N],[5,"git_index_new",E,E,N,N],[5,"git_index_open",E,E,N,N],[5,"git_index_path",E,E,N,N],[5,"git_index_read",E,E,N,N],[5,"git_index_read_tree",E,E,N,N],[5,"git_index_remove",E,E,N,N],[5,"git_index_remove_all",E,E,N,N],[5,"git_index_remove_bypath",E,E,N,N],[5,"git_index_remove_directory",E,E,N,N],[5,"git_index_update_all",E,E,N,N],[5,"git_index_write",E,E,N,N],[5,"git_index_write_tree",E,E,N,N],[5,"git_index_write_tree_to",E,E,N,N],[5,"git_config_add_file_ondisk",E,E,N,N],[5,"git_config_delete_entry",E,E,N,N],[5,"git_config_delete_multivar",E,E,N,N],[5,"git_config_find_programdata",E,E,N,N],[5,"git_config_find_global",E,E,N,N],[5,"git_config_find_system",E,E,N,N],[5,"git_config_find_xdg",E,E,N,N],[5,"git_config_free",E,E,N,N],[5,"git_config_get_bool",E,E,N,N],[5,"git_config_get_entry",E,E,N,N],[5,"git_config_get_int32",E,E,N,N],[5,"git_config_get_int64",E,E,N,N],[5,"git_config_get_string",E,E,N,N],[5,"git_config_get_string_buf",E,E,N,N],[5,"git_config_get_path",E,E,N,N],[5,"git_config_iterator_free",E,E,N,N],[5,"git_config_iterator_glob_new",E,E,N,N],[5,"git_config_iterator_new",E,E,N,N],[5,"git_config_new",E,E,N,N],[5,"git_config_next",E,E,N,N],[5,"git_config_open_default",E,E,N,N],[5,"git_config_open_global",E,E,N,N],[5,"git_config_open_level",E,E,N,N],[5,"git_config_open_ondisk",E,E,N,N],[5,"git_config_parse_bool",E,E,N,N],[5,"git_config_parse_int32",E,E,N,N],[5,"git_config_parse_int64",E,E,N,N],[5,"git_config_set_bool",E,E,N,N],[5,"git_config_set_int32",E,E,N,N],[5,"git_config_set_int64",E,E,N,N],[5,"git_config_set_multivar",E,E,N,N],[5,"git_config_set_string",E,E,N,N],[5,"git_config_snapshot",E,E,N,N],[5,"git_config_entry_free",E,E,N,N],[5,"git_cred_default_new",E,E,N,N],[5,"git_cred_has_username",E,E,N,N],[5,"git_cred_ssh_custom_new",E,E,N,N],[5,"git_cred_ssh_interactive_new",E,E,N,N],[5,"git_cred_ssh_key_from_agent",E,E,N,N],[5,"git_cred_ssh_key_new",E,E,N,N],[5,"git_cred_ssh_key_memory_new",E,E,N,N],[5,"git_cred_userpass",E,E,N,N],[5,"git_cred_userpass_plaintext_new",E,E,N,N],[5,"git_cred_username_new",E,E,N,N],[5,"git_tag_annotation_create",E,E,N,N],[5,"git_tag_create",E,E,N,N],[5,"git_tag_create_frombuffer",E,E,N,N],[5,"git_tag_create_lightweight",E,E,N,N],[5,"git_tag_delete",E,E,N,N],[5,"git_tag_foreach",E,E,N,N],[5,"git_tag_free",E,E,N,N],[5,"git_tag_id",E,E,N,N],[5,"git_tag_list",E,E,N,N],[5,"git_tag_list_match",E,E,N,N],[5,"git_tag_lookup",E,E,N,N],[5,"git_tag_lookup_prefix",E,E,N,N],[5,"git_tag_message",E,E,N,N],[5,"git_tag_name",E,E,N,N],[5,"git_tag_peel",E,E,N,N],[5,"git_tag_tagger",E,E,N,N],[5,"git_tag_target",E,E,N,N],[5,"git_tag_target_id",E,E,N,N],[5,"git_tag_target_type",E,E,N,N],[5,"git_checkout_head",E,E,N,N],[5,"git_checkout_index",E,E,N,N],[5,"git_checkout_tree",E,E,N,N],[5,"git_checkout_init_options",E,E,N,N],[5,"git_annotated_commit_id",E,E,N,N],[5,"git_annotated_commit_from_ref",E,E,N,N],[5,"git_annotated_commit_free",E,E,N,N],[5,"git_merge_init_options",E,E,N,N],[5,"git_merge",E,E,N,N],[5,"git_merge_commits",E,E,N,N],[5,"git_merge_trees",E,E,N,N],[5,"git_repository_state_cleanup",E,E,N,N],[5,"git_merge_analysis",E,E,N,N],[5,"git_note_author",E,E,N,N],[5,"git_note_committer",E,E,N,N],[5,"git_note_create",E,E,N,N],[5,"git_note_default_ref",E,E,N,N],[5,"git_note_free",E,E,N,N],[5,"git_note_id",E,E,N,N],[5,"git_note_iterator_free",E,E,N,N],[5,"git_note_iterator_new",E,E,N,N],[5,"git_note_message",E,E,N,N],[5,"git_note_next",E,E,N,N],[5,"git_note_read",E,E,N,N],[5,"git_note_remove",E,E,N,N],[5,"git_blame_file",E,E,N,N],[5,"git_blame_free",E,E,N,N],[5,"git_blame_init_options",E,E,N,N],[5,"git_blame_get_hunk_count",E,E,N,N],[5,"git_blame_get_hunk_byline",E,E,N,N],[5,"git_blame_get_hunk_byindex",E,E,N,N],[5,"git_revwalk_new",E,E,N,N],[5,"git_revwalk_free",E,E,N,N],[5,"git_revwalk_reset",E,E,N,N],[5,"git_revwalk_sorting",E,E,N,N],[5,"git_revwalk_push_head",E,E,N,N],[5,"git_revwalk_push",E,E,N,N],[5,"git_revwalk_push_ref",E,E,N,N],[5,"git_revwalk_push_glob",E,E,N,N],[5,"git_revwalk_push_range",E,E,N,N],[5,"git_revwalk_simplify_first_parent",E,E,N,N],[5,"git_revwalk_hide_head",E,E,N,N],[5,"git_revwalk_hide",E,E,N,N],[5,"git_revwalk_hide_ref",E,E,N,N],[5,"git_revwalk_hide_glob",E,E,N,N],[5,"git_revwalk_add_hide_cb",E,E,N,N],[5,"git_revwalk_next",E,E,N,N],[5,"git_merge_base",E,E,N,N],[5,"git_merge_bases",E,E,N,N],[5,"git_pathspec_free",E,E,N,N],[5,"git_pathspec_match_diff",E,E,N,N],[5,"git_pathspec_match_index",E,E,N,N],[5,"git_pathspec_match_list_diff_entry",E,E,N,N],[5,"git_pathspec_match_list_entry",E,E,N,N],[5,"git_pathspec_match_list_entrycount",E,E,N,N],[5,"git_pathspec_match_list_failed_entry",E,E,N,N],[5,"git_pathspec_match_list_failed_entrycount",E,E,N,N],[5,"git_pathspec_match_list_free",E,E,N,N],[5,"git_pathspec_match_tree",E,E,N,N],[5,"git_pathspec_match_workdir",E,E,N,N],[5,"git_pathspec_matches_path",E,E,N,N],[5,"git_pathspec_new",E,E,N,N],[5,"git_diff_blob_to_buffer",E,E,N,N],[5,"git_diff_blobs",E,E,N,N],[5,"git_diff_buffers",E,E,N,N],[5,"git_diff_find_similar",E,E,N,N],[5,"git_diff_find_init_options",E,E,N,N],[5,"git_diff_foreach",E,E,N,N],[5,"git_diff_free",E,E,N,N],[5,"git_diff_get_delta",E,E,N,N],[5,"git_diff_get_stats",E,E,N,N],[5,"git_diff_index_to_index",E,E,N,N],[5,"git_diff_index_to_workdir",E,E,N,N],[5,"git_diff_init_options",E,E,N,N],[5,"git_diff_is_sorted_icase",E,E,N,N],[5,"git_diff_merge",E,E,N,N],[5,"git_diff_num_deltas",E,E,N,N],[5,"git_diff_num_deltas_of_type",E,E,N,N],[5,"git_diff_print",E,E,N,N],[5,"git_diff_stats_deletions",E,E,N,N],[5,"git_diff_stats_files_changed",E,E,N,N],[5,"git_diff_stats_free",E,E,N,N],[5,"git_diff_stats_insertions",E,E,N,N],[5,"git_diff_stats_to_buf",E,E,N,N],[5,"git_diff_status_char",E,E,N,N],[5,"git_diff_tree_to_index",E,E,N,N],[5,"git_diff_tree_to_tree",E,E,N,N],[5,"git_diff_tree_to_workdir",E,E,N,N],[5,"git_diff_tree_to_workdir_with_index",E,E,N,N],[5,"git_graph_ahead_behind",E,E,N,N],[5,"git_graph_descendant_of",E,E,N,N],[5,"git_patch_from_diff",E,E,N,N],[5,"git_patch_from_blobs",E,E,N,N],[5,"git_patch_from_blob_and_buffer",E,E,N,N],[5,"git_patch_from_buffers",E,E,N,N],[5,"git_patch_free",E,E,N,N],[5,"git_patch_get_delta",E,E,N,N],[5,"git_patch_num_hunks",E,E,N,N],[5,"git_patch_line_stats",E,E,N,N],[5,"git_patch_get_hunk",E,E,N,N],[5,"git_patch_num_lines_in_hunk",E,E,N,N],[5,"git_patch_get_line_in_hunk",E,E,N,N],[5,"git_patch_size",E,E,N,N],[5,"git_patch_print",E,E,N,N],[5,"git_patch_to_buf",E,E,N,N],[5,"git_reflog_append",E,E,N,N],[5,"git_reflog_delete",E,E,N,N],[5,"git_reflog_drop",E,E,N,N],[5,"git_reflog_entry_byindex",E,E,N,N],[5,"git_reflog_entry_committer",E,E,N,N],[5,"git_reflog_entry_id_new",E,E,N,N],[5,"git_reflog_entry_id_old",E,E,N,N],[5,"git_reflog_entry_message",E,E,N,N],[5,"git_reflog_entrycount",E,E,N,N],[5,"git_reflog_free",E,E,N,N],[5,"git_reflog_read",E,E,N,N],[5,"git_reflog_rename",E,E,N,N],[5,"git_reflog_write",E,E,N,N],[5,"git_transport_register",E,E,N,N],[5,"git_transport_unregister",E,E,N,N],[5,"git_transport_smart",E,E,N,N],[5,"git_describe_commit",E,E,N,N],[5,"git_describe_format",E,E,N,N],[5,"git_describe_result_free",E,E,N,N],[5,"git_describe_workdir",E,E,N,N],[5,"git_message_prettify",E,E,N,N],[5,"git_packbuilder_new",E,E,N,N],[5,"git_packbuilder_set_threads",E,E,N,N],[5,"git_packbuilder_insert",E,E,N,N],[5,"git_packbuilder_insert_tree",E,E,N,N],[5,"git_packbuilder_insert_commit",E,E,N,N],[5,"git_packbuilder_insert_walk",E,E,N,N],[5,"git_packbuilder_insert_recur",E,E,N,N],[5,"git_packbuilder_write_buf",E,E,N,N],[5,"git_packbuilder_write",E,E,N,N],[5,"git_packbuilder_hash",E,E,N,N],[5,"git_packbuilder_foreach",E,E,N,N],[5,"git_packbuilder_object_count",E,E,N,N],[5,"git_packbuilder_written",E,E,N,N],[5,"git_packbuilder_set_callbacks",E,E,N,N],[5,"git_packbuilder_free",E,E,N,N],[5,"git_repository_odb",E,E,N,N],[5,"git_odb_new",E,E,N,N],[5,"git_odb_free",E,E,N,N],[5,"git_odb_open_rstream",E,E,N,N],[5,"git_odb_stream_read",E,E,N,N],[5,"git_odb_open_wstream",E,E,N,N],[5,"git_odb_stream_write",E,E,N,N],[5,"git_odb_stream_finalize_write",E,E,N,N],[5,"git_odb_stream_free",E,E,N,N],[5,"git_odb_foreach",E,E,N,N],[5,"git_odb_read",E,E,N,N],[5,"git_odb_read_header",E,E,N,N],[5,"git_odb_write",E,E,N,N],[5,"git_odb_hash",E,E,N,N],[5,"git_odb_hashfile",E,E,N,N],[5,"git_odb_exists_prefix",E,E,N,N],[5,"git_odb_exists",E,E,N,N],[5,"git_odb_refresh",E,E,N,N],[5,"git_odb_object_id",E,E,N,N],[5,"git_odb_object_size",E,E,N,N],[5,"git_odb_object_type",E,E,N,N],[5,"git_odb_object_data",E,E,N,N],[5,"git_odb_object_dup",E,E,N,N],[5,"git_odb_object_free",E,E,N,N],[5,"git_odb_init_backend",E,E,N,N],[5,"git_odb_add_backend",E,E,N,N],[5,"git_odb_backend_pack",E,E,N,N],[5,"git_odb_backend_one_pack",E,E,N,N],[5,"git_odb_add_disk_alternate",E,E,N,N],[5,"git_odb_backend_loose",E,E,N,N],[5,"git_odb_add_alternate",E,E,N,N],[5,"git_odb_backend_malloc",E,E,N,N],[5,"git_odb_num_backends",E,E,N,N],[5,"git_odb_get_backend",E,E,N,N],[5,"git_mempack_new",E,E,N,N],[5,"git_mempack_reset",E,E,N,N],[5,"git_mempack_dump",E,E,N,N],[5,"git_refdb_new",E,E,N,N],[5,"git_refdb_open",E,E,N,N],[5,"git_refdb_backend_fs",E,E,N,N],[5,"git_refdb_init_backend",E,E,N,N],[5,"git_refdb_set_backend",E,E,N,N],[5,"git_refdb_compress",E,E,N,N],[5,"git_refdb_free",E,E,N,N],[5,"git_rebase_init_options",E,E,N,N],[5,"git_rebase_init",E,E,N,N],[5,"git_rebase_open",E,E,N,N],[5,"git_rebase_operation_entrycount",E,E,N,N],[5,"git_rebase_operation_current",E,E,N,N],[5,"git_rebase_operation_byindex",E,E,N,N],[5,"git_rebase_next",E,E,N,N],[5,"git_rebase_inmemory_index",E,E,N,N],[5,"git_rebase_commit",E,E,N,N],[5,"git_rebase_abort",E,E,N,N],[5,"git_rebase_finish",E,E,N,N],[5,"git_rebase_free",E,E,N,N],[6,"git_off_t",E,E,N,N],[6,"git_time_t",E,E,N,N],[6,"git_revparse_mode_t",E,E,N,N],[6,R[424],E,E,N,N],[6,R[425],E,E,N,N],[6,"git_repository_state_t",E,E,N,N],[6,"git_direction",E,E,N,N],[6,"git_clone_local_t",E,E,N,N],[6,"git_checkout_notify_cb",E,E,N,N],[6,"git_checkout_progress_cb",E,E,N,N],[6,"git_checkout_perfdata_cb",E,E,N,N],[6,"git_remote_autotag_option_t",E,E,N,N],[6,"git_fetch_prune_t",E,E,N,N],[6,"git_remote_completion_type",E,E,N,N],[6,"git_transport_message_cb",E,E,N,N],[6,"git_cred_acquire_cb",E,E,N,N],[6,"git_transfer_progress_cb",E,E,N,N],[6,"git_packbuilder_progress",E,E,N,N],[6,"git_push_transfer_progress",E,E,N,N],[6,"git_transport_certificate_check_cb",E,E,N,N],[6,"git_push_negotiation",E,E,N,N],[6,"git_push_update_reference_cb",E,E,N,N],[6,"git_cert_t",E,E,N,N],[6,"git_cert_ssh_t",E,E,N,N],[6,"git_repository_create_cb",E,E,N,N],[6,"git_remote_create_cb",E,E,N,N],[6,"git_checkout_notify_t",E,E,N,N],[6,"git_status_t",E,E,N,N],[6,"git_status_opt_t",E,E,N,N],[6,"git_status_show_t",E,E,N,N],[6,"git_delta_t",E,E,N,N],[6,"git_checkout_strategy_t",E,E,N,N],[6,"git_reset_t",E,E,N,N],[6,R[178],E,E,N,N],[6,R[426],E,E,N,N],[6,"git_filemode_t",E,E,N,N],[6,R[427],E,E,N,N],[6,"git_treewalk_cb",E,E,N,N],[6,"git_treebuilder_filter_cb",E,E,N,N],[6,"git_revwalk_hide_cb",E,E,N,N],[6,"git_branch_t",E,E,N,N],[6,"git_index_matched_path_cb",E,E,N,N],[6,"git_idxentry_extended_flag_t",E,E,N,N],[6,"git_indxentry_flag_t",E,E,N,N],[6,R[428],E,E,N,N],[6,"git_submodule_update_t",E,E,N,N],[6,"git_submodule_ignore_t",E,E,N,N],[6,"git_submodule_cb",E,E,N,N],[6,R[429],E,E,N,N],[6,"git_cred_ssh_interactive_callback",E,E,N,N],[6,"git_cred_sign_callback",E,E,N,N],[6,"git_tag_foreach_cb",E,E,N,N],[6,"git_index_add_option_t",E,E,N,N],[6,"git_repository_open_flag_t",E,E,N,N],[6,"git_repository_init_flag_t",E,E,N,N],[6,"git_repository_init_mode_t",E,E,N,N],[6,"git_sort_t",E,E,N,N],[6,"git_submodule_status_t",E,E,N,N],[6,"git_pathspec_flag_t",E,E,N,N],[6,"git_diff_file_cb",E,E,N,N],[6,"git_diff_hunk_cb",E,E,N,N],[6,"git_diff_line_cb",E,E,N,N],[6,"git_diff_binary_cb",E,E,N,N],[6,"git_diff_line_t",E,E,N,N],[6,"git_diff_format_t",E,E,N,N],[6,R[192],E,E,N,N],[6,"git_diff_notify_cb",E,E,N,N],[6,"git_diff_progress_cb",E,E,N,N],[6,"git_diff_option_t",E,E,N,N],[6,"git_diff_binary_t",E,E,N,N],[6,"git_merge_flag_t",E,E,N,N],[6,"git_merge_file_favor_t",E,E,N,N],[6,"git_merge_file_flag_t",E,E,N,N],[6,"git_merge_analysis_t",E,E,N,N],[6,"git_merge_preference_t",E,E,N,N],[6,"git_transport_cb",E,E,N,N],[6,"git_proxy_t",E,E,N,N],[6,"git_smart_service_t",E,E,N,N],[6,"git_smart_subtransport_cb",E,E,N,N],[6,"git_describe_strategy_t",E,E,N,N],[6,"git_packbuilder_stage_t",E,E,N,N],[6,"git_stash_flags",E,E,N,N],[6,"git_stash_apply_flags",E,E,N,N],[6,"git_stash_apply_progress_t",E,E,N,N],[6,"git_stash_apply_progress_cb",E,E,N,N],[6,"git_stash_cb",E,E,N,N],[6,"git_packbuilder_foreach_cb",E,E,N,N],[6,"git_odb_foreach_cb",E,E,N,N],[6,R[430],E,E,N,N],[17,"GIT_OID_RAWSZ",E,E,N,N],[17,"GIT_OID_HEXSZ",E,E,N,N],[17,"GIT_CLONE_OPTIONS_VERSION",E,E,N,N],[17,"GIT_STASH_APPLY_OPTIONS_VERSION",E,E,N,N],[17,"GIT_CHECKOUT_OPTIONS_VERSION",E,E,N,N],[17,"GIT_MERGE_OPTIONS_VERSION",E,E,N,N],[17,"GIT_REMOTE_CALLBACKS_VERSION",E,E,N,N],[17,"GIT_STATUS_OPTIONS_VERSION",E,E,N,N],[17,"GIT_BLAME_OPTIONS_VERSION",E,E,N,N],[17,"GIT_PROXY_OPTIONS_VERSION",E,E,N,N],[17,"GIT_SUBMODULE_UPDATE_OPTIONS_VERSION",E,E,N,N],[17,"GIT_ODB_BACKEND_VERSION",E,E,N,N],[17,"GIT_REFDB_BACKEND_VERSION",E,E,N,N],[17,"GIT_REVPARSE_SINGLE",E,E,N,N],[17,"GIT_REVPARSE_RANGE",E,E,N,N],[17,"GIT_REVPARSE_MERGE_BASE",E,E,N,N],[17,"GIT_OK",E,E,N,N],[17,"GIT_ERROR",E,E,N,N],[17,"GIT_ENOTFOUND",E,E,N,N],[17,"GIT_EEXISTS",E,E,N,N],[17,"GIT_EAMBIGUOUS",E,E,N,N],[17,"GIT_EBUFS",E,E,N,N],[17,"GIT_EUSER",E,E,N,N],[17,"GIT_EBAREREPO",E,E,N,N],[17,"GIT_EUNBORNBRANCH",E,E,N,N],[17,"GIT_EUNMERGED",E,E,N,N],[17,"GIT_ENONFASTFORWARD",E,E,N,N],[17,"GIT_EINVALIDSPEC",E,E,N,N],[17,"GIT_ECONFLICT",E,E,N,N],[17,"GIT_ELOCKED",E,E,N,N],[17,"GIT_EMODIFIED",E,E,N,N],[17,"GIT_EAUTH",E,E,N,N],[17,"GIT_ECERTIFICATE",E,E,N,N],[17,"GIT_EAPPLIED",E,E,N,N],[17,"GIT_EPEEL",E,E,N,N],[17,"GIT_EEOF",E,E,N,N],[17,"GIT_EINVALID",E,E,N,N],[17,"GIT_EUNCOMMITTED",E,E,N,N],[17,"GIT_EDIRECTORY",E,E,N,N],[17,"GIT_EMERGECONFLICT",E,E,N,N],[17,"GIT_PASSTHROUGH",E,E,N,N],[17,"GIT_ITEROVER",E,E,N,N],[17,"GITERR_NONE",E,E,N,N],[17,"GITERR_NOMEMORY",E,E,N,N],[17,"GITERR_OS",E,E,N,N],[17,"GITERR_INVALID",E,E,N,N],[17,"GITERR_REFERENCE",E,E,N,N],[17,"GITERR_ZLIB",E,E,N,N],[17,"GITERR_REPOSITORY",E,E,N,N],[17,"GITERR_CONFIG",E,E,N,N],[17,"GITERR_REGEX",E,E,N,N],[17,"GITERR_ODB",E,E,N,N],[17,"GITERR_INDEX",E,E,N,N],[17,"GITERR_OBJECT",E,E,N,N],[17,"GITERR_NET",E,E,N,N],[17,"GITERR_TAG",E,E,N,N],[17,"GITERR_TREE",E,E,N,N],[17,"GITERR_INDEXER",E,E,N,N],[17,"GITERR_SSL",E,E,N,N],[17,"GITERR_SUBMODULE",E,E,N,N],[17,"GITERR_THREAD",E,E,N,N],[17,"GITERR_STASH",E,E,N,N],[17,"GITERR_CHECKOUT",E,E,N,N],[17,"GITERR_FETCHHEAD",E,E,N,N],[17,"GITERR_MERGE",E,E,N,N],[17,"GITERR_SSH",E,E,N,N],[17,"GITERR_FILTER",E,E,N,N],[17,"GITERR_REVERT",E,E,N,N],[17,"GITERR_CALLBACK",E,E,N,N],[17,"GITERR_CHERRYPICK",E,E,N,N],[17,"GITERR_DESCRIBE",E,E,N,N],[17,"GITERR_REBASE",E,E,N,N],[17,"GITERR_FILESYSTEM",E,E,N,N],[17,"GIT_REPOSITORY_STATE_NONE",E,E,N,N],[17,"GIT_REPOSITORY_STATE_MERGE",E,E,N,N],[17,"GIT_REPOSITORY_STATE_REVERT",E,E,N,N],[17,"GIT_REPOSITORY_STATE_REVERT_SEQUENCE",E,E,N,N],[17,"GIT_REPOSITORY_STATE_CHERRYPICK",E,E,N,N],[17,"GIT_REPOSITORY_STATE_CHERRYPICK_SEQUENCE",E,E,N,N],[17,"GIT_REPOSITORY_STATE_BISECT",E,E,N,N],[17,"GIT_REPOSITORY_STATE_REBASE",E,E,N,N],[17,"GIT_REPOSITORY_STATE_REBASE_INTERACTIVE",E,E,N,N],[17,"GIT_REPOSITORY_STATE_REBASE_MERGE",E,E,N,N],[17,"GIT_REPOSITORY_STATE_APPLY_MAILBOX",E,E,N,N],[17,"GIT_REPOSITORY_STATE_APPLY_MAILBOX_OR_REBASE",E,E,N,N],[17,"GIT_DIRECTION_FETCH",E,E,N,N],[17,"GIT_DIRECTION_PUSH",E,E,N,N],[17,"GIT_CLONE_LOCAL_AUTO",E,E,N,N],[17,"GIT_CLONE_LOCAL",E,E,N,N],[17,"GIT_CLONE_NO_LOCAL",E,E,N,N],[17,"GIT_CLONE_LOCAL_NO_LINKS",E,E,N,N],[17,"GIT_REMOTE_DOWNLOAD_TAGS_UNSPECIFIED",E,E,N,N],[17,"GIT_REMOTE_DOWNLOAD_TAGS_AUTO",E,E,N,N],[17,"GIT_REMOTE_DOWNLOAD_TAGS_NONE",E,E,N,N],[17,"GIT_REMOTE_DOWNLOAD_TAGS_ALL",E,E,N,N],[17,"GIT_FETCH_PRUNE_UNSPECIFIED",E,E,N,N],[17,"GIT_FETCH_PRUNE",E,E,N,N],[17,"GIT_FETCH_NO_PRUNE",E,E,N,N],[17,"GIT_REMOTE_COMPLETION_DOWNLOAD",E,E,N,N],[17,"GIT_REMOTE_COMPLETION_INDEXING",E,E,N,N],[17,"GIT_REMOTE_COMPLETION_ERROR",E,E,N,N],[17,"GIT_CERT_NONE",E,E,N,N],[17,"GIT_CERT_X509",E,E,N,N],[17,"GIT_CERT_HOSTKEY_LIBSSH2",E,E,N,N],[17,"GIT_CERT_SSH_MD5",E,E,N,N],[17,"GIT_CERT_SSH_SHA1",E,E,N,N],[17,"GIT_CHECKOUT_NOTIFY_NONE",E,E,N,N],[17,"GIT_CHECKOUT_NOTIFY_CONFLICT",E,E,N,N],[17,"GIT_CHECKOUT_NOTIFY_DIRTY",E,E,N,N],[17,"GIT_CHECKOUT_NOTIFY_UPDATED",E,E,N,N],[17,"GIT_CHECKOUT_NOTIFY_UNTRACKED",E,E,N,N],[17,"GIT_CHECKOUT_NOTIFY_IGNORED",E,E,N,N],[17,"GIT_CHECKOUT_NOTIFY_ALL",E,E,N,N],[17,"GIT_STATUS_CURRENT",E,E,N,N],[17,"GIT_STATUS_INDEX_NEW",E,E,N,N],[17,"GIT_STATUS_INDEX_MODIFIED",E,E,N,N],[17,"GIT_STATUS_INDEX_DELETED",E,E,N,N],[17,"GIT_STATUS_INDEX_RENAMED",E,E,N,N],[17,"GIT_STATUS_INDEX_TYPECHANGE",E,E,N,N],[17,"GIT_STATUS_WT_NEW",E,E,N,N],[17,"GIT_STATUS_WT_MODIFIED",E,E,N,N],[17,"GIT_STATUS_WT_DELETED",E,E,N,N],[17,"GIT_STATUS_WT_TYPECHANGE",E,E,N,N],[17,"GIT_STATUS_WT_RENAMED",E,E,N,N],[17,"GIT_STATUS_WT_UNREADABLE",E,E,N,N],[17,"GIT_STATUS_IGNORED",E,E,N,N],[17,"GIT_STATUS_CONFLICTED",E,E,N,N],[17,"GIT_STATUS_OPT_INCLUDE_UNTRACKED",E,E,N,N],[17,"GIT_STATUS_OPT_INCLUDE_IGNORED",E,E,N,N],[17,"GIT_STATUS_OPT_INCLUDE_UNMODIFIED",E,E,N,N],[17,"GIT_STATUS_OPT_EXCLUDE_SUBMODULES",E,E,N,N],[17,"GIT_STATUS_OPT_RECURSE_UNTRACKED_DIRS",E,E,N,N],[17,"GIT_STATUS_OPT_DISABLE_PATHSPEC_MATCH",E,E,N,N],[17,"GIT_STATUS_OPT_RECURSE_IGNORED_DIRS",E,E,N,N],[17,"GIT_STATUS_OPT_RENAMES_HEAD_TO_INDEX",E,E,N,N],[17,"GIT_STATUS_OPT_RENAMES_INDEX_TO_WORKDIR",E,E,N,N],[17,"GIT_STATUS_OPT_SORT_CASE_SENSITIVELY",E,E,N,N],[17,"GIT_STATUS_OPT_SORT_CASE_INSENSITIVELY",E,E,N,N],[17,"GIT_STATUS_OPT_RENAMES_FROM_REWRITES",E,E,N,N],[17,"GIT_STATUS_OPT_NO_REFRESH",E,E,N,N],[17,"GIT_STATUS_OPT_UPDATE_INDEX",E,E,N,N],[17,"GIT_STATUS_OPT_INCLUDE_UNREADABLE",E,E,N,N],[17,"GIT_STATUS_OPT_INCLUDE_UNREADABLE_AS_UNTRACKED",E,E,N,N],[17,"GIT_STATUS_SHOW_INDEX_AND_WORKDIR",E,E,N,N],[17,"GIT_STATUS_SHOW_INDEX_ONLY",E,E,N,N],[17,"GIT_STATUS_SHOW_WORKDIR_ONLY",E,E,N,N],[17,"GIT_DELTA_UNMODIFIED",E,E,N,N],[17,"GIT_DELTA_ADDED",E,E,N,N],[17,"GIT_DELTA_DELETED",E,E,N,N],[17,"GIT_DELTA_MODIFIED",E,E,N,N],[17,"GIT_DELTA_RENAMED",E,E,N,N],[17,"GIT_DELTA_COPIED",E,E,N,N],[17,"GIT_DELTA_IGNORED",E,E,N,N],[17,"GIT_DELTA_UNTRACKED",E,E,N,N],[17,"GIT_DELTA_TYPECHANGE",E,E,N,N],[17,"GIT_DELTA_UNREADABLE",E,E,N,N],[17,"GIT_DELTA_CONFLICTED",E,E,N,N],[17,"GIT_CHECKOUT_NONE",E,E,N,N],[17,"GIT_CHECKOUT_SAFE",E,E,N,N],[17,"GIT_CHECKOUT_FORCE",E,E,N,N],[17,"GIT_CHECKOUT_RECREATE_MISSING",E,E,N,N],[17,"GIT_CHECKOUT_ALLOW_CONFLICTS",E,E,N,N],[17,"GIT_CHECKOUT_REMOVE_UNTRACKED",E,E,N,N],[17,"GIT_CHECKOUT_REMOVE_IGNORED",E,E,N,N],[17,"GIT_CHECKOUT_UPDATE_ONLY",E,E,N,N],[17,"GIT_CHECKOUT_DONT_UPDATE_INDEX",E,E,N,N],[17,"GIT_CHECKOUT_NO_REFRESH",E,E,N,N],[17,"GIT_CHECKOUT_SKIP_UNMERGED",E,E,N,N],[17,"GIT_CHECKOUT_USE_OURS",E,E,N,N],[17,"GIT_CHECKOUT_USE_THEIRS",E,E,N,N],[17,"GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH",E,E,N,N],[17,"GIT_CHECKOUT_SKIP_LOCKED_DIRECTORIES",E,E,N,N],[17,"GIT_CHECKOUT_DONT_OVERWRITE_IGNORED",E,E,N,N],[17,"GIT_CHECKOUT_CONFLICT_STYLE_MERGE",E,E,N,N],[17,"GIT_CHECKOUT_CONFLICT_STYLE_DIFF3",E,E,N,N],[17,"GIT_CHECKOUT_UPDATE_SUBMODULES",E,E,N,N],[17,"GIT_CHECKOUT_UPDATE_SUBMODULES_IF_CHANGED",E,E,N,N],[17,"GIT_RESET_SOFT",E,E,N,N],[17,"GIT_RESET_MIXED",E,E,N,N],[17,"GIT_RESET_HARD",E,E,N,N],[17,"GIT_OBJ_ANY",E,E,N,N],[17,"GIT_OBJ_BAD",E,E,N,N],[17,"GIT_OBJ__EXT1",E,E,N,N],[17,"GIT_OBJ_COMMIT",E,E,N,N],[17,"GIT_OBJ_TREE",E,E,N,N],[17,"GIT_OBJ_BLOB",E,E,N,N],[17,"GIT_OBJ_TAG",E,E,N,N],[17,"GIT_OBJ__EXT2",E,E,N,N],[17,"GIT_OBJ_OFS_DELTA",E,E,N,N],[17,"GIT_OBJ_REF_DELTA",E,E,N,N],[17,"GIT_REF_INVALID",E,E,N,N],[17,"GIT_REF_OID",E,E,N,N],[17,"GIT_REF_SYMBOLIC",E,E,N,N],[17,"GIT_REF_LISTALL",E,E,N,N],[17,"GIT_FILEMODE_UNREADABLE",E,E,N,N],[17,"GIT_FILEMODE_TREE",E,E,N,N],[17,"GIT_FILEMODE_BLOB",E,E,N,N],[17,"GIT_FILEMODE_BLOB_EXECUTABLE",E,E,N,N],[17,"GIT_FILEMODE_LINK",E,E,N,N],[17,"GIT_FILEMODE_COMMIT",E,E,N,N],[17,"GIT_TREEWALK_PRE",E,E,N,N],[17,"GIT_TREEWALK_POST",E,E,N,N],[17,"GIT_BRANCH_LOCAL",E,E,N,N],[17,"GIT_BRANCH_REMOTE",E,E,N,N],[17,"GIT_BRANCH_ALL",E,E,N,N],[17,"GIT_BLAME_NORMAL",E,E,N,N],[17,"GIT_BLAME_TRACK_COPIES_SAME_FILE",E,E,N,N],[17,"GIT_BLAME_TRACK_COPIES_SAME_COMMIT_MOVES",E,E,N,N],[17,"GIT_BLAME_TRACK_COPIES_SAME_COMMIT_COPIES",E,E,N,N],[17,"GIT_BLAME_TRACK_COPIES_ANY_COMMIT_COPIES",E,E,N,N],[17,"GIT_BLAME_FIRST_PARENT",E,E,N,N],[17,"GIT_IDXENTRY_INTENT_TO_ADD",E,E,N,N],[17,"GIT_IDXENTRY_SKIP_WORKTREE",E,E,N,N],[17,"GIT_IDXENTRY_EXTENDED2",E,E,N,N],[17,"GIT_IDXENTRY_UPDATE",E,E,N,N],[17,"GIT_IDXENTRY_REMOVE",E,E,N,N],[17,"GIT_IDXENTRY_UPTODATE",E,E,N,N],[17,"GIT_IDXENTRY_ADDED",E,E,N,N],[17,"GIT_IDXENTRY_HASHED",E,E,N,N],[17,"GIT_IDXENTRY_UNHASHED",E,E,N,N],[17,"GIT_IDXENTRY_WT_REMOVE",E,E,N,N],[17,"GIT_IDXENTRY_CONFLICTED",E,E,N,N],[17,"GIT_IDXENTRY_UNPACKED",E,E,N,N],[17,"GIT_IDXENTRY_NEW_SKIP_WORKTREE",E,E,N,N],[17,"GIT_IDXENTRY_EXTENDED",E,E,N,N],[17,"GIT_IDXENTRY_VALID",E,E,N,N],[17,"GIT_IDXENTRY_NAMEMASK",E,E,N,N],[17,"GIT_IDXENTRY_STAGEMASK",E,E,N,N],[17,"GIT_IDXENTRY_STAGESHIFT",E,E,N,N],[17,"GIT_CONFIG_LEVEL_PROGRAMDATA",E,E,N,N],[17,"GIT_CONFIG_LEVEL_SYSTEM",E,E,N,N],[17,"GIT_CONFIG_LEVEL_XDG",E,E,N,N],[17,"GIT_CONFIG_LEVEL_GLOBAL",E,E,N,N],[17,"GIT_CONFIG_LEVEL_LOCAL",E,E,N,N],[17,"GIT_CONFIG_LEVEL_APP",E,E,N,N],[17,"GIT_CONFIG_HIGHEST_LEVEL",E,E,N,N],[17,"GIT_SUBMODULE_UPDATE_CHECKOUT",E,E,N,N],[17,"GIT_SUBMODULE_UPDATE_REBASE",E,E,N,N],[17,"GIT_SUBMODULE_UPDATE_MERGE",E,E,N,N],[17,"GIT_SUBMODULE_UPDATE_NONE",E,E,N,N],[17,"GIT_SUBMODULE_UPDATE_DEFAULT",E,E,N,N],[17,"GIT_SUBMODULE_IGNORE_UNSPECIFIED",E,E,N,N],[17,"GIT_SUBMODULE_IGNORE_NONE",E,E,N,N],[17,"GIT_SUBMODULE_IGNORE_UNTRACKED",E,E,N,N],[17,"GIT_SUBMODULE_IGNORE_DIRTY",E,E,N,N],[17,"GIT_SUBMODULE_IGNORE_ALL",E,E,N,N],[17,"GIT_CREDTYPE_USERPASS_PLAINTEXT",E,E,N,N],[17,"GIT_CREDTYPE_SSH_KEY",E,E,N,N],[17,"GIT_CREDTYPE_SSH_CUSTOM",E,E,N,N],[17,"GIT_CREDTYPE_DEFAULT",E,E,N,N],[17,"GIT_CREDTYPE_SSH_INTERACTIVE",E,E,N,N],[17,"GIT_CREDTYPE_USERNAME",E,E,N,N],[17,"GIT_CREDTYPE_SSH_MEMORY",E,E,N,N],[17,"GIT_INDEX_ADD_DEFAULT",E,E,N,N],[17,"GIT_INDEX_ADD_FORCE",E,E,N,N],[17,"GIT_INDEX_ADD_DISABLE_PATHSPEC_MATCH",E,E,N,N],[17,"GIT_INDEX_ADD_CHECK_PATHSPEC",E,E,N,N],[17,"GIT_REPOSITORY_OPEN_NO_SEARCH",E,E,N,N],[17,"GIT_REPOSITORY_OPEN_CROSS_FS",E,E,N,N],[17,"GIT_REPOSITORY_OPEN_BARE",E,E,N,N],[17,"GIT_REPOSITORY_OPEN_NO_DOTGIT",E,E,N,N],[17,"GIT_REPOSITORY_OPEN_FROM_ENV",E,E,N,N],[17,"GIT_REPOSITORY_INIT_OPTIONS_VERSION",E,E,N,N],[17,"GIT_REPOSITORY_INIT_BARE",E,E,N,N],[17,"GIT_REPOSITORY_INIT_NO_REINIT",E,E,N,N],[17,"GIT_REPOSITORY_INIT_NO_DOTGIT_DIR",E,E,N,N],[17,"GIT_REPOSITORY_INIT_MKDIR",E,E,N,N],[17,"GIT_REPOSITORY_INIT_MKPATH",E,E,N,N],[17,"GIT_REPOSITORY_INIT_EXTERNAL_TEMPLATE",E,E,N,N],[17,"GIT_REPOSITORY_INIT_SHARED_UMASK",E,E,N,N],[17,"GIT_REPOSITORY_INIT_SHARED_GROUP",E,E,N,N],[17,"GIT_REPOSITORY_INIT_SHARED_ALL",E,E,N,N],[17,"GIT_SORT_NONE",E,E,N,N],[17,"GIT_SORT_TOPOLOGICAL",E,E,N,N],[17,"GIT_SORT_TIME",E,E,N,N],[17,"GIT_SORT_REVERSE",E,E,N,N],[17,"GIT_SUBMODULE_STATUS_IN_HEAD",E,E,N,N],[17,"GIT_SUBMODULE_STATUS_IN_INDEX",E,E,N,N],[17,"GIT_SUBMODULE_STATUS_IN_CONFIG",E,E,N,N],[17,"GIT_SUBMODULE_STATUS_IN_WD",E,E,N,N],[17,"GIT_SUBMODULE_STATUS_INDEX_ADDED",E,E,N,N],[17,"GIT_SUBMODULE_STATUS_INDEX_DELETED",E,E,N,N],[17,"GIT_SUBMODULE_STATUS_INDEX_MODIFIED",E,E,N,N],[17,"GIT_SUBMODULE_STATUS_WD_UNINITIALIZED",E,E,N,N],[17,"GIT_SUBMODULE_STATUS_WD_ADDED",E,E,N,N],[17,"GIT_SUBMODULE_STATUS_WD_DELETED",E,E,N,N],[17,"GIT_SUBMODULE_STATUS_WD_MODIFIED",E,E,N,N],[17,"GIT_SUBMODULE_STATUS_WD_INDEX_MODIFIED",E,E,N,N],[17,"GIT_SUBMODULE_STATUS_WD_WD_MODIFIED",E,E,N,N],[17,"GIT_SUBMODULE_STATUS_WD_UNTRACKED",E,E,N,N],[17,"GIT_PATHSPEC_DEFAULT",E,E,N,N],[17,"GIT_PATHSPEC_IGNORE_CASE",E,E,N,N],[17,"GIT_PATHSPEC_USE_CASE",E,E,N,N],[17,"GIT_PATHSPEC_NO_GLOB",E,E,N,N],[17,"GIT_PATHSPEC_NO_MATCH_ERROR",E,E,N,N],[17,"GIT_PATHSPEC_FIND_FAILURES",E,E,N,N],[17,"GIT_PATHSPEC_FAILURES_ONLY",E,E,N,N],[17,"GIT_DIFF_LINE_CONTEXT",E,E,N,N],[17,"GIT_DIFF_LINE_ADDITION",E,E,N,N],[17,"GIT_DIFF_LINE_DELETION",E,E,N,N],[17,"GIT_DIFF_LINE_CONTEXT_EOFNL",E,E,N,N],[17,"GIT_DIFF_LINE_ADD_EOFNL",E,E,N,N],[17,"GIT_DIFF_LINE_DEL_EOFNL",E,E,N,N],[17,"GIT_DIFF_LINE_FILE_HDR",E,E,N,N],[17,"GIT_DIFF_LINE_HUNK_HDR",E,E,N,N],[17,"GIT_DIFF_LINE_BINARY",E,E,N,N],[17,"GIT_DIFF_FORMAT_PATCH",E,E,N,N],[17,"GIT_DIFF_FORMAT_PATCH_HEADER",E,E,N,N],[17,"GIT_DIFF_FORMAT_RAW",E,E,N,N],[17,"GIT_DIFF_FORMAT_NAME_ONLY",E,E,N,N],[17,"GIT_DIFF_FORMAT_NAME_STATUS",E,E,N,N],[17,"GIT_DIFF_STATS_NONE",E,E,N,N],[17,"GIT_DIFF_STATS_FULL",E,E,N,N],[17,"GIT_DIFF_STATS_SHORT",E,E,N,N],[17,"GIT_DIFF_STATS_NUMBER",E,E,N,N],[17,"GIT_DIFF_STATS_INCLUDE_SUMMARY",E,E,N,N],[17,"GIT_DIFF_NORMAL",E,E,N,N],[17,"GIT_DIFF_REVERSE",E,E,N,N],[17,"GIT_DIFF_INCLUDE_IGNORED",E,E,N,N],[17,"GIT_DIFF_RECURSE_IGNORED_DIRS",E,E,N,N],[17,"GIT_DIFF_INCLUDE_UNTRACKED",E,E,N,N],[17,"GIT_DIFF_RECURSE_UNTRACKED_DIRS",E,E,N,N],[17,"GIT_DIFF_INCLUDE_UNMODIFIED",E,E,N,N],[17,"GIT_DIFF_INCLUDE_TYPECHANGE",E,E,N,N],[17,"GIT_DIFF_INCLUDE_TYPECHANGE_TREES",E,E,N,N],[17,"GIT_DIFF_IGNORE_FILEMODE",E,E,N,N],[17,"GIT_DIFF_IGNORE_SUBMODULES",E,E,N,N],[17,"GIT_DIFF_IGNORE_CASE",E,E,N,N],[17,"GIT_DIFF_DISABLE_PATHSPEC_MATCH",E,E,N,N],[17,"GIT_DIFF_SKIP_BINARY_CHECK",E,E,N,N],[17,"GIT_DIFF_ENABLE_FAST_UNTRACKED_DIRS",E,E,N,N],[17,"GIT_DIFF_UPDATE_INDEX",E,E,N,N],[17,"GIT_DIFF_INCLUDE_UNREADABLE",E,E,N,N],[17,"GIT_DIFF_INCLUDE_UNREADABLE_AS_UNTRACKED",E,E,N,N],[17,"GIT_DIFF_FORCE_TEXT",E,E,N,N],[17,"GIT_DIFF_FORCE_BINARY",E,E,N,N],[17,"GIT_DIFF_IGNORE_WHITESPACE",E,E,N,N],[17,"GIT_DIFF_IGNORE_WHITESPACE_CHANGE",E,E,N,N],[17,"GIT_DIFF_IGNORE_WHITESPACE_EOL",E,E,N,N],[17,"GIT_DIFF_SHOW_UNTRACKED_CONTENT",E,E,N,N],[17,"GIT_DIFF_SHOW_UNMODIFIED",E,E,N,N],[17,"GIT_DIFF_PATIENCE",E,E,N,N],[17,"GIT_DIFF_MINIMAL",E,E,N,N],[17,"GIT_DIFF_SHOW_BINARY",E,E,N,N],[17,"GIT_DIFF_INDENT_HEURISTIC",E,E,N,N],[17,"GIT_DIFF_FIND_OPTIONS_VERSION",E,E,N,N],[17,"GIT_DIFF_FIND_BY_CONFIG",E,E,N,N],[17,"GIT_DIFF_FIND_RENAMES",E,E,N,N],[17,"GIT_DIFF_FIND_RENAMES_FROM_REWRITES",E,E,N,N],[17,"GIT_DIFF_FIND_COPIES",E,E,N,N],[17,"GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED",E,E,N,N],[17,"GIT_DIFF_FIND_REWRITES",E,E,N,N],[17,"GIT_DIFF_BREAK_REWRITES",E,E,N,N],[17,"GIT_DIFF_FIND_AND_BREAK_REWRITES",E,E,N,N],[17,"GIT_DIFF_FIND_FOR_UNTRACKED",E,E,N,N],[17,"GIT_DIFF_FIND_ALL",E,E,N,N],[17,"GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE",E,E,N,N],[17,"GIT_DIFF_FIND_IGNORE_WHITESPACE",E,E,N,N],[17,"GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE",E,E,N,N],[17,"GIT_DIFF_FIND_EXACT_MATCH_ONLY",E,E,N,N],[17,"GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY",E,E,N,N],[17,"GIT_DIFF_FIND_REMOVE_UNMODIFIED",E,E,N,N],[17,"GIT_DIFF_BINARY_NONE",E,E,N,N],[17,"GIT_DIFF_BINARY_LITERAL",E,E,N,N],[17,"GIT_DIFF_BINARY_DELTA",E,E,N,N],[17,"GIT_MERGE_FIND_RENAMES",E,E,N,N],[17,"GIT_MERGE_FAIL_ON_CONFLICT",E,E,N,N],[17,"GIT_MERGE_SKIP_REUC",E,E,N,N],[17,"GIT_MERGE_NO_RECURSIVE",E,E,N,N],[17,"GIT_MERGE_FILE_FAVOR_NORMAL",E,E,N,N],[17,"GIT_MERGE_FILE_FAVOR_OURS",E,E,N,N],[17,"GIT_MERGE_FILE_FAVOR_THEIRS",E,E,N,N],[17,"GIT_MERGE_FILE_FAVOR_UNION",E,E,N,N],[17,"GIT_MERGE_FILE_DEFAULT",E,E,N,N],[17,"GIT_MERGE_FILE_STYLE_MERGE",E,E,N,N],[17,"GIT_MERGE_FILE_STYLE_DIFF3",E,E,N,N],[17,"GIT_MERGE_FILE_SIMPLIFY_ALNUM",E,E,N,N],[17,"GIT_MERGE_FILE_IGNORE_WHITESPACE",E,E,N,N],[17,"GIT_MERGE_FILE_IGNORE_WHITESPACE_CHANGE",E,E,N,N],[17,"GIT_MERGE_FILE_IGNORE_WHITESPACE_EOL",E,E,N,N],[17,"GIT_MERGE_FILE_DIFF_PATIENCE",E,E,N,N],[17,"GIT_MERGE_FILE_DIFF_MINIMAL",E,E,N,N],[17,"GIT_MERGE_ANALYSIS_NONE",E,E,N,N],[17,"GIT_MERGE_ANALYSIS_NORMAL",E,E,N,N],[17,"GIT_MERGE_ANALYSIS_UP_TO_DATE",E,E,N,N],[17,"GIT_MERGE_ANALYSIS_FASTFORWARD",E,E,N,N],[17,"GIT_MERGE_ANALYSIS_UNBORN",E,E,N,N],[17,"GIT_MERGE_PREFERENCE_NONE",E,E,N,N],[17,"GIT_MERGE_PREFERENCE_NO_FASTFORWARD",E,E,N,N],[17,"GIT_MERGE_PREFERENCE_FASTFORWARD_ONLY",E,E,N,N],[17,"GIT_PROXY_NONE",E,E,N,N],[17,"GIT_PROXY_AUTO",E,E,N,N],[17,"GIT_PROXY_SPECIFIED",E,E,N,N],[17,"GIT_SERVICE_UPLOADPACK_LS",E,E,N,N],[17,"GIT_SERVICE_UPLOADPACK",E,E,N,N],[17,"GIT_SERVICE_RECEIVEPACK_LS",E,E,N,N],[17,"GIT_SERVICE_RECEIVEPACK",E,E,N,N],[17,"GIT_DESCRIBE_DEFAULT",E,E,N,N],[17,"GIT_DESCRIBE_TAGS",E,E,N,N],[17,"GIT_DESCRIBE_ALL",E,E,N,N],[17,"GIT_PACKBUILDER_ADDING_OBJECTS",E,E,N,N],[17,"GIT_PACKBUILDER_DELTAFICATION",E,E,N,N],[17,"GIT_STASH_DEFAULT",E,E,N,N],[17,"GIT_STASH_KEEP_INDEX",E,E,N,N],[17,"GIT_STASH_INCLUDE_UNTRACKED",E,E,N,N],[17,"GIT_STASH_INCLUDE_IGNORED",E,E,N,N],[17,"GIT_STASH_APPLY_DEFAULT",E,E,N,N],[17,"GIT_STASH_APPLY_REINSTATE_INDEX",E,E,N,N],[17,"GIT_STASH_APPLY_PROGRESS_NONE",E,E,N,N],[17,"GIT_STASH_APPLY_PROGRESS_LOADING_STASH",E,E,N,N],[17,"GIT_STASH_APPLY_PROGRESS_ANALYZE_INDEX",E,E,N,N],[17,"GIT_STASH_APPLY_PROGRESS_ANALYZE_MODIFIED",E,E,N,N],[17,"GIT_STASH_APPLY_PROGRESS_ANALYZE_UNTRACKED",E,E,N,N],[17,"GIT_STASH_APPLY_PROGRESS_CHECKOUT_UNTRACKED",E,E,N,N],[17,"GIT_STASH_APPLY_PROGRESS_CHECKOUT_MODIFIED",E,E,N,N],[17,"GIT_STASH_APPLY_PROGRESS_DONE",E,E,N,N],[17,"GIT_REBASE_NO_OPERATION",E,E,N,N],[17,"GIT_REBASE_OPERATION_PICK",E,E,N,N],[17,"GIT_REBASE_OPERATION_REWORD",E,E,N,N],[17,"GIT_REBASE_OPERATION_EDIT",E,E,N,N],[17,"GIT_REBASE_OPERATION_SQUASH",E,E,N,N],[17,"GIT_REBASE_OPERATION_FIXUP",E,E,N,N],[17,"GIT_REBASE_OPERATION_EXEC",E,E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[196],E,E,0,[[[U]],[R[24]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[198],E,E,0,[[["self"]],["typeid"]]],[11,R[195],E,E,0,[[["self"]],[T]]],[11,R[197],E,E,0,[[["self"]],[R[24]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[196],E,E,1,[[[U]],[R[24]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[198],E,E,1,[[["self"]],["typeid"]]],[11,R[195],E,E,1,[[["self"]],[T]]],[11,R[197],E,E,1,[[["self"]],[R[24]]]],[11,R[151],E,E,2,[[["self"]],[T]]],[11,R[200],E,E,2,N],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[196],E,E,2,[[[U]],[R[24]]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[198],E,E,2,[[["self"]],["typeid"]]],[11,R[195],E,E,2,[[["self"]],[T]]],[11,R[197],E,E,2,[[["self"]],[R[24]]]],[11,R[151],E,E,3,[[["self"]],[T]]],[11,R[200],E,E,3,N],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[196],E,E,3,[[[U]],[R[24]]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[198],E,E,3,[[["self"]],["typeid"]]],[11,R[195],E,E,3,[[["self"]],[T]]],[11,R[197],E,E,3,[[["self"]],[R[24]]]],[11,R[151],E,E,4,[[["self"]],[T]]],[11,R[200],E,E,4,N],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[196],E,E,4,[[[U]],[R[24]]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[198],E,E,4,[[["self"]],["typeid"]]],[11,R[195],E,E,4,[[["self"]],[T]]],[11,R[197],E,E,4,[[["self"]],[R[24]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[196],E,E,5,[[[U]],[R[24]]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[198],E,E,5,[[["self"]],["typeid"]]],[11,R[195],E,E,5,[[["self"]],[T]]],[11,R[197],E,E,5,[[["self"]],[R[24]]]],[11,R[151],E,E,6,[[["self"]],[T]]],[11,R[200],E,E,6,N],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[["self"]],[U]]],[11,R[196],E,E,6,[[[U]],[R[24]]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[198],E,E,6,[[["self"]],["typeid"]]],[11,R[195],E,E,6,[[["self"]],[T]]],[11,R[197],E,E,6,[[["self"]],[R[24]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[["self"]],[U]]],[11,R[196],E,E,7,[[[U]],[R[24]]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[198],E,E,7,[[["self"]],["typeid"]]],[11,R[195],E,E,7,[[["self"]],[T]]],[11,R[197],E,E,7,[[["self"]],[R[24]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[["self"]],[U]]],[11,R[196],E,E,8,[[[U]],[R[24]]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[198],E,E,8,[[["self"]],["typeid"]]],[11,R[195],E,E,8,[[["self"]],[T]]],[11,R[197],E,E,8,[[["self"]],[R[24]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[["self"]],[U]]],[11,R[196],E,E,9,[[[U]],[R[24]]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[198],E,E,9,[[["self"]],["typeid"]]],[11,R[195],E,E,9,[[["self"]],[T]]],[11,R[197],E,E,9,[[["self"]],[R[24]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,R[196],E,E,10,[[[U]],[R[24]]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[198],E,E,10,[[["self"]],["typeid"]]],[11,R[195],E,E,10,[[["self"]],[T]]],[11,R[197],E,E,10,[[["self"]],[R[24]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[196],E,E,11,[[[U]],[R[24]]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[198],E,E,11,[[["self"]],["typeid"]]],[11,R[195],E,E,11,[[["self"]],[T]]],[11,R[197],E,E,11,[[["self"]],[R[24]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[["self"]],[U]]],[11,R[196],E,E,12,[[[U]],[R[24]]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[198],E,E,12,[[["self"]],["typeid"]]],[11,R[195],E,E,12,[[["self"]],[T]]],[11,R[197],E,E,12,[[["self"]],[R[24]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[["self"]],[U]]],[11,R[196],E,E,13,[[[U]],[R[24]]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[198],E,E,13,[[["self"]],["typeid"]]],[11,R[195],E,E,13,[[["self"]],[T]]],[11,R[197],E,E,13,[[["self"]],[R[24]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[["self"]],[U]]],[11,R[196],E,E,14,[[[U]],[R[24]]]],[11,"borrow",E,E,14,[[["self"]],[T]]],[11,R[198],E,E,14,[[["self"]],["typeid"]]],[11,R[195],E,E,14,[[["self"]],[T]]],[11,R[197],E,E,14,[[["self"]],[R[24]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[["self"]],[U]]],[11,R[196],E,E,15,[[[U]],[R[24]]]],[11,"borrow",E,E,15,[[["self"]],[T]]],[11,R[198],E,E,15,[[["self"]],["typeid"]]],[11,R[195],E,E,15,[[["self"]],[T]]],[11,R[197],E,E,15,[[["self"]],[R[24]]]],[11,R[151],E,E,16,[[["self"]],[T]]],[11,R[200],E,E,16,N],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[["self"]],[U]]],[11,R[196],E,E,16,[[[U]],[R[24]]]],[11,"borrow",E,E,16,[[["self"]],[T]]],[11,R[198],E,E,16,[[["self"]],["typeid"]]],[11,R[195],E,E,16,[[["self"]],[T]]],[11,R[197],E,E,16,[[["self"]],[R[24]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[["self"]],[U]]],[11,R[196],E,E,17,[[[U]],[R[24]]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[198],E,E,17,[[["self"]],["typeid"]]],[11,R[195],E,E,17,[[["self"]],[T]]],[11,R[197],E,E,17,[[["self"]],[R[24]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[["self"]],[U]]],[11,R[196],E,E,18,[[[U]],[R[24]]]],[11,"borrow",E,E,18,[[["self"]],[T]]],[11,R[198],E,E,18,[[["self"]],["typeid"]]],[11,R[195],E,E,18,[[["self"]],[T]]],[11,R[197],E,E,18,[[["self"]],[R[24]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[["self"]],[U]]],[11,R[196],E,E,19,[[[U]],[R[24]]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[198],E,E,19,[[["self"]],["typeid"]]],[11,R[195],E,E,19,[[["self"]],[T]]],[11,R[197],E,E,19,[[["self"]],[R[24]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[["self"]],[U]]],[11,R[196],E,E,20,[[[U]],[R[24]]]],[11,"borrow",E,E,20,[[["self"]],[T]]],[11,R[198],E,E,20,[[["self"]],["typeid"]]],[11,R[195],E,E,20,[[["self"]],[T]]],[11,R[197],E,E,20,[[["self"]],[R[24]]]],[11,R[151],E,E,21,[[["self"]],[T]]],[11,R[200],E,E,21,N],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[["self"]],[U]]],[11,R[196],E,E,21,[[[U]],[R[24]]]],[11,"borrow",E,E,21,[[["self"]],[T]]],[11,R[198],E,E,21,[[["self"]],["typeid"]]],[11,R[195],E,E,21,[[["self"]],[T]]],[11,R[197],E,E,21,[[["self"]],[R[24]]]],[11,R[151],E,E,22,[[["self"]],[T]]],[11,R[200],E,E,22,N],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[["self"]],[U]]],[11,R[196],E,E,22,[[[U]],[R[24]]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[198],E,E,22,[[["self"]],["typeid"]]],[11,R[195],E,E,22,[[["self"]],[T]]],[11,R[197],E,E,22,[[["self"]],[R[24]]]],[11,R[151],E,E,23,[[["self"]],[T]]],[11,R[200],E,E,23,N],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[["self"]],[U]]],[11,R[196],E,E,23,[[[U]],[R[24]]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[198],E,E,23,[[["self"]],["typeid"]]],[11,R[195],E,E,23,[[["self"]],[T]]],[11,R[197],E,E,23,[[["self"]],[R[24]]]],[11,R[151],E,E,24,[[["self"]],[T]]],[11,R[200],E,E,24,N],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[["self"]],[U]]],[11,R[196],E,E,24,[[[U]],[R[24]]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[198],E,E,24,[[["self"]],["typeid"]]],[11,R[195],E,E,24,[[["self"]],[T]]],[11,R[197],E,E,24,[[["self"]],[R[24]]]],[11,R[151],E,E,25,[[["self"]],[T]]],[11,R[200],E,E,25,N],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[["self"]],[U]]],[11,R[196],E,E,25,[[[U]],[R[24]]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[198],E,E,25,[[["self"]],["typeid"]]],[11,R[195],E,E,25,[[["self"]],[T]]],[11,R[197],E,E,25,[[["self"]],[R[24]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[["self"]],[U]]],[11,R[196],E,E,26,[[[U]],[R[24]]]],[11,"borrow",E,E,26,[[["self"]],[T]]],[11,R[198],E,E,26,[[["self"]],["typeid"]]],[11,R[195],E,E,26,[[["self"]],[T]]],[11,R[197],E,E,26,[[["self"]],[R[24]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[["self"]],[U]]],[11,R[196],E,E,27,[[[U]],[R[24]]]],[11,"borrow",E,E,27,[[["self"]],[T]]],[11,R[198],E,E,27,[[["self"]],["typeid"]]],[11,R[195],E,E,27,[[["self"]],[T]]],[11,R[197],E,E,27,[[["self"]],[R[24]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[["self"]],[U]]],[11,R[196],E,E,28,[[[U]],[R[24]]]],[11,"borrow",E,E,28,[[["self"]],[T]]],[11,R[198],E,E,28,[[["self"]],["typeid"]]],[11,R[195],E,E,28,[[["self"]],[T]]],[11,R[197],E,E,28,[[["self"]],[R[24]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[["self"]],[U]]],[11,R[196],E,E,29,[[[U]],[R[24]]]],[11,"borrow",E,E,29,[[["self"]],[T]]],[11,R[198],E,E,29,[[["self"]],["typeid"]]],[11,R[195],E,E,29,[[["self"]],[T]]],[11,R[197],E,E,29,[[["self"]],[R[24]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[["self"]],[U]]],[11,R[196],E,E,30,[[[U]],[R[24]]]],[11,"borrow",E,E,30,[[["self"]],[T]]],[11,R[198],E,E,30,[[["self"]],["typeid"]]],[11,R[195],E,E,30,[[["self"]],[T]]],[11,R[197],E,E,30,[[["self"]],[R[24]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[["self"]],[U]]],[11,R[196],E,E,31,[[[U]],[R[24]]]],[11,"borrow",E,E,31,[[["self"]],[T]]],[11,R[198],E,E,31,[[["self"]],["typeid"]]],[11,R[195],E,E,31,[[["self"]],[T]]],[11,R[197],E,E,31,[[["self"]],[R[24]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[["self"]],[U]]],[11,R[196],E,E,32,[[[U]],[R[24]]]],[11,"borrow",E,E,32,[[["self"]],[T]]],[11,R[198],E,E,32,[[["self"]],["typeid"]]],[11,R[195],E,E,32,[[["self"]],[T]]],[11,R[197],E,E,32,[[["self"]],[R[24]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[["self"]],[U]]],[11,R[196],E,E,33,[[[U]],[R[24]]]],[11,"borrow",E,E,33,[[["self"]],[T]]],[11,R[198],E,E,33,[[["self"]],["typeid"]]],[11,R[195],E,E,33,[[["self"]],[T]]],[11,R[197],E,E,33,[[["self"]],[R[24]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[["self"]],[U]]],[11,R[196],E,E,34,[[[U]],[R[24]]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[198],E,E,34,[[["self"]],["typeid"]]],[11,R[195],E,E,34,[[["self"]],[T]]],[11,R[197],E,E,34,[[["self"]],[R[24]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[["self"]],[U]]],[11,R[196],E,E,35,[[[U]],[R[24]]]],[11,"borrow",E,E,35,[[["self"]],[T]]],[11,R[198],E,E,35,[[["self"]],["typeid"]]],[11,R[195],E,E,35,[[["self"]],[T]]],[11,R[197],E,E,35,[[["self"]],[R[24]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[["self"]],[U]]],[11,R[196],E,E,36,[[[U]],[R[24]]]],[11,"borrow",E,E,36,[[["self"]],[T]]],[11,R[198],E,E,36,[[["self"]],["typeid"]]],[11,R[195],E,E,36,[[["self"]],[T]]],[11,R[197],E,E,36,[[["self"]],[R[24]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[["self"]],[U]]],[11,R[196],E,E,37,[[[U]],[R[24]]]],[11,"borrow",E,E,37,[[["self"]],[T]]],[11,R[198],E,E,37,[[["self"]],["typeid"]]],[11,R[195],E,E,37,[[["self"]],[T]]],[11,R[197],E,E,37,[[["self"]],[R[24]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[["self"]],[U]]],[11,R[196],E,E,38,[[[U]],[R[24]]]],[11,"borrow",E,E,38,[[["self"]],[T]]],[11,R[198],E,E,38,[[["self"]],["typeid"]]],[11,R[195],E,E,38,[[["self"]],[T]]],[11,R[197],E,E,38,[[["self"]],[R[24]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[["self"]],[U]]],[11,R[196],E,E,39,[[[U]],[R[24]]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[198],E,E,39,[[["self"]],["typeid"]]],[11,R[195],E,E,39,[[["self"]],[T]]],[11,R[197],E,E,39,[[["self"]],[R[24]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[["self"]],[U]]],[11,R[196],E,E,40,[[[U]],[R[24]]]],[11,"borrow",E,E,40,[[["self"]],[T]]],[11,R[198],E,E,40,[[["self"]],["typeid"]]],[11,R[195],E,E,40,[[["self"]],[T]]],[11,R[197],E,E,40,[[["self"]],[R[24]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[["self"]],[U]]],[11,R[196],E,E,41,[[[U]],[R[24]]]],[11,"borrow",E,E,41,[[["self"]],[T]]],[11,R[198],E,E,41,[[["self"]],["typeid"]]],[11,R[195],E,E,41,[[["self"]],[T]]],[11,R[197],E,E,41,[[["self"]],[R[24]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[["self"]],[U]]],[11,R[196],E,E,42,[[[U]],[R[24]]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[198],E,E,42,[[["self"]],["typeid"]]],[11,R[195],E,E,42,[[["self"]],[T]]],[11,R[197],E,E,42,[[["self"]],[R[24]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[["self"]],[U]]],[11,R[196],E,E,43,[[[U]],[R[24]]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[198],E,E,43,[[["self"]],["typeid"]]],[11,R[195],E,E,43,[[["self"]],[T]]],[11,R[197],E,E,43,[[["self"]],[R[24]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[["self"]],[U]]],[11,R[196],E,E,44,[[[U]],[R[24]]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[198],E,E,44,[[["self"]],["typeid"]]],[11,R[195],E,E,44,[[["self"]],[T]]],[11,R[197],E,E,44,[[["self"]],[R[24]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[["self"]],[U]]],[11,R[196],E,E,45,[[[U]],[R[24]]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[198],E,E,45,[[["self"]],["typeid"]]],[11,R[195],E,E,45,[[["self"]],[T]]],[11,R[197],E,E,45,[[["self"]],[R[24]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[["self"]],[U]]],[11,R[196],E,E,46,[[[U]],[R[24]]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[198],E,E,46,[[["self"]],["typeid"]]],[11,R[195],E,E,46,[[["self"]],[T]]],[11,R[197],E,E,46,[[["self"]],[R[24]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[["self"]],[U]]],[11,R[196],E,E,47,[[[U]],[R[24]]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[198],E,E,47,[[["self"]],["typeid"]]],[11,R[195],E,E,47,[[["self"]],[T]]],[11,R[197],E,E,47,[[["self"]],[R[24]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[["self"]],[U]]],[11,R[196],E,E,48,[[[U]],[R[24]]]],[11,"borrow",E,E,48,[[["self"]],[T]]],[11,R[198],E,E,48,[[["self"]],["typeid"]]],[11,R[195],E,E,48,[[["self"]],[T]]],[11,R[197],E,E,48,[[["self"]],[R[24]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[["self"]],[U]]],[11,R[196],E,E,49,[[[U]],[R[24]]]],[11,"borrow",E,E,49,[[["self"]],[T]]],[11,R[198],E,E,49,[[["self"]],["typeid"]]],[11,R[195],E,E,49,[[["self"]],[T]]],[11,R[197],E,E,49,[[["self"]],[R[24]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[["self"]],[U]]],[11,R[196],E,E,50,[[[U]],[R[24]]]],[11,"borrow",E,E,50,[[["self"]],[T]]],[11,R[198],E,E,50,[[["self"]],["typeid"]]],[11,R[195],E,E,50,[[["self"]],[T]]],[11,R[197],E,E,50,[[["self"]],[R[24]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[["self"]],[U]]],[11,R[196],E,E,51,[[[U]],[R[24]]]],[11,"borrow",E,E,51,[[["self"]],[T]]],[11,R[198],E,E,51,[[["self"]],["typeid"]]],[11,R[195],E,E,51,[[["self"]],[T]]],[11,R[197],E,E,51,[[["self"]],[R[24]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[["self"]],[U]]],[11,R[196],E,E,52,[[[U]],[R[24]]]],[11,"borrow",E,E,52,[[["self"]],[T]]],[11,R[198],E,E,52,[[["self"]],["typeid"]]],[11,R[195],E,E,52,[[["self"]],[T]]],[11,R[197],E,E,52,[[["self"]],[R[24]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[["self"]],[U]]],[11,R[196],E,E,53,[[[U]],[R[24]]]],[11,"borrow",E,E,53,[[["self"]],[T]]],[11,R[198],E,E,53,[[["self"]],["typeid"]]],[11,R[195],E,E,53,[[["self"]],[T]]],[11,R[197],E,E,53,[[["self"]],[R[24]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[["self"]],[U]]],[11,R[196],E,E,54,[[[U]],[R[24]]]],[11,"borrow",E,E,54,[[["self"]],[T]]],[11,R[198],E,E,54,[[["self"]],["typeid"]]],[11,R[195],E,E,54,[[["self"]],[T]]],[11,R[197],E,E,54,[[["self"]],[R[24]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[["self"]],[U]]],[11,R[196],E,E,55,[[[U]],[R[24]]]],[11,"borrow",E,E,55,[[["self"]],[T]]],[11,R[198],E,E,55,[[["self"]],["typeid"]]],[11,R[195],E,E,55,[[["self"]],[T]]],[11,R[197],E,E,55,[[["self"]],[R[24]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[["self"]],[U]]],[11,R[196],E,E,56,[[[U]],[R[24]]]],[11,"borrow",E,E,56,[[["self"]],[T]]],[11,R[198],E,E,56,[[["self"]],["typeid"]]],[11,R[195],E,E,56,[[["self"]],[T]]],[11,R[197],E,E,56,[[["self"]],[R[24]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[["self"]],[U]]],[11,R[196],E,E,57,[[[U]],[R[24]]]],[11,"borrow",E,E,57,[[["self"]],[T]]],[11,R[198],E,E,57,[[["self"]],["typeid"]]],[11,R[195],E,E,57,[[["self"]],[T]]],[11,R[197],E,E,57,[[["self"]],[R[24]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[["self"]],[U]]],[11,R[196],E,E,58,[[[U]],[R[24]]]],[11,"borrow",E,E,58,[[["self"]],[T]]],[11,R[198],E,E,58,[[["self"]],["typeid"]]],[11,R[195],E,E,58,[[["self"]],[T]]],[11,R[197],E,E,58,[[["self"]],[R[24]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[["self"]],[U]]],[11,R[196],E,E,59,[[[U]],[R[24]]]],[11,"borrow",E,E,59,[[["self"]],[T]]],[11,R[198],E,E,59,[[["self"]],["typeid"]]],[11,R[195],E,E,59,[[["self"]],[T]]],[11,R[197],E,E,59,[[["self"]],[R[24]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[["self"]],[U]]],[11,R[196],E,E,60,[[[U]],[R[24]]]],[11,"borrow",E,E,60,[[["self"]],[T]]],[11,R[198],E,E,60,[[["self"]],["typeid"]]],[11,R[195],E,E,60,[[["self"]],[T]]],[11,R[197],E,E,60,[[["self"]],[R[24]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[["self"]],[U]]],[11,R[196],E,E,61,[[[U]],[R[24]]]],[11,"borrow",E,E,61,[[["self"]],[T]]],[11,R[198],E,E,61,[[["self"]],["typeid"]]],[11,R[195],E,E,61,[[["self"]],[T]]],[11,R[197],E,E,61,[[["self"]],[R[24]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[["self"]],[U]]],[11,R[196],E,E,62,[[[U]],[R[24]]]],[11,"borrow",E,E,62,[[["self"]],[T]]],[11,R[198],E,E,62,[[["self"]],["typeid"]]],[11,R[195],E,E,62,[[["self"]],[T]]],[11,R[197],E,E,62,[[["self"]],[R[24]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[["self"]],[U]]],[11,R[196],E,E,63,[[[U]],[R[24]]]],[11,"borrow",E,E,63,[[["self"]],[T]]],[11,R[198],E,E,63,[[["self"]],["typeid"]]],[11,R[195],E,E,63,[[["self"]],[T]]],[11,R[197],E,E,63,[[["self"]],[R[24]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[["self"]],[U]]],[11,R[196],E,E,64,[[[U]],[R[24]]]],[11,"borrow",E,E,64,[[["self"]],[T]]],[11,R[198],E,E,64,[[["self"]],["typeid"]]],[11,R[195],E,E,64,[[["self"]],[T]]],[11,R[197],E,E,64,[[["self"]],[R[24]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[["self"]],[U]]],[11,R[196],E,E,65,[[[U]],[R[24]]]],[11,"borrow",E,E,65,[[["self"]],[T]]],[11,R[198],E,E,65,[[["self"]],["typeid"]]],[11,R[195],E,E,65,[[["self"]],[T]]],[11,R[197],E,E,65,[[["self"]],[R[24]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[["self"]],[U]]],[11,R[196],E,E,66,[[[U]],[R[24]]]],[11,"borrow",E,E,66,[[["self"]],[T]]],[11,R[198],E,E,66,[[["self"]],["typeid"]]],[11,R[195],E,E,66,[[["self"]],[T]]],[11,R[197],E,E,66,[[["self"]],[R[24]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[["self"]],[U]]],[11,R[196],E,E,67,[[[U]],[R[24]]]],[11,"borrow",E,E,67,[[["self"]],[T]]],[11,R[198],E,E,67,[[["self"]],["typeid"]]],[11,R[195],E,E,67,[[["self"]],[T]]],[11,R[197],E,E,67,[[["self"]],[R[24]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[["self"]],[U]]],[11,R[196],E,E,68,[[[U]],[R[24]]]],[11,"borrow",E,E,68,[[["self"]],[T]]],[11,R[198],E,E,68,[[["self"]],["typeid"]]],[11,R[195],E,E,68,[[["self"]],[T]]],[11,R[197],E,E,68,[[["self"]],[R[24]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[["self"]],[U]]],[11,R[196],E,E,69,[[[U]],[R[24]]]],[11,"borrow",E,E,69,[[["self"]],[T]]],[11,R[198],E,E,69,[[["self"]],["typeid"]]],[11,R[195],E,E,69,[[["self"]],[T]]],[11,R[197],E,E,69,[[["self"]],[R[24]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[["self"]],[U]]],[11,R[196],E,E,70,[[[U]],[R[24]]]],[11,"borrow",E,E,70,[[["self"]],[T]]],[11,R[198],E,E,70,[[["self"]],["typeid"]]],[11,R[195],E,E,70,[[["self"]],[T]]],[11,R[197],E,E,70,[[["self"]],[R[24]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[["self"]],[U]]],[11,R[196],E,E,71,[[[U]],[R[24]]]],[11,"borrow",E,E,71,[[["self"]],[T]]],[11,R[198],E,E,71,[[["self"]],["typeid"]]],[11,R[195],E,E,71,[[["self"]],[T]]],[11,R[197],E,E,71,[[["self"]],[R[24]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[["self"]],[U]]],[11,R[196],E,E,72,[[[U]],[R[24]]]],[11,"borrow",E,E,72,[[["self"]],[T]]],[11,R[198],E,E,72,[[["self"]],["typeid"]]],[11,R[195],E,E,72,[[["self"]],[T]]],[11,R[197],E,E,72,[[["self"]],[R[24]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[["self"]],[U]]],[11,R[196],E,E,73,[[[U]],[R[24]]]],[11,"borrow",E,E,73,[[["self"]],[T]]],[11,R[198],E,E,73,[[["self"]],["typeid"]]],[11,R[195],E,E,73,[[["self"]],[T]]],[11,R[197],E,E,73,[[["self"]],[R[24]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[["self"]],[U]]],[11,R[196],E,E,74,[[[U]],[R[24]]]],[11,"borrow",E,E,74,[[["self"]],[T]]],[11,R[198],E,E,74,[[["self"]],["typeid"]]],[11,R[195],E,E,74,[[["self"]],[T]]],[11,R[197],E,E,74,[[["self"]],[R[24]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[["self"]],[U]]],[11,R[196],E,E,75,[[[U]],[R[24]]]],[11,"borrow",E,E,75,[[["self"]],[T]]],[11,R[198],E,E,75,[[["self"]],["typeid"]]],[11,R[195],E,E,75,[[["self"]],[T]]],[11,R[197],E,E,75,[[["self"]],[R[24]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[["self"]],[U]]],[11,R[196],E,E,76,[[[U]],[R[24]]]],[11,"borrow",E,E,76,[[["self"]],[T]]],[11,R[198],E,E,76,[[["self"]],["typeid"]]],[11,R[195],E,E,76,[[["self"]],[T]]],[11,R[197],E,E,76,[[["self"]],[R[24]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[["self"]],[U]]],[11,R[196],E,E,77,[[[U]],[R[24]]]],[11,"borrow",E,E,77,[[["self"]],[T]]],[11,R[198],E,E,77,[[["self"]],["typeid"]]],[11,R[195],E,E,77,[[["self"]],[T]]],[11,R[197],E,E,77,[[["self"]],[R[24]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[["self"]],[U]]],[11,R[196],E,E,78,[[[U]],[R[24]]]],[11,"borrow",E,E,78,[[["self"]],[T]]],[11,R[198],E,E,78,[[["self"]],["typeid"]]],[11,R[195],E,E,78,[[["self"]],[T]]],[11,R[197],E,E,78,[[["self"]],[R[24]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[["self"]],[U]]],[11,R[196],E,E,79,[[[U]],[R[24]]]],[11,"borrow",E,E,79,[[["self"]],[T]]],[11,R[198],E,E,79,[[["self"]],["typeid"]]],[11,R[195],E,E,79,[[["self"]],[T]]],[11,R[197],E,E,79,[[["self"]],[R[24]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[["self"]],[U]]],[11,R[196],E,E,80,[[[U]],[R[24]]]],[11,"borrow",E,E,80,[[["self"]],[T]]],[11,R[198],E,E,80,[[["self"]],["typeid"]]],[11,R[195],E,E,80,[[["self"]],[T]]],[11,R[197],E,E,80,[[["self"]],[R[24]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[["self"]],[U]]],[11,R[196],E,E,81,[[[U]],[R[24]]]],[11,"borrow",E,E,81,[[["self"]],[T]]],[11,R[198],E,E,81,[[["self"]],["typeid"]]],[11,R[195],E,E,81,[[["self"]],[T]]],[11,R[197],E,E,81,[[["self"]],[R[24]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[["self"]],[U]]],[11,R[196],E,E,82,[[[U]],[R[24]]]],[11,"borrow",E,E,82,[[["self"]],[T]]],[11,R[198],E,E,82,[[["self"]],["typeid"]]],[11,R[195],E,E,82,[[["self"]],[T]]],[11,R[197],E,E,82,[[["self"]],[R[24]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[["self"]],[U]]],[11,R[196],E,E,83,[[[U]],[R[24]]]],[11,"borrow",E,E,83,[[["self"]],[T]]],[11,R[198],E,E,83,[[["self"]],["typeid"]]],[11,R[195],E,E,83,[[["self"]],[T]]],[11,R[197],E,E,83,[[["self"]],[R[24]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[["self"]],[U]]],[11,R[196],E,E,84,[[[U]],[R[24]]]],[11,"borrow",E,E,84,[[["self"]],[T]]],[11,R[198],E,E,84,[[["self"]],["typeid"]]],[11,R[195],E,E,84,[[["self"]],[T]]],[11,R[197],E,E,84,[[["self"]],[R[24]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[["self"]],[U]]],[11,R[196],E,E,85,[[[U]],[R[24]]]],[11,"borrow",E,E,85,[[["self"]],[T]]],[11,R[198],E,E,85,[[["self"]],["typeid"]]],[11,R[195],E,E,85,[[["self"]],[T]]],[11,R[197],E,E,85,[[["self"]],[R[24]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[["self"]],[U]]],[11,R[196],E,E,86,[[[U]],[R[24]]]],[11,"borrow",E,E,86,[[["self"]],[T]]],[11,R[198],E,E,86,[[["self"]],["typeid"]]],[11,R[195],E,E,86,[[["self"]],[T]]],[11,R[197],E,E,86,[[["self"]],[R[24]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[["self"]],[U]]],[11,R[196],E,E,87,[[[U]],[R[24]]]],[11,"borrow",E,E,87,[[["self"]],[T]]],[11,R[198],E,E,87,[[["self"]],["typeid"]]],[11,R[195],E,E,87,[[["self"]],[T]]],[11,R[197],E,E,87,[[["self"]],[R[24]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[["self"]],[U]]],[11,R[196],E,E,88,[[[U]],[R[24]]]],[11,"borrow",E,E,88,[[["self"]],[T]]],[11,R[198],E,E,88,[[["self"]],["typeid"]]],[11,R[195],E,E,88,[[["self"]],[T]]],[11,R[197],E,E,88,[[["self"]],[R[24]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[["self"]],[U]]],[11,R[196],E,E,89,[[[U]],[R[24]]]],[11,"borrow",E,E,89,[[["self"]],[T]]],[11,R[198],E,E,89,[[["self"]],["typeid"]]],[11,R[195],E,E,89,[[["self"]],[T]]],[11,R[197],E,E,89,[[["self"]],[R[24]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[["self"]],[U]]],[11,R[196],E,E,90,[[[U]],[R[24]]]],[11,"borrow",E,E,90,[[["self"]],[T]]],[11,R[198],E,E,90,[[["self"]],["typeid"]]],[11,R[195],E,E,90,[[["self"]],[T]]],[11,R[197],E,E,90,[[["self"]],[R[24]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[["self"]],[U]]],[11,R[196],E,E,91,[[[U]],[R[24]]]],[11,"borrow",E,E,91,[[["self"]],[T]]],[11,R[198],E,E,91,[[["self"]],["typeid"]]],[11,R[195],E,E,91,[[["self"]],[T]]],[11,R[197],E,E,91,[[["self"]],[R[24]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[["self"]],[U]]],[11,R[196],E,E,92,[[[U]],[R[24]]]],[11,"borrow",E,E,92,[[["self"]],[T]]],[11,R[198],E,E,92,[[["self"]],["typeid"]]],[11,R[195],E,E,92,[[["self"]],[T]]],[11,R[197],E,E,92,[[["self"]],[R[24]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,"into",E,E,93,[[["self"]],[U]]],[11,R[196],E,E,93,[[[U]],[R[24]]]],[11,"borrow",E,E,93,[[["self"]],[T]]],[11,R[198],E,E,93,[[["self"]],["typeid"]]],[11,R[195],E,E,93,[[["self"]],[T]]],[11,R[197],E,E,93,[[["self"]],[R[24]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[["self"]],[U]]],[11,R[196],E,E,94,[[[U]],[R[24]]]],[11,"borrow",E,E,94,[[["self"]],[T]]],[11,R[198],E,E,94,[[["self"]],["typeid"]]],[11,R[195],E,E,94,[[["self"]],[T]]],[11,R[197],E,E,94,[[["self"]],[R[24]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[["self"]],[U]]],[11,R[196],E,E,95,[[[U]],[R[24]]]],[11,"borrow",E,E,95,[[["self"]],[T]]],[11,R[198],E,E,95,[[["self"]],["typeid"]]],[11,R[195],E,E,95,[[["self"]],[T]]],[11,R[197],E,E,95,[[["self"]],[R[24]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[["self"]],[U]]],[11,R[196],E,E,96,[[[U]],[R[24]]]],[11,"borrow",E,E,96,[[["self"]],[T]]],[11,R[198],E,E,96,[[["self"]],["typeid"]]],[11,R[195],E,E,96,[[["self"]],[T]]],[11,R[197],E,E,96,[[["self"]],[R[24]]]],[11,"eq",E,E,6,[[["self"],[R[431]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[431]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[432]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[432]]],["bool"]]],[11,"clone",E,E,2,[[["self"]],["git_oid"]]],[11,"clone",E,E,3,[[["self"]],[R[433]]]],[11,"clone",E,E,4,[[["self"]],[R[434]]]],[11,"clone",E,E,6,[[["self"]],[R[431]]]],[11,"clone",E,E,16,[[["self"]],[R[435]]]],[11,"clone",E,E,21,[[["self"]],["git_buf"]]],[11,"clone",E,E,22,[[["self"]],[R[436]]]],[11,"clone",E,E,23,[[["self"]],[R[437]]]],[11,"clone",E,E,24,[[["self"]],[R[438]]]],[11,"clone",E,E,25,[[["self"]],[R[432]]]]],"p":[[3,R[439]],[3,R[440]],[3,"git_oid"],[3,R[433]],[3,R[434]],[3,R[441]],[3,R[431]],[3,R[442]],[3,R[339]],[3,R[443]],[3,R[444]],[3,R[445]],[3,R[446]],[3,"git_cert"],[3,R[447]],[3,R[448]],[3,R[435]],[3,R[449]],[3,R[450]],[3,R[451]],[3,R[452]],[3,"git_buf"],[3,R[436]],[3,R[437]],[3,R[438]],[3,R[432]],[3,R[453]],[3,R[454]],[3,R[455]],[3,"git_cred"],[3,R[456]],[3,R[380]],[3,R[457]],[3,R[458]],[3,R[459]],[3,R[460]],[3,R[461]],[3,R[462]],[3,R[463]],[3,R[464]],[3,R[465]],[3,R[466]],[3,R[467]],[3,R[468]],[3,R[469]],[3,R[470]],[3,R[471]],[3,R[472]],[3,R[473]],[3,R[474]],[3,R[420]],[3,R[475]],[3,R[476]],[4,"git_blob"],[4,R[477]],[4,R[478]],[4,R[479]],[4,R[480]],[4,R[481]],[4,R[482]],[4,R[483]],[4,R[484]],[4,R[485]],[4,R[486]],[4,R[487]],[4,R[488]],[4,R[489]],[4,R[490]],[4,R[491]],[4,R[492]],[4,R[493]],[4,"git_tag"],[4,"git_tree"],[4,R[494]],[4,R[495]],[4,"git_push"],[4,"git_note"],[4,R[496]],[4,R[497]],[4,R[498]],[4,R[499]],[4,"git_diff"],[4,R[500]],[4,R[501]],[4,R[502]],[4,R[503]],[4,R[504]],[4,R[505]],[4,R[506]],[4,"git_odb"],[4,R[507]],[4,R[508]],[4,R[509]],[4,R[510]],[4,R[511]],[4,R[512]],[4,R[513]]]};
searchIndex[R[337]]={"doc":"A crate for using libcurl as a backend for HTTP git…","i":[[5,"register",R[337],"Register the libcurl backend for HTTP requests made by…",N,[[["easy"]]]]],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);